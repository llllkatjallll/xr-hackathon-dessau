var Po=Object.defineProperty;var Do=(o,e,t)=>e in o?Po(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var _=(o,e,t)=>(Do(o,typeof e!="symbol"?e+"":e,t),t);import{serializable as P,AudioSource as St,Animator as Qs,Behaviour as j,GameObject as Z,TypeStore as z,RectTransform as Bo,Mathf as ve,OrbitControls as zn,Text as rs,NeedleXRSession as Ls,getTempVector as Me,Camera as Si,serializeable as X,WebXR as Fo,setWorldPosition as Hs,Rigidbody as rt,InstantiateOptions as Mo,Renderer as Xe,InstancingUtil as Oo,Button as kn,ActionBuilder as Ve,USDObject as Fs,BehaviorModel as pt,TriggerBuilder as ut,Volume as Ro,getWorldPosition as Pn,getParam as $e,Gizmos as ht,ParticleSystem as jn,setParamWithoutReload as Vs,EventList as be,setWorldQuaternion as Fr,getWorldQuaternion as Mr,WebXRImageTracking as _o,DeviceUtilities as De,LODGroup as Lo,syncField as Ut,showBalloonMessage as ae,AssetReference as yi,screenshot2 as Ho,DragControls as Uo,Animation as Gs,USDZExporter as Nn,isDevEnvironment as Ct,delay as Dn,SceneSwitcher as zo,RoomEvents as ko,Collider as Ws,LogType as xi,WaitForSeconds as bi,isMobileDevice as jo,NeedleMenu as No,getTempQuaternion as Qo,AnimationCurve as Vo,NeedleXRController as Or,XRControllerFollow as Go,delayForFrames as Qn,MeshRenderer as Wo,ParticleSystemShapeType as mn,isDestroyed as vi,instantiate as qo,AnimationExtension as $o,PlayAnimationOnClick as Rr,getOrAddComponent as Ko,FileReference as zt,findObjectOfType as wi,ImageReference as Yo,PlayableDirector as qs,destroy as Zo}from"./needle-engine@4.3.2.js";import{l as q,P as Ti,ay as Oe,v as ft,c as Ii,h as Ei,aQ as Ae,V as I,e as Pi,M as Le,T as Xo,r as $s,q as Jo,b as ee,bg as ea,bB as Di,bK as ta,cT as sa,cU as na,an as _r,Z as ra,cK as ia,cv as oa,cA as aa,cV as la,bq as ns,bx as gt,u as Vn,bA as ca,aK as Bi,B as Fi,ad as Lt,aa as Mi,bF as da,E as ha,bC as wt,bD as Tt,bE as Lr,W as pa,z as Ms,D as ua,ab as fa,o as qt,i as Yt,cW as ma,cX as Hr,cY as Ur,bo as zr,cZ as ga,ac as Bn,bk as Aa,F as kr,d as $t,x as ct,c_ as gn,H as jr,c$ as Ca,d0 as Sa,bj as Nr,d1 as Oi,a2 as ya,bH as xa,ax as ba,cS as va,j as wa,I as Ta,aJ as Ia}from"./three@0.169.5.js";import{C as Ea,a as Pa,b as Da}from"./three-examples.d909655c.js";import"./gltf-progressive.ff3ffb65.js";import"./three-mesh-ui.33bae730.js";import"./index-588cbad4.js";import"./three-quarks.ed2a961a.js";var Ba=Object.defineProperty,Fa=Object.getOwnPropertyDescriptor,Gn=(o,e,t,s)=>{for(var n=s>1?void 0:s?Fa(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Ba(e,t,n),n};const Fn=class extends j{constructor(){super(...arguments),this.myStringField="Hello World"}awake(){var o;(o=this.audioSource)==null||o.addEventListener("ended",this.onAudioEnded.bind(this))}checkAndPlay(){const o=Z.findObjectsOfType(Fn);for(const e of o)e.audioSource&&(e.audioSource!==this.audioSource&&e.audioSource.stop(),e.animator&&(e.animator.setTrigger("Stop"),console.log("Triggering animator to stop other orbs",e.animator)));this.audioSource&&(setTimeout(()=>{this.audioSource.play()},1e3),this.animator&&this.animator.setTrigger("Start"))}stopAll(){const o=Z.findObjectsOfType(Fn);for(const e of o)e.audioSource&&e.audioSource.stop(),e.animator&&e.animator.setTrigger("Stop")}onAudioEnded(){console.log("Audio ended"),this.animator&&(console.log("Triggering animator to stop"),this.animator.setTrigger("Stop"))}};let Ks=Fn;Gn([P()],Ks.prototype,"myStringField",2);Gn([P(St)],Ks.prototype,"audioSource",2);Gn([P(Qs)],Ks.prototype,"animator",2);z.add("Orb",Ks);var Ma=Object.defineProperty,Oa=Object.getOwnPropertyDescriptor,Ri=(o,e,t,s)=>{for(var n=s>1?void 0:s?Oa(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Ma(e,t,n),n};class Wn extends j{constructor(){super(...arguments),this.safeArea=new q(0,0)}update(){var n,r,i;const e=this.context.domWidth/this.safeArea.x,t=this.context.domHeight/this.safeArea.y,s=ve.clamp(Math.min(e,t),0,1);(n=this.rectTransform)==null||n.scale.setScalar(s),(i=(r=this.rectTransform)==null?void 0:r.shadowComponent)==null||i.scale.setScalar(s)}}Ri([P(Bo)],Wn.prototype,"rectTransform",2);Ri([P(q)],Wn.prototype,"safeArea",2);var Ra=Object.defineProperty,_a=Object.getOwnPropertyDescriptor,qn=(o,e,t,s)=>{for(var n=s>1?void 0:s?_a(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Ra(e,t,n),n};class Ys extends j{constructor(){super(...arguments),this.createMenuButton=!1,this.teleportVRPlayer=!1,this.ignoreYInVR=!1,this.menuButton=null}get orbitalCamera(){return this._orbitalCamera??(this._orbitalCamera=Z.findObjectOfType(zn)),this._orbitalCamera}awake(){this.createMenuButton&&this.addButton()}addButton(){var s;this.menuButton&&this.removeButton();const e=((s=this.gameObject.getComponentInChildren(rs))==null?void 0:s.text)??this.gameObject.name,t=document.createElement("button");this.menuButton=t,t.innerText=e.replace("_"," "),t.setAttribute("priority","40"),t.addEventListener("click",()=>this.use()),this.context.menu.appendChild(t)}removeButton(){this.menuButton&&(this.menuButton.remove(),this.menuButton=null)}use(){var t,s;(t=this.orbitalCamera)==null||t.setCameraTargetPosition(this.worldPosition);const e=(s=Ls.active)==null?void 0:s.rig;if(this.teleportVRPlayer&&this.context.isInVR&&e){const n=Me(this.worldPosition);this.ignoreYInVR&&(n.y=e.gameObject.worldPosition.y),e.gameObject.worldPosition=n}}}qn([P()],Ys.prototype,"createMenuButton",2);qn([P()],Ys.prototype,"teleportVRPlayer",2);qn([P()],Ys.prototype,"ignoreYInVR",2);class La extends j{constructor(){super(...arguments),this.cam=null}onEnable(){this.cam=this.gameObject.getComponent(Si),this.cam||(console.warn("CameraLayer requires a Camera component"),this.enabled=!1)}onAfterRender(){if(!this.cam)return;const e=this.scene.background;this.context.renderer.autoClearColor=!1,this.cam.cam instanceof Ti&&this.context.updateAspect(this.cam.cam),this.scene.background=null,this.context.renderer.render(this.scene,this.cam.cam),this.scene.background=e}}var Ha=Object.defineProperty,Ua=Object.getOwnPropertyDescriptor,Zs=(o,e,t,s)=>{for(var n=s>1?void 0:s?Ua(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Ha(e,t,n),n};class is extends j{constructor(){super(...arguments),this.strength=10,this.maxInstances=10,this._instances=[],this._index=-1,this._onPointerDown=e=>{e.button===0&&this.throwBall(e.space.worldPosition,e.space.worldForward)}}start(){this.prefab&&Z.setActive(this.prefab,!1),this.webXR??(this.webXR=Z.findObjectOfType(Fo))}onEnable(){this.context.input.addEventListener("pointerdown",this._onPointerDown)}onDisable(){this.context.input.removeEventListener("pointerdown",this._onPointerDown)}throwBall(e,t){var i,a;if(!this.prefab)return;if(this._instances.length<this.maxInstances){const l=new Mo;l.position=e;const c=Z.instantiate(this.prefab,l);if(!c)return;this._instances.push(c)}const s=++this._index,n=this._instances[s%this._instances.length];if(!n)return;Hs(n,e),Z.setActive(n,!0),(i=this.audioSource)==null||i.stop(),(a=this.audioSource)==null||a.play();const r=Z.getComponent(n,rt);r&&(t.multiplyScalar(this.strength),r.resetForcesAndTorques(),r.resetVelocities(),r==null||r.applyImpulse(t))}}Zs([X(Oe)],is.prototype,"prefab",2);Zs([X(St)],is.prototype,"audioSource",2);Zs([X()],is.prototype,"strength",2);Zs([X()],is.prototype,"maxInstances",2);var za=Object.defineProperty,ka=Object.getOwnPropertyDescriptor,_i=(o,e,t,s)=>{for(var n=s>1?void 0:s?ka(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&za(e,t,n),n};class $n extends j{constructor(){super(...arguments),this.applyOnStart=!0,this.randomMetallicRoughness=!0}start(){{const e=this.gameObject.getComponent(Xe);if(!e)return;for(let t=0;t<e.sharedMaterials.length;t++)e.sharedMaterials[t]=e.sharedMaterials[t].clone()}this.applyOnStart&&this.applyRandomColor()}applyRandomColor(){const e=this.gameObject.getComponent(Xe);if(!e){console.warn("Can not change color: No renderer on "+this.name);return}for(let t=0;t<e.sharedMaterials.length;t++){const s=e.sharedMaterials[t];s.color=new ft(Math.random(),Math.random(),Math.random()),this.randomMetallicRoughness&&s instanceof Ii&&(s.metalness=Math.random(),s.roughness=Math.random()*Math.random()),s.needsUpdate=!0,Oo.markDirty(this.gameObject)}}}_i([X()],$n.prototype,"applyOnStart",2);_i([X()],$n.prototype,"randomMetallicRoughness",2);class ja extends j{constructor(){super(...arguments),this.renderer=null,this.collisionCount=0}start(){if(this.renderer=this.gameObject.getComponent(Xe),!!this.renderer){this._startColor||(this._startColor=[]);for(let e=0;e<this.renderer.sharedMaterials.length;e++)this.renderer.sharedMaterials[e]=this.renderer.sharedMaterials[e].clone(),this._startColor[e]=this.renderer.sharedMaterials[e].color.clone()}}onCollisionEnter(e){if(this.renderer){this.collisionCount+=1;for(let t=0;t<this.renderer.sharedMaterials.length;t++)this.renderer.sharedMaterials[t].color.setRGB(Math.random(),Math.random(),Math.random())}}onCollisionExit(e){if(!(!this.renderer||!this._startColor)&&(this.collisionCount-=1,this.collisionCount===0))for(let t=0;t<this.renderer.sharedMaterials.length;t++)this.renderer.sharedMaterials[t].color.copy(this._startColor[t])}}var Na=Object.defineProperty,Qa=Object.getOwnPropertyDescriptor,Va=(o,e,t,s)=>{for(var n=s>1?void 0:s?Qa(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Na(e,t,n),n};class Li extends j{update(){this.myMaterial&&(this.myMaterial._Speed*=1+this.context.time.deltaTime,this.myMaterial._Speed>1&&(this.myMaterial._Speed=5e-4),this.context.time.frame%30===0&&console.log(this.myMaterial._Speed))}}Va([P(Ei)],Li.prototype,"myMaterial",2);var Ga=Object.defineProperty,Wa=Object.getOwnPropertyDescriptor,qa=(o,e,t,s)=>{for(var n=s>1?void 0:s?Wa(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Ga(e,t,n),n};class Hi extends j{click(){var e,t;(t=(e=this.buttonToClick)==null?void 0:e.onClick)==null||t.invoke()}}qa([P(kn)],Hi.prototype,"buttonToClick",2);var $a=Object.defineProperty,Ka=Object.getOwnPropertyDescriptor,Ya=(o,e,t,s)=>{for(var n=s>1?void 0:s?Ka(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&$a(e,t,n),n};class Ui extends j{constructor(){super(...arguments),this.objectToMatrix=new Map}start(){var e;(e=this.target)==null||e.traverse(t=>{this.objectToMatrix.set(t,t.matrix.clone())})}onPointerClick(e){for(const[t,s]of this.objectToMatrix)t.matrix.copy(s),t.matrix.decompose(t.position,t.quaternion,t.scale),t.matrixWorldNeedsUpdate=!0}createBehaviours(e,t,s){if(t.uuid!==this.gameObject.uuid||!this.target)return;const n=Ve.parallel();for(const[l,c]of this.objectToMatrix){const d=Fs.createEmpty();d.matrix=c,l.parent&&d.matrix.premultiply(l.parent.matrixWorld),s.document.add(d),n.addAction(Ve.transformAction(l,d,0,"absolute","none"))}const r=new pt("click_to_reset",ut.tapTrigger(this.gameObject),n);e.addBehavior(r);const i=Fs.createEmpty();i.name="InputTarget",i.displayName=void 0,i.type="RealityKitComponent",i.onSerialize=l=>{l.appendLine("bool allowsDirectInput = 1"),l.appendLine("bool allowsIndirectInput = 1"),l.appendLine('uniform token info:id = "RealityKit.InputTarget"')},t.add(i);const a=Fs.createEmpty();a.name="HoverEffect",a.displayName=void 0,a.type="RealityKitComponent",a.onSerialize=l=>{l.appendLine('uniform token info:id = "RealityKit.HoverEffect"')},t.add(a)}}Ya([P(Z)],Ui.prototype,"target",2);var Za=Object.defineProperty,Xa=Object.getOwnPropertyDescriptor,Kn=(o,e,t,s)=>{for(var n=s>1?void 0:s?Xa(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Za(e,t,n),n};class Xs extends j{constructor(){super(...arguments),this.apertureMultiplier=2,this.focalLength=.001,this.focusDistanceCutoff=25,this.volume=null,this.dofEffect=void 0}onEnable(){var e,t,s;this.volume=Z.findObjectOfType(Ro),this.dofEffect=(s=(t=(e=this.volume)==null?void 0:e.sharedProfile)==null?void 0:t.components)==null?void 0:s.find(n=>n.typeName==="DepthOfField"),this.orbit=Z.findObjectOfType(zn)}onBeforeRender(){var t;if(!((t=this.orbit)!=null&&t.controls))return;const e=this.orbit.controls.target.distanceTo(Pn(this.orbit.gameObject));if(this.dofEffect){this.dofEffect.focusDistance.value=e,this.dofEffect.focalLength.value=this.focalLength;let s=ve.inverseLerp(0,this.focusDistanceCutoff,e);s=ve.clamp01(s),this.dofEffect.aperture.value=ve.lerp(this.apertureMultiplier,32,s);const n=this.focusDistanceCutoff;e>n&&this.dofEffect.active?this.dofEffect.active=!1:e<n&&!this.dofEffect.active&&(this.dofEffect.active=!0)}}}Kn([P()],Xs.prototype,"apertureMultiplier",2);Kn([P()],Xs.prototype,"focalLength",2);Kn([P()],Xs.prototype,"focusDistanceCutoff",2);class Ja extends j{constructor(){super(...arguments),this._previousEnvironmentTexture=null}onEnable(){this._previousEnvironmentTexture=this.context.scene.environment,this.context.scene.environment=null}onDisable(){this.context.scene.environment=this._previousEnvironmentTexture}}var el=Object.defineProperty,tl=Object.getOwnPropertyDescriptor,sl=(o,e,t,s)=>{for(var n=s>1?void 0:s?tl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&el(e,t,n),n};const nl=$e("sample_debugParticlesOnClick");class zi extends j{constructor(){super(...arguments),this.particleSystems=[]}update(){if(!this.context.isInVR&&this.context.input.getPointerClicked(0)){const e=this.context.physics.raycast();e.length>0&&this.spawnParticlesAt(e[0].point)}}onUpdateXR(e){e.xr.controllers.forEach(t=>{var s,n;if(((s=t.getButton("primary"))==null?void 0:s.isDown)===!0){const r=(n=this.context.physics.raycastFromRay(t.ray))==null?void 0:n.at(0);r&&this.spawnParticlesAt(r.point)}})}spawnParticlesAt(e){Hs(this.gameObject,e),nl&&ht.DrawWireSphere(e,.5,16711680,1);for(const t of this.particleSystems)t&&(Z.setActive(t.gameObject,!0),t.play())}}sl([X(jn)],zi.prototype,"particleSystems",2);var rl=Object.defineProperty,il=Object.getOwnPropertyDescriptor,ol=(o,e,t,s)=>{for(var n=s>1?void 0:s?il(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&rl(e,t,n),n};class ki extends j{constructor(){super(...arguments),this.parameters=[]}awake(){var e=!1;this.parameters.forEach(t=>{$e(t)||(Vs(t,""),e=!0)}),e&&window.location.reload()}}ol([P()],ki.prototype,"parameters",2);var al=Object.defineProperty,ll=Object.getOwnPropertyDescriptor,ji=(o,e,t,s)=>{for(var n=s>1?void 0:s?ll(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&al(e,t,n),n};class Yn extends j{constructor(){super(...arguments),this.htmlSelector="button.some-button",this.onClick=new be,this.onClicked=()=>{this.onClick.invoke()}}onEnable(){this.element=document.querySelector(this.htmlSelector),this.element?this.element.addEventListener("click",this.onClicked):console.warn(`Could not find element with selector "${this.htmlSelector}"`)}onDisable(){this.element&&this.element.removeEventListener("click",this.onClicked)}}ji([X()],Yn.prototype,"htmlSelector",2);ji([P(be)],Yn.prototype,"onClick",2);var cl=Object.defineProperty,dl=Object.getOwnPropertyDescriptor,Ni=(o,e,t,s)=>{for(var n=s>1?void 0:s?dl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&cl(e,t,n),n};class Zn extends j{constructor(){super(...arguments),this.createdElements=[]}onEnable(){var e;if(!(!this.methods||!this.names))for(let t=0;t<this.methods.length;t++){const s=this.methods[t];let n="Button";t<((e=this.names)==null?void 0:e.length)&&(n=this.names[t]);const r=document.createElement("button");r.innerHTML=n,r.onclick=()=>{s.invoke()},this.context.menu.appendChild(r),this.createdElements.push(r)}}onDisable(){for(const e of this.createdElements)e.remove()}reloadPageInSeconds(e){setTimeout(()=>{location.reload()},e*1e3)}}Ni([P(be)],Zn.prototype,"methods",2);Ni([P()],Zn.prototype,"names",2);var hl=Object.defineProperty,pl=Object.getOwnPropertyDescriptor,Js=(o,e,t,s)=>{for(var n=s>1?void 0:s?pl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&hl(e,t,n),n};class os extends j{constructor(){super(...arguments),this.url="https://www.youtube.com/embed/puWNRrG4MCg",this.pixelsPerUnit=500,this.borderRadius=50,this.animator=null,this.rotate90=new Ae().setFromAxisAngle(new I(0,1,0),Math.PI)}start(){const e=$e("url");e&&(this.url=e);const t=document.createElement("div");t.innerHTML='<iframe width="1000" height="1000" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; xr-spatial-tracking; xr" allowfullscreen></iframe>',t.style.zIndex="10000",t.style.position="absolute",t.style.pointerEvents="initial";const s=t.querySelector("iframe");s.addEventListener("load",()=>{setTimeout(()=>{var l;console.log("Automatically opening iframe"),(l=this.animator)==null||l.SetBool("Open",!0)},1e3)}),s.src=this.url;let n=1e3;const r=Math.round(this.gameObject.scale.x*this.pixelsPerUnit),i=Math.round(this.gameObject.scale.y*this.pixelsPerUnit);n=Math.max(r,i),s.width=r+"px",s.height=i+"px",t.style.position="absolute",this.borderRadius>0&&(t.style.borderRadius=this.borderRadius+"px"),t.style.pointerEvents="initial",document.body.append(t),this.cssRenderer=new Ea,this.cssRenderer.domElement.style.pointerEvents="none",this.cssRenderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.top="0px",document.body.append(this.cssRenderer.domElement),this.cssScene=new Pi;const a=new Pa(t);a.scale.setScalar(Math.max(this.gameObject.scale.x,this.gameObject.scale.y)/n),Hs(a,Pn(this.gameObject)),Fr(a,Mr(this.gameObject)),a.quaternion.multiply(this.rotate90),this.cssScene.add(a),this.cssObj=a,this.context.post_render_callbacks.push(this.onPostRender.bind(this))}onPostRender(){if(!this.cssObj||!this.cssRenderer||!this.cssScene)return;Hs(this.cssObj,Pn(this.gameObject)),Fr(this.cssObj,Mr(this.gameObject)),this.cssObj.quaternion.multiply(this.rotate90);const e=this.context.mainCamera,t=this.gameObject;var s=e.position.clone().sub(this.gameObject.position).normalize(),n=t.getWorldDirection(new I);const r=s.dot(n);this.cssObj.visible=r<.15;const i=this.cssRenderer.getSize();(i.width!==this.context.domWidth||i.height!==this.context.domHeight)&&this.cssRenderer.setSize(this.context.domWidth,this.context.domHeight),this.cssRenderer.render(this.cssScene,this.context.mainCamera)}}Js([X()],os.prototype,"url",2);Js([X()],os.prototype,"pixelsPerUnit",2);Js([X()],os.prototype,"borderRadius",2);Js([X(Qs)],os.prototype,"animator",2);class ul extends j{constructor(){super(...arguments),this._ui=null,this._incubationsHint=null,this._components=[]}onEnable(){var n;(n=this._ui)==null||n.remove(),this._components=Z.findObjectsOfType(_o);const e=document.createElement("div");e.style.cssText=`
            font-family: 'Roboto flex', Ariel;
            position: absolute;
            top: 1em;
            left: 1em;
            line-height: 1.5em;
            display: block;
            width: 200px;
        `,this.context.domElement.appendChild(e),this._ui=e;const t=document.createElement("h2");t.style.cssText=`
            margin-bottom: .7em;
        `,t.innerText="Sample Images",e.appendChild(t);const s=document.createElement("p");s.innerHTML=`Download the image and print it or you can also open the image in your browser
        <br><strong>Then enter AR and scan it with your camera.</strong>
        <br>Visit our <a target="_blank" href="https://docs.needle.tools/image-tracking">ImageTracking documentation</a> for more information.
        `,s.style.userSelect="all",e.appendChild(s);for(const r of this._components)this.createDownloadImageUI(r,e)}onDisable(){var e;(e=this._ui)==null||e.remove()}update(){var e;this.context.isInAR?(e=this._ui)==null||e.remove():this._ui&&!this._ui.parentNode&&this.context.domElement.appendChild(this._ui)}onUpdateXR(e){if(e.xr.frame&&!("getImageTrackingResults"in e.xr.frame)&&!this._incubationsHint&&this._ui&&De.isAndroidDevice()){const t=document.createElement("p");t.style.cssText=`
                    background: rgba(255, 100, 100, .7);
                    border-radius: .5rem;
                    padding: .4rem;
                `,t.innerText="WebXR ImageTracking is not enabled. Go to chrome://flags/#webxr-incubations and enable #webxr-incubations",this._ui.append(t),this._incubationsHint=t}}createDownloadImageUI(e,t){if(e.trackedImages)for(const s of e.trackedImages){if(!s.image)continue;const n=document.createElement("a");n.href=s.image,n.target="_blank",t.appendChild(n);const r=document.createElement("img");r.src=s.image,r.style.cssText=`
                min-width: 180px;
                max-width: 220px;
                width: 15vw;
                height: auto;
                aspect-ratio: 1.3;
                object-fit: cover;
                background: rgba(0,0,0,0.5);
                border-radius: 10px;
                border: 2px solid rgba(255,255,255,1);
                box-shadow: 0 0 10px rgba(0,0,0,.2);
                margin-left: -.5em;
            `,n.appendChild(r)}}}var fl=Object.defineProperty,ml=Object.getOwnPropertyDescriptor,Qi=(o,e,t,s)=>{for(var n=s>1?void 0:s?ml(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&fl(e,t,n),n};class Xn extends j{constructor(){super(...arguments),this.tempVec1=new I,this.tempVec2=new I}update(){if(!this.lodGroup||!this.text)return;const e=this.context.mainCamera;e.getWorldPosition(this.tempVec1),this.gameObject.getWorldPosition(this.tempVec2);const t=this.tempVec1.distanceTo(this.tempVec2)/e.zoom,s=this.lodGroup._lodsHandler;let n=null;s==null||s.forEach(r=>{var c,d;const i=r.levels[r.getCurrentLevel()],a=r.levels.at(r.getCurrentLevel()+1);let l=null;if(i.object instanceof Le){const h=i.object.geometry.attributes,u=Math.floor(((c=h.position)==null?void 0:c.count)||0);l=`Triangles: ${Math.floor((((d=h.index)==null?void 0:d.count)||u)/3)}, Vertices: ${u}`}i.object.name.replace(/_/g,""),i.object.name.includes("Cull")||(n="",l&&(n+=`${l}
`),a==null||a.hysteresis,n+=`${i.distance.toFixed(1)} / ${t.toFixed(1)}`,a&&(n+=` / ${(a.distance-a.distance*a.hysteresis).toFixed(1)}`))}),n||(n="culled"),this.text.text=n}}Qi([P(Lo)],Xn.prototype,"lodGroup",2);Qi([P(rs)],Xn.prototype,"text",2);var gl=Object.defineProperty,Al=Object.getOwnPropertyDescriptor,Jn=(o,e,t,s)=>{for(var n=s>1?void 0:s?Al(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&gl(e,t,n),n};class Mn extends j{onColorChanged(){typeof this.color=="number"&&(this.color=new ft(this.color)),this.setColorToMaterials()}onPointerClick(e){const t=new ft(Math.random(),Math.random(),Math.random());this.color=t}onEnable(){ae("<strong>Click an object</strong> to change the color. Open this window in another browser tab/window to see the networking in action..."),this.setColorToMaterials()}setColorToMaterials(){var t;const e=this.gameObject.getComponent(Xe);if(e)for(let s=0;s<e.sharedMaterials.length;s++){const n=(t=e.sharedMaterials[s])==null?void 0:t.clone();e.sharedMaterials[s]=n,n&&"color"in n&&(n.color=this.color)}else console.warn("No renderer found",this.gameObject)}}Jn([Ut(Mn.prototype.onColorChanged),P(ft)],Mn.prototype,"color",2);class On extends j{constructor(){super(...arguments),this.myArray=[],this.updateArray=()=>{const e=new Date().toLocaleTimeString();console.log("> Update array",e),this.myArray.length>10&&(console.log("Clearing array because we have reached 10 entries"),this.myArray.length=0),this.myArray.push(e),this.myArray=this.myArray,ae(`<strong>> Send</strong> "${e}", ${this.myArray.length} elements`)}}onArrayChanged(){console.log("< Received array",this.myArray[this.myArray.length-1],this.myArray),ae(`<strong>< Received</strong> "${this.myArray[this.myArray.length-1]}", we now have ${this.myArray.length} elements`)}start(){ae("Open this window in another browser tab/window to see the networking in action..."),setInterval(this.updateArray,4e3)}}Jn([Ut(On.prototype.onArrayChanged)],On.prototype,"myArray",2);class Cl{constructor(){this.name="",this.age=0}}class Rn extends j{constructor(){super(...arguments),this.myObject=new Cl,this.updateObject=()=>{this.myObject.name=this.context.connection.connectionId,this.myObject.age+=1,this.myObject=this.myObject,console.log("> Updated",this.myObject),ae('<strong>> Sent</strong> "'+this.myObject.name+'" is '+this.myObject.age+" years old")}}onObjectChanged(){console.log("< Received object",this.myObject),ae(`<strong>< Received</strong> "${this.myObject.name}" is ${this.myObject.age} years old`)}awake(){ae("Open this window in another browser tab/window to see the networking in action..."),setInterval(this.updateObject,5e3)}}Jn([Ut(Rn.prototype.onObjectChanged)],Rn.prototype,"myObject",2);var Sl=Object.defineProperty,yl=Object.getOwnPropertyDescriptor,Vi=(o,e,t,s)=>{for(var n=s>1?void 0:s?yl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Sl(e,t,n),n};class er extends j{constructor(){super(...arguments),this.clampFrameRate=!0,this._clampFrameRate=!1,this.maxFrameRate=72,this._maxFrameRate=-1024}update(){if(this._clampFrameRate!==this.clampFrameRate||this._maxFrameRate!==this.maxFrameRate){const e=this.clampFrameRate?this.maxFrameRate:void 0;this.context.targetFrameRate=e,this._clampFrameRate=this.clampFrameRate,this._maxFrameRate=this.maxFrameRate}}setTarget(e){this.maxFrameRate=e,this.clampFrameRate=!0}setClamping(e){this.clampFrameRate=e}}Vi([P()],er.prototype,"clampFrameRate",2);Vi([P()],er.prototype,"maxFrameRate",2);var xl=Object.defineProperty,bl=Object.getOwnPropertyDescriptor,en=(o,e,t,s)=>{for(var n=s>1?void 0:s?bl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&xl(e,t,n),n};class as extends j{constructor(){super(...arguments),this.width=1024,this.height=1024,this.prefab=null}takePhoto(){const e=Ho({type:"texture",camera:this.camera,width:this.width,height:this.height});this.prefab&&e instanceof Xo&&this.prefab.instantiate(this.scene).then(t=>{if(!t)return;setTimeout(()=>{t.destroy()},2e3),t==null||t.position.set(0,3,0),t==null||t.getOrAddComponent(Uo);const s=t==null?void 0:t.getComponentInChildren(rt);s&&(s.teleport(this.gameObject.worldPosition.add({x:0,y:.5,z:0})),s.setAngularVelocity(Math.random()-.5,Math.random()-.5,Math.random()*2-1),s.applyImpulse(this.gameObject.worldForward.add({x:0,y:2,z:0}).normalize().multiplyScalar(.01)));const n=t==null?void 0:t.getComponentInChildren(Xe);if(n){const r=n.sharedMaterial.clone()||new Ii;r&&"map"in r&&(r.map=e,r.side=$s),n.sharedMaterial=r}})}}en([P(Si)],as.prototype,"camera",2);en([P()],as.prototype,"width",2);en([P()],as.prototype,"height",2);en([P(yi)],as.prototype,"prefab",2);var vl=Object.defineProperty,wl=Object.getOwnPropertyDescriptor,mt=(o,e,t,s)=>{for(var n=s>1?void 0:s?wl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&vl(e,t,n),n};class ls extends j{constructor(){super(...arguments),this.logEvents=!1}onCollisionEnter(e){var t;this.logEvents&&console.log("ENTER",e),(t=this.onEnter)==null||t.invoke(e)}onCollisionStay(e){var t;this.logEvents&&console.log("STAY",e),(t=this.onStay)==null||t.invoke(e)}onCollisionExit(e){var t;this.logEvents&&console.log("EXIT",e),(t=this.onExit)==null||t.invoke(e)}}mt([X(be)],ls.prototype,"onEnter",2);mt([X(be)],ls.prototype,"onStay",2);mt([X(be)],ls.prototype,"onExit",2);mt([X()],ls.prototype,"logEvents",2);class cs extends j{onTriggerEnter(e){var t,s;this.triggerObjects&&this.triggerObjects.length>0&&!((t=this.triggerObjects)!=null&&t.includes(e.gameObject))||(s=this.onEnter)==null||s.invoke()}onTriggerStay(e){var t,s;this.triggerObjects&&this.triggerObjects.length>0&&!((t=this.triggerObjects)!=null&&t.includes(e.gameObject))||(s=this.onStay)==null||s.invoke()}onTriggerExit(e){var t,s;this.triggerObjects&&this.triggerObjects.length>0&&!((t=this.triggerObjects)!=null&&t.includes(e.gameObject))||(s=this.onExit)==null||s.invoke()}}mt([X(Z)],cs.prototype,"triggerObjects",2);mt([X(be)],cs.prototype,"onEnter",2);mt([X(be)],cs.prototype,"onStay",2);mt([X(be)],cs.prototype,"onExit",2);var Tl=Object.defineProperty,Il=Object.getOwnPropertyDescriptor,El=(o,e,t,s)=>{for(var n=s>1?void 0:s?Il(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Tl(e,t,n),n};class Gi extends j{constructor(){super(...arguments),this._lastTriggerTime=0}onTriggerEnter(e){this.context.time.time-this._lastTriggerTime<.3||(this._lastTriggerTime=this.context.time.time,this.animation&&this.animation.play(0,{loop:!1}))}onTriggerExit(){}}El([X(Gs)],Gi.prototype,"animation",2);var Pl=Object.defineProperty,Dl=Object.getOwnPropertyDescriptor,Bl=(o,e,t,s)=>{for(var n=s>1?void 0:s?Dl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Pl(e,t,n),n};class Wi extends j{onTriggerEnter(){var e,t;(e=this.animation)!=null&&e.isPlaying||(t=this.animation)==null||t.play(0,{loop:!1})}}Bl([X(Gs)],Wi.prototype,"animation",2);var Fl=Object.defineProperty,Ml=Object.getOwnPropertyDescriptor,Ol=(o,e,t,s)=>{for(var n=s>1?void 0:s?Ml(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Fl(e,t,n),n};class qi extends j{onCollisionEnter(){var e,t;(e=this.audioSource)==null||e.stop(),(t=this.audioSource)==null||t.play()}}Ol([X(St)],qi.prototype,"audioSource",2);class Rl extends j{onEnable(){const e=Z.findObjectOfType(Nn);e==null||e.addEventListener("before-export",()=>{this.resetAnimations()})}onEnterXR(e){this.resetAnimations()}resetAnimations(){console.warn("Resetting animations and audio for XR export.");const e=Z.findObjectsOfType(Gs);for(const s of e)s.actions.forEach(n=>{n.reset(),n.time=0,n.play()});const t=Z.findObjectsOfType(St);for(const s of t)s.stop(),s.play()}}var _l=Object.defineProperty,Ll=Object.getOwnPropertyDescriptor,$i=(o,e,t,s)=>{for(var n=s>1?void 0:s?Ll(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&_l(e,t,n),n};class tr extends j{constructor(){super(...arguments),this.referenceSize=512,this.updateSize=()=>{if(this.content){if(this.referenceSize<=0)return console.error("ResponsiveContent: Base width must be greater than 0.");const e=this.context.domWidth/this.referenceSize;this.content.scale.set(e,e,e)}else Ct()&&console.warn("ResponsiveContent: No content object set.")}}onEnable(){window.addEventListener("resize",this.updateSize),this.updateSize()}onDisable(){window.removeEventListener("resize",this.updateSize)}}$i([P(Oe)],tr.prototype,"content",2);$i([P()],tr.prototype,"referenceSize",2);var Hl=Object.defineProperty,Ul=Object.getOwnPropertyDescriptor,sr=(o,e,t,s)=>{for(var n=s>1?void 0:s?Ul(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Hl(e,t,n),n};class Ki extends j{async sceneOpened(){var e;(e=this.animator)==null||e.setBool("SceneOpen",!0),this._htmlElement=this._getHtmlElement(),this.context.domElement.appendChild(this._htmlElement)}async sceneClosing(){var e,t;await Dn(1e3),(e=this.animator)==null||e.setBool("SceneOpen",!1),await Dn(1e3),(t=this._htmlElement)==null||t.remove()}_getHtmlElement(){if(!this._htmlElement){this._htmlElement=document.createElement("div"),this._htmlElement.style.cssText=`
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                display: flex;
                justify-content: center;
                align-items: center;
                // backdrop-filter: blur(10px);
            `;const e=document.createElement("img");e.src="https://engine.needle.tools/branding/needle-logo.png",this._htmlElement.appendChild(e)}return this._htmlElement}}sr([P(Qs)],Ki.prototype,"animator",2);class nr extends j{sceneOpened(){var e;return Ct()&&console.log("Scene opened",this.name),(e=this.opened)==null||e.invoke(),Promise.resolve()}sceneClosing(){var e;return Ct()&&console.log("Scene closing",this.name),(e=this.closing)==null||e.invoke(),Promise.resolve()}}sr([P(be)],nr.prototype,"opened",2);sr([P(be)],nr.prototype,"closing",2);class zl extends j{next(){var e;this.switcher??(this.switcher=this.get()),console.log(this.switcher),(e=this.switcher)==null||e.selectNext()}previous(){var e;this.switcher??(this.switcher=this.get()),(e=this.switcher)==null||e.selectPrev()}get(){return Z.findObjectOfType(zo)}}class kl extends j{awake(){const e=this.gameObject.getComponent(Xe);if(e!=null&&e.sharedMaterials)for(const t of e.sharedMaterials)t&&(t.side=Jo)}}var jl=Object.defineProperty,Nl=Object.getOwnPropertyDescriptor,Ql=(o,e,t,s)=>{for(var n=s>1?void 0:s?Nl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&jl(e,t,n),n};class Yi extends j{constructor(){super(...arguments),this.text=""}start(){ae(this.text)}}Ql([P()],Yi.prototype,"text",2);var Vl=Object.defineProperty,Gl=Object.getOwnPropertyDescriptor,Wl=(o,e,t,s)=>{for(var n=s>1?void 0:s?Gl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Vl(e,t,n),n};const ql=$e("testleaderboard");class _n extends j{constructor(){super(...arguments),this._ready=!1}get ready(){return this._ready}onEnable(){this.context.connection.beginListen(ko.JoinedRoom,async()=>{await Dn(100),this.context.connection.tryGetState(this.guid)||(this.data={scores:[]}),this._ready=!0}),ql?(console.log("Enabled test leaderboard, adding random scores"),setInterval(()=>{this.insertScore("Player",Math.floor(Math.random()*1e3))},2e3)):Ct()&&ae("You can add ?testleaderboard to the url to test the leaderboard")}insertScore(e,t){if(!this._ready){console.warn("Cannot insert score, data not received yet");return}const s=10,n=this.data.scores;for(;n.length>=s;){this.sortScores();const r=n.pop();if(r.score>t){console.log(`Score ${t} is lower than ${r==null?void 0:r.score} (lowest score), ignoring`),n.push(r);return}}console.log("Inserting score",e,t),n.push({name:e,score:t}),this.sortScores(),this.data=this.data}sortScores(){this.data.scores.sort((e,t)=>t.score-e.score)}onDataChanged(e){if(console.warn("Data changed!",e,this.data.scores),this.data.scores.length>0){const t=this.data.scores[0];ae("HIGHSCORE - "+t.name+": "+t.score)}this.dispatchEvent(new CustomEvent("changed",{detail:this.data}))}}Wl([Ut(_n.prototype.onDataChanged)],_n.prototype,"data",2);var $l=Object.defineProperty,Kl=Object.getOwnPropertyDescriptor,Yl=(o,e,t,s)=>{for(var n=s>1?void 0:s?Kl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&$l(e,t,n),n};class Zi extends j{start(){this.updateStartPosition();const e=Z.findObjectOfType(Nn);e&&e.addEventListener("before-export",()=>{this.resetToStart()})}updateStartPosition(){this.gameObject.updateMatrix(),this.startPosition=this.gameObject.position.clone(),this.startMatrix=this.gameObject.matrix.clone()}resetToStart(){if(!this.startPosition)return;const e=Z.getComponent(this.gameObject,rt);e==null||e.teleport(this.startPosition)}}class Xi extends Zi{start(){super.start(),this.worldCollider||console.warn("Missing collider to reset",this)}onTriggerExit(e){e===this.worldCollider&&this.resetToStart()}createBehaviours(e,t,s){if(t.uuid!==this.gameObject.uuid||!this.startPosition||!this.startMatrix)return;const n=Fs.createEmpty();this.gameObject.parent?n.matrix=this.gameObject.parent.matrixWorld.clone().multiply(this.startMatrix):n.matrix=this.startMatrix,s.document.add(n);const r=new pt("_reset_"+this.name+"_afterTime",ut.sceneStartTrigger(),Ve.sequence(Ve.waitAction(Math.random()*4+1),Ve.sequence(Ve.transformAction(this.gameObject,n,0,"absolute","none"),Ve.waitAction(5)).makeLooping())).makeExclusive(!0);e.addBehavior(r)}}Yl([X(Ws)],Xi.prototype,"worldCollider",2);var Zl=Object.defineProperty,Xl=Object.getOwnPropertyDescriptor,Jl=(o,e,t,s)=>{for(var n=s>1?void 0:s?Xl(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Zl(e,t,n),n};class Ji extends j{constructor(){super(...arguments),this.roomId="",this.playerCount=0}update(){const e=this.context.connection;let t=!1;e.currentRoomName&&e.currentRoomName!==this.roomId&&(this.roomId=e.currentRoomName,t=!0),e.usersInRoom().length!==this.playerCount&&(this.playerCount=e.usersInRoom().length,t=!0),t&&this.connectionLabel&&(this.connectionLabel.text=`Room: ${this.roomId}
Users: ${this.playerCount}
Your id: ${e.connectionId}`)}}Jl([P(rs)],Ji.prototype,"connectionLabel",2);var ec=Object.defineProperty,tc=Object.getOwnPropertyDescriptor,sc=(o,e,t,s)=>{for(var n=s>1?void 0:s?tc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&ec(e,t,n),n};class eo extends j{constructor(){super(...arguments),this.interval=1e3,this.max=100,this.spawned=0}awake(){if(!this.object){console.warn("TimedSpawn: no object to spawn"),ae("TimedSpawn: no object to spawn",xi.Warn);return}Z.setActive(this.object,!1),this.startCoroutine(this.spawn())}*spawn(){if(this.object)for(;this.spawned<this.max;){const e=Z.instantiate(this.object);Z.setActive(e,!0),this.spawned+=1,yield bi(this.interval/1e3)}}}sc([X(Z)],eo.prototype,"object",2);var nc=Object.defineProperty,rc=Object.getOwnPropertyDescriptor,ic=(o,e,t,s)=>{for(var n=s>1?void 0:s?rc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&nc(e,t,n),n};class to extends j{constructor(){super(...arguments),this.onlyMobile=!1}awake(){if(this.onlyMobile&&!jo())return;const e=this.gameObject.getComponent(No);e&&(e.position="top")}}ic([P()],to.prototype,"onlyMobile",2);class oc extends j{constructor(){super(...arguments),this._video=null}async onEnable(){this._video??(this._video=document.createElement("video")),this._video.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            object-fit: cover;
        `,this.context.domElement.shadowRoot.appendChild(this._video);const e=await navigator.mediaDevices.getUserMedia({video:!0});!e||!this.enabled||(this._video.srcObject=e,this._video.play())}onDisable(){var e,t;(e=this._video)==null||e.pause(),(t=this._video)==null||t.remove()}}var ac=Object.defineProperty,lc=Object.getOwnPropertyDescriptor,tn=(o,e,t,s)=>{for(var n=s>1?void 0:s?lc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&ac(e,t,n),n};class ds extends j{constructor(){super(...arguments),this.interval=3,this.resetPosition=!0,this.resetRotation=!1,this.resetVelocity=!1}start(){const e=this.gameObject.position.clone(),t=this.gameObject.rotation.clone(),s=this.gameObject.getComponent(rt),n=this.context.time.frame;setInterval(()=>{this.resetPosition&&this.gameObject.position.copy(e),this.resetRotation&&this.gameObject.rotation.copy(t),s&&this.resetVelocity&&this.context.time.frame!==n&&s.resetVelocities()},this.interval*1e3)}}tn([P()],ds.prototype,"interval",2);tn([P()],ds.prototype,"resetPosition",2);tn([P()],ds.prototype,"resetRotation",2);tn([P()],ds.prototype,"resetVelocity",2);class cc extends j{constructor(){super(...arguments),this.toggleRendererOnly=!1}start(){setInterval(()=>{if(ae('This is a sample for showing how to <a href="https://engine.needle.tools/docs/scripting.html#component-architecture" target="_blank">toggle visibility of a GameObject</a>'),this.toggleRendererOnly){const e=this.gameObject.getComponent(Xe);e&&(e.enabled=!e.enabled)}else this.gameObject.visible=!this.gameObject.visible},1e3)}}var dc=Object.defineProperty,hc=Object.getOwnPropertyDescriptor,pc=(o,e,t,s)=>{for(var n=s>1?void 0:s?hc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&dc(e,t,n),n};class so extends j{awake(){this.material&&(this.material.wireframe=!0)}}pc([P(Ei)],so.prototype,"material",2);var uc=Object.defineProperty,fc=Object.getOwnPropertyDescriptor,no=(o,e,t,s)=>{for(var n=s>1?void 0:s?fc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&uc(e,t,n),n};class rr extends j{constructor(){super(...arguments),this.onSessionStart=new be,this.onSessionEnd=new be}onEnterXR(e){this.onWebXRStarted()}onExitXR(e){this.onWebXREnded()}onWebXRStarted(){this.onSessionStart.invoke()}onWebXREnded(){this.onSessionEnd.invoke()}}no([P(be)],rr.prototype,"onSessionStart",2);no([P(be)],rr.prototype,"onSessionEnd",2);const vs=$e("debugbodytracking");class mc extends j{constructor(){super(...arguments),this.jointPositions=new Map,this.size=new I(.01,.01,.01),this.hasWarnedForName=new Set}onEnable(){vs&&console.log(Qr.join(`
`))}onBeforeXR(e,t){t.optionalFeatures=t.optionalFeatures||[],t.optionalFeatures.includes("body-tracking")||t.optionalFeatures.push("body-tracking")}onUpdateXR(e){const t=e.xr.frame;if(!t)return;const s=e.xr.rig.gameObject,n=this.context.renderer.xr.getReferenceSpace();if(t.session&&"body"in t&&n){const r=t.body;if(!r)return;r.forEach(i=>{const a=t.getPose(i,n);if(!a)return;const l=a.transform.position,c=Me();c.copy(l),c.x*=-1,c.z*=-1,s.localToWorld(c);const d=i.jointName;this.jointPositions.has(d)||this.jointPositions.set(d,new I),this.jointPositions.get(d).copy(c),vs&&ht.DrawWireBox(c,this.size,16711680,void 0,!1);const h=Me();h.copy(l),h.x*=-1,s.localToWorld(h);const u=i.jointName+"-flipped";this.jointPositions.has(u)||this.jointPositions.set(u,new I),this.jointPositions.get(u).copy(h),vs&&ht.DrawWireBox(h,this.size,65280,void 0,!1);const p=Qr.indexOf(d);vs&&ht.DrawLabel(h,p.toString(),.015,void 0,16777215,85),p<0&&(this.hasWarnedForName.has(d)||(this.hasWarnedForName.add(d),console.warn("Wrong name: "+d+" -> "+p+". Please report a bug.")))});for(const i of gc){const a=this.jointPositions.get(i.from),l=this.jointPositions.get(i.to);if(a&&l){ht.DrawLine(a,l,16776960,void 0,!1);const c=this.jointPositions.get(i.from+"-flipped"),d=this.jointPositions.get(i.to+"-flipped");c&&d&&ht.DrawLine(c,d,65535,void 0,!1)}}}}}var ro=(o=>(o[o.root=0]="root",o[o.hips=1]="hips",o[o["spine-lower"]=2]="spine-lower",o[o["spine-middle"]=3]="spine-middle",o[o["spine-upper"]=4]="spine-upper",o[o.chest=5]="chest",o[o.neck=6]="neck",o[o.head=7]="head",o[o["left-shoulder"]=8]="left-shoulder",o[o["left-scapula"]=9]="left-scapula",o[o["left-arm-upper"]=10]="left-arm-upper",o[o["left-arm-lower"]=11]="left-arm-lower",o[o["left-hand-wrist-twist"]=12]="left-hand-wrist-twist",o[o["right-shoulder"]=13]="right-shoulder",o[o["right-scapula"]=14]="right-scapula",o[o["right-arm-upper"]=15]="right-arm-upper",o[o["right-arm-lower"]=16]="right-arm-lower",o[o["right-hand-wrist-twist"]=17]="right-hand-wrist-twist",o[o["left-hand-palm"]=18]="left-hand-palm",o[o["left-hand-wrist"]=19]="left-hand-wrist",o[o["left-hand-thumb-metacarpal"]=20]="left-hand-thumb-metacarpal",o[o["left-hand-thumb-phalanx-proximal"]=21]="left-hand-thumb-phalanx-proximal",o[o["left-hand-thumb-phalanx-distal"]=22]="left-hand-thumb-phalanx-distal",o[o["left-hand-thumb-tip"]=23]="left-hand-thumb-tip",o[o["left-hand-index-metacarpal"]=24]="left-hand-index-metacarpal",o[o["left-hand-index-phalanx-proximal"]=25]="left-hand-index-phalanx-proximal",o[o["left-hand-index-phalanx-intermediate"]=26]="left-hand-index-phalanx-intermediate",o[o["left-hand-index-phalanx-distal"]=27]="left-hand-index-phalanx-distal",o[o["left-hand-index-tip"]=28]="left-hand-index-tip",o[o["left-hand-middle-phalanx-metacarpal"]=29]="left-hand-middle-phalanx-metacarpal",o[o["left-hand-middle-phalanx-proximal"]=30]="left-hand-middle-phalanx-proximal",o[o["left-hand-middle-phalanx-intermediate"]=31]="left-hand-middle-phalanx-intermediate",o[o["left-hand-middle-phalanx-distal"]=32]="left-hand-middle-phalanx-distal",o[o["left-hand-middle-tip"]=33]="left-hand-middle-tip",o[o["left-hand-ring-metacarpal"]=34]="left-hand-ring-metacarpal",o[o["left-hand-ring-phalanx-proximal"]=35]="left-hand-ring-phalanx-proximal",o[o["left-hand-ring-phalanx-intermediate"]=36]="left-hand-ring-phalanx-intermediate",o[o["left-hand-ring-phalanx-distal"]=37]="left-hand-ring-phalanx-distal",o[o["left-hand-ring-tip"]=38]="left-hand-ring-tip",o[o["left-hand-little-metacarpal"]=39]="left-hand-little-metacarpal",o[o["left-hand-little-phalanx-proximal"]=40]="left-hand-little-phalanx-proximal",o[o["left-hand-little-phalanx-intermediate"]=41]="left-hand-little-phalanx-intermediate",o[o["left-hand-little-phalanx-distal"]=42]="left-hand-little-phalanx-distal",o[o["left-hand-little-tip"]=43]="left-hand-little-tip",o[o["right-hand-palm"]=44]="right-hand-palm",o[o["right-hand-wrist"]=45]="right-hand-wrist",o[o["right-hand-thumb-metacarpal"]=46]="right-hand-thumb-metacarpal",o[o["right-hand-thumb-phalanx-proximal"]=47]="right-hand-thumb-phalanx-proximal",o[o["right-hand-thumb-phalanx-distal"]=48]="right-hand-thumb-phalanx-distal",o[o["right-hand-thumb-tip"]=49]="right-hand-thumb-tip",o[o["right-hand-index-metacarpal"]=50]="right-hand-index-metacarpal",o[o["right-hand-index-phalanx-proximal"]=51]="right-hand-index-phalanx-proximal",o[o["right-hand-index-phalanx-intermediate"]=52]="right-hand-index-phalanx-intermediate",o[o["right-hand-index-phalanx-distal"]=53]="right-hand-index-phalanx-distal",o[o["right-hand-index-tip"]=54]="right-hand-index-tip",o[o["right-hand-middle-metacarpal"]=55]="right-hand-middle-metacarpal",o[o["right-hand-middle-phalanx-proximal"]=56]="right-hand-middle-phalanx-proximal",o[o["right-hand-middle-phalanx-intermediate"]=57]="right-hand-middle-phalanx-intermediate",o[o["right-hand-middle-phalanx-distal"]=58]="right-hand-middle-phalanx-distal",o[o["right-hand-middle-tip"]=59]="right-hand-middle-tip",o[o["right-hand-ring-metacarpal"]=60]="right-hand-ring-metacarpal",o[o["right-hand-ring-phalanx-proximal"]=61]="right-hand-ring-phalanx-proximal",o[o["right-hand-ring-phalanx-intermediate"]=62]="right-hand-ring-phalanx-intermediate",o[o["right-hand-ring-phalanx-distal"]=63]="right-hand-ring-phalanx-distal",o[o["right-hand-ring-tip"]=64]="right-hand-ring-tip",o[o["right-hand-little-metacarpal"]=65]="right-hand-little-metacarpal",o[o["right-hand-little-phalanx-proximal"]=66]="right-hand-little-phalanx-proximal",o[o["right-hand-little-phalanx-intermediate"]=67]="right-hand-little-phalanx-intermediate",o[o["right-hand-little-phalanx-distal"]=68]="right-hand-little-phalanx-distal",o[o["right-hand-little-tip"]=69]="right-hand-little-tip",o[o["left-upper-leg"]=70]="left-upper-leg",o[o["left-lower-leg"]=71]="left-lower-leg",o[o["left-foot-ankle-twist"]=72]="left-foot-ankle-twist",o[o["left-foot-ankle"]=73]="left-foot-ankle",o[o["left-foot-subtalar"]=74]="left-foot-subtalar",o[o["left-foot-transverse"]=75]="left-foot-transverse",o[o["left-foot-ball"]=76]="left-foot-ball",o[o["right-upper-leg"]=77]="right-upper-leg",o[o["right-lower-leg"]=78]="right-lower-leg",o[o["right-foot-ankle-twist"]=79]="right-foot-ankle-twist",o[o["right-foot-ankle"]=80]="right-foot-ankle",o[o["right-foot-subtalar"]=81]="right-foot-subtalar",o[o["right-foot-transverse"]=82]="right-foot-transverse",o[o["right-foot-ball"]=83]="right-foot-ball",o))(ro||{});const Qr=Object.values(ro),gc=[{from:"hips",to:"spine-lower"},{from:"spine-lower",to:"spine-middle"},{from:"spine-middle",to:"spine-upper"},{from:"spine-upper",to:"chest"},{from:"chest",to:"neck"},{from:"neck",to:"head"},{from:"chest",to:"left-shoulder"},{from:"left-shoulder",to:"left-scapula"},{from:"left-scapula",to:"left-arm-upper"},{from:"left-arm-upper",to:"left-arm-lower"},{from:"left-arm-lower",to:"left-hand-wrist-twist"},{from:"left-hand-wrist-twist",to:"left-hand-wrist"},{from:"left-hand-wrist",to:"left-hand-palm"},{from:"left-hand-wrist",to:"left-hand-thumb-metacarpal"},{from:"left-hand-thumb-metacarpal",to:"left-hand-thumb-phalanx-proximal"},{from:"left-hand-thumb-phalanx-proximal",to:"left-hand-thumb-phalanx-distal"},{from:"left-hand-thumb-phalanx-distal",to:"left-hand-thumb-tip"},{from:"left-hand-wrist",to:"left-hand-index-metacarpal"},{from:"left-hand-index-metacarpal",to:"left-hand-index-phalanx-proximal"},{from:"left-hand-index-phalanx-proximal",to:"left-hand-index-phalanx-intermediate"},{from:"left-hand-index-phalanx-intermediate",to:"left-hand-index-phalanx-distal"},{from:"left-hand-index-phalanx-distal",to:"left-hand-index-tip"},{from:"left-hand-wrist",to:"left-hand-middle-phalanx-metacarpal"},{from:"left-hand-middle-phalanx-metacarpal",to:"left-hand-middle-phalanx-proximal"},{from:"left-hand-middle-phalanx-proximal",to:"left-hand-middle-phalanx-intermediate"},{from:"left-hand-middle-phalanx-intermediate",to:"left-hand-middle-phalanx-distal"},{from:"left-hand-middle-phalanx-distal",to:"left-hand-middle-tip"},{from:"left-hand-wrist",to:"left-hand-ring-metacarpal"},{from:"left-hand-ring-metacarpal",to:"left-hand-ring-phalanx-proximal"},{from:"left-hand-ring-phalanx-proximal",to:"left-hand-ring-phalanx-intermediate"},{from:"left-hand-ring-phalanx-intermediate",to:"left-hand-ring-phalanx-distal"},{from:"left-hand-ring-phalanx-distal",to:"left-hand-ring-tip"},{from:"left-hand-wrist",to:"left-hand-little-metacarpal"},{from:"left-hand-little-metacarpal",to:"left-hand-little-phalanx-proximal"},{from:"left-hand-little-phalanx-proximal",to:"left-hand-little-phalanx-intermediate"},{from:"left-hand-little-phalanx-intermediate",to:"left-hand-little-phalanx-distal"},{from:"left-hand-little-phalanx-distal",to:"left-hand-little-tip"},{from:"chest",to:"right-shoulder"},{from:"right-shoulder",to:"right-scapula"},{from:"right-scapula",to:"right-arm-upper"},{from:"right-arm-upper",to:"right-arm-lower"},{from:"right-arm-lower",to:"right-hand-wrist-twist"},{from:"right-hand-wrist-twist",to:"right-hand-wrist"},{from:"right-hand-wrist",to:"right-hand-palm"},{from:"right-hand-wrist",to:"right-hand-thumb-metacarpal"},{from:"right-hand-thumb-metacarpal",to:"right-hand-thumb-phalanx-proximal"},{from:"right-hand-thumb-phalanx-proximal",to:"right-hand-thumb-phalanx-distal"},{from:"right-hand-thumb-phalanx-distal",to:"right-hand-thumb-tip"},{from:"right-hand-wrist",to:"right-hand-index-metacarpal"},{from:"right-hand-index-metacarpal",to:"right-hand-index-phalanx-proximal"},{from:"right-hand-index-phalanx-proximal",to:"right-hand-index-phalanx-intermediate"},{from:"right-hand-index-phalanx-intermediate",to:"right-hand-index-phalanx-distal"},{from:"right-hand-index-phalanx-distal",to:"right-hand-index-tip"},{from:"right-hand-wrist",to:"right-hand-middle-metacarpal"},{from:"right-hand-middle-metacarpal",to:"right-hand-middle-phalanx-proximal"},{from:"right-hand-middle-phalanx-proximal",to:"right-hand-middle-phalanx-intermediate"},{from:"right-hand-middle-phalanx-intermediate",to:"right-hand-middle-phalanx-distal"},{from:"right-hand-middle-phalanx-distal",to:"right-hand-middle-tip"},{from:"right-hand-wrist",to:"right-hand-ring-metacarpal"},{from:"right-hand-ring-metacarpal",to:"right-hand-ring-phalanx-proximal"},{from:"right-hand-ring-phalanx-proximal",to:"right-hand-ring-phalanx-intermediate"},{from:"right-hand-ring-phalanx-intermediate",to:"right-hand-ring-phalanx-distal"},{from:"right-hand-ring-phalanx-distal",to:"right-hand-ring-tip"},{from:"right-hand-wrist",to:"right-hand-little-metacarpal"},{from:"right-hand-little-metacarpal",to:"right-hand-little-phalanx-proximal"},{from:"right-hand-little-phalanx-proximal",to:"right-hand-little-phalanx-intermediate"},{from:"right-hand-little-phalanx-intermediate",to:"right-hand-little-phalanx-distal"},{from:"right-hand-little-phalanx-distal",to:"right-hand-little-tip"},{from:"hips",to:"left-upper-leg"},{from:"left-upper-leg",to:"left-lower-leg"},{from:"left-lower-leg",to:"left-foot-ankle-twist"},{from:"left-foot-ankle-twist",to:"left-foot-ankle"},{from:"left-foot-ankle",to:"left-foot-subtalar"},{from:"left-foot-subtalar",to:"left-foot-transverse"},{from:"left-foot-transverse",to:"left-foot-ball"},{from:"hips",to:"right-upper-leg"},{from:"right-upper-leg",to:"right-lower-leg"},{from:"right-lower-leg",to:"right-foot-ankle-twist"},{from:"right-foot-ankle-twist",to:"right-foot-ankle"},{from:"right-foot-ankle",to:"right-foot-subtalar"},{from:"right-foot-subtalar",to:"right-foot-transverse"},{from:"right-foot-transverse",to:"right-foot-ball"}];var Ac=Object.defineProperty,Cc=Object.getOwnPropertyDescriptor,Sc=(o,e,t,s)=>{for(var n=s>1?void 0:s?Cc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Ac(e,t,n),n};class ir extends j{constructor(){super(...arguments),this.destroyTarget=!1,this._startTime=0}awake(){if(this._rigidbody=this.gameObject.getComponentInParent(rt)||void 0,this._rigidbody){const e=this.gameObject.getComponentsInChildren(Ws);for(const t of e){const s=Z.addComponent(t.gameObject,yc);s.rigidBody=this._rigidbody,s.arrow=this,s.audioOnImpact=this.audioOnImpact,s.destroyTarget=this.destroyTarget}}this._startTime=this.context.time.time}onBeforeRender(){if(this.context.time.time-this._startTime>5){this.gameObject.destroy();return}if(this._rigidbody){const e=this._rigidbody.getVelocity();if(e.lengthSq()>0){const t=Me().set(e.x,e.y,e.z).normalize(),s=Qo();s.setFromUnitVectors(Me(0,0,1),t),this.gameObject.quaternion.copy(s)}}}}Sc([P(St)],ir.prototype,"audioOnImpact",2);class yc extends j{constructor(){super(...arguments),this.destroyTarget=!1}onCollisionEnter(e){var t,s;if(this.arrow)if((t=this.audioOnImpact)==null||t.stop(),(s=this.audioOnImpact)==null||s.play(),this.destroyTarget)e.gameObject.destroy(),this.arrow.gameObject.destroy();else{e.gameObject.attach(this.arrow.gameObject),e.rigidBody instanceof rt&&e.rigidBody.applyImpulse(e.gameObject.position.clone().multiply(this.rigidBody.getVelocity()),!0);const n=this.rigidBody.gameObject.getComponentsInChildren(Ws);for(const r of n)r.destroy();this.rigidBody.destroy(),this.arrow.destroy()}}}var xc=Object.defineProperty,bc=Object.getOwnPropertyDescriptor,it=(o,e,t,s)=>{for(var n=s>1?void 0:s?bc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&xc(e,t,n),n};const Vr=$e("debugarrow");class Je extends j{constructor(){super(...arguments),this.power=1.5,this.drawMaxPhysicalDistance=.47269,this.drawMinPhysicalDistance=.1132593,this._tempLookMatrix=new ee,this._tempLookRot=new Ae,this._lastShotTimestamp=Number.MIN_SAFE_INTEGER,this._isAiming=!1,this._bowController=void 0,this._stringController=void 0,this._controllerFollow=null,this._aimingPointerStartPos=new I,this._initialBowObjectRotation=new Ae,this._initialBowObjectPosition=new I,this._screenDragRaycaster=new ea,this._screenDragPlane=new Di,this._screenDragRayLine=new ta,this.onDown=e=>{e.origin instanceof Or?e.button===0&&(this._bowController===void 0?(this._bowController=e.origin.index,this.bowObject.quaternion.copy(this._initialBowObjectRotation)):this._stringController===void 0&&(this._stringController=e.origin.index),this._bowController===this._stringController&&(this._stringController=void 0),this._controllerFollow&&(this._controllerFollow.side=this._bowController,this._controllerFollow.enabled=this._bowController!==void 0),this._isAiming=this._stringController!==void 0):e.button===0&&(this._isAiming=!0,this._stringPointerId=e.pointerId,this.getScreenDragPoint(e.pointerId,this._aimingPointerStartPos))},this.onRelease=e=>{var t;if(e.button===0){if(e.origin instanceof Or){const s=e.origin;if(this._isAiming&&s.index===this._stringController&&s.index!==this._bowController&&typeof this._bowController=="number"){const n=(t=Ls.active)==null?void 0:t.getController(this._bowController);if(s&&n){const r=s.gripWorldPosition;if(r){const i=n.gripWorldPosition.clone().sub(r);let a=n.object.worldPosition.distanceTo(s.object.worldPosition);a-=this.drawMinPhysicalDistance;const l=ve.clamp01(a/this.drawMaxPhysicalDistance)*this.power;i.normalize().multiplyScalar(l),this.shoot(r,i),Vr&&ht.DrawArrow(r,i.clone().add(r),16776960,1)}}}s.index===this._bowController&&(this._bowController=void 0),s.index===this._stringController&&(this._stringController=void 0),this._isAiming=this._bowController!==void 0&&this._stringController!==void 0,this._controllerFollow&&(this._controllerFollow.enabled=this._bowController!==void 0)}else{const s=this._aimingPointerStartPos,n=this.getScreenDragPoint(this._stringPointerId,Me()),r=this.arrowSpawnSpot.getWorldPosition(Me()),i=this.bowObject.getWorldDirection(Me()).multiplyScalar(-1),a=s.distanceTo(n),l=ve.clamp01(a/this.drawMaxPhysicalDistance)*this.power;i.normalize().multiplyScalar(l),this.shoot(r,i)}this._stringPointerId=void 0}}}get _hasControllers(){var e;return(((e=this.context.xr)==null?void 0:e.controllers.length)??0)>0}awake(){var e;(e=this.arrowPrefab)!=null&&e.asset&&(this.arrowPrefab.asset.visible=!1)}async onEnable(){var e;await((e=this.arrowPrefab)==null?void 0:e.loadAssetAsync()),this._isAiming=!1,this._controllerFollow=this.bowObject.getComponentInParent(Go)||null,this._initialBowObjectRotation=this.bowObject.quaternion.clone(),this._initialBowObjectPosition=this.bowObject.position.clone(),this._screenDragPlane.setFromNormalAndCoplanarPoint(Me(0,1,-.2),this.bowObject.worldPosition),this.context.input.addEventListener("pointerdown",this.onDown),this.context.input.addEventListener("pointerup",this.onRelease),this.setupArrowInstances()}onDisable(){this._isAiming=!1,this.context.input.removeEventListener("pointerdown",this.onDown),this.context.input.removeEventListener("pointerup",this.onRelease)}onLeaveXR(){this.bowObject.quaternion.copy(this._initialBowObjectRotation),this.bowObject.position.copy(this._initialBowObjectPosition)}getPointerDistanceTo(e,t){const s=this.context.input.getPointerPosition(t);return e.distanceTo(s)}async setupArrowInstances(){var t,s,n;if(!this.arrowPrefab||!this.arrowSpawnSpot||this._drawingArrow)return;const e=await this.arrowPrefab.instantiate({parent:this.arrowSpawnSpot});e&&(e.visible=!0,e.worldScale=Me(1,1,1),this._drawingArrow=e,(t=e.getComponent(ir))==null||t.destroy(),(s=e.getComponent(rt))==null||s.destroy(),(n=e.getComponentInChildren(jn))==null||n.destroy(),e.getComponentsInChildren(Ws).forEach(r=>r.destroy()))}async shoot(e,t){var c,d;if(!this.arrowPrefab)return;this._lastShotTimestamp=this.context.time.time;const s=e.clone(),n=s.clone().add(t),r=Math.pow(t.length()+.5,2),i=t.clone().normalize(),a=await this.arrowPrefab.instantiate({parent:this.context.scene});if(!a){console.error("Failed to instantiate arrow prefab, please check that objects are assigned correctly.");return}a.worldPosition=s,a.lookAt(n),a.visible=!0;const l=a.getComponent(rt);l&&(l.isKinematic=!1,l.autoMass=!1,l.mass=.05,(c=this.sound)==null||c.stop(),(d=this.sound)==null||d.play(),await Qn(1),l.applyImpulse(i.multiplyScalar(r),!0))}getScreenDragPoint(e,t){const s=this.context.input.getPointerPositionRC(e);this._screenDragRaycaster.setFromCamera(s,this.context.mainCamera);const n=this._screenDragRaycaster.ray;return this._screenDragRayLine.set(n.origin,n.direction.multiplyScalar(1e5)),this._screenDragPlane.intersectLine(this._screenDragRayLine,t)||t.set(0,0,0),Vr&&ht.DrawWireSphere(t,.01,16711680,1),t}onBeforeRender(){if(!this.animationComponent||!this.bowObject)return;if(!this._mixer){this._mixer=new sa(this.bowObject);const l=this.animationComponent.animations.at(0);l&&(this._animation=this._mixer.clipAction(l))}const e=.1;let t=0;const s=Me(),n=Me(),r=Me(this.bowObject.worldUp);if(this._hasControllers){if(!this._isAiming)t=0,this._lastShotTimestamp=this.context.time.time;else if(this.context.xr&&this.context.xr.controllers.length>1&&this._bowController!==void 0&&this._stringController!==void 0){const l=this.context.xr.controllers[this._stringController],c=this.context.xr.controllers[this._bowController];if(!l||!c)return;s.copy(l.gripWorldPosition),n.copy(c.gripWorldPosition)}}else this._stringPointerId!==void 0&&(n.copy(this._aimingPointerStartPos),s.copy(this.getScreenDragPoint(this._stringPointerId,Me())));if(this._isAiming&&s.dot(s)>0&&n.dot(n)>0){let l=s.distanceTo(n);t=ve.clamp01((l-this.drawMinPhysicalDistance)/this.drawMaxPhysicalDistance),l>.025&&(this._tempLookMatrix.lookAt(s,n,r),this._tempLookRot.setFromRotationMatrix(this._tempLookMatrix),this.bowObject.worldQuaternion=this._tempLookRot)}this.drawProgression&&(t=this.drawProgression.evaluate(t)),!this._isAiming&&!this._hasControllers&&(t=.25),this._animation.timeScale=0;const i=ve.lerp(this._animation.time,t,this.context.time.deltaTime/e),a=this._animation.time;if(this._animation.time=i,Math.abs(i-a)>Number.EPSILON&&(this._animation.setEffectiveWeight(1),this._animation.play()),this._mixer.update(this.context.time.deltaTime),this._drawingArrow){let c=(this.context.time.time-this._lastShotTimestamp)/.3;c=this.easeInOutSine(ve.clamp01(c)),this._drawingArrow.worldScale=Me(1,1,1).multiplyScalar(c)}}easeInOutSine(e){return ve.clamp01(-.5*(Math.cos(Math.PI*e)-1))}}it([P(Oe)],Je.prototype,"bowObject",2);it([P(Gs)],Je.prototype,"animationComponent",2);it([P(yi)],Je.prototype,"arrowPrefab",2);it([P(Oe)],Je.prototype,"arrowSpawnSpot",2);it([P()],Je.prototype,"power",2);it([P(Vo)],Je.prototype,"drawProgression",2);it([P()],Je.prototype,"drawMaxPhysicalDistance",2);it([P()],Je.prototype,"drawMinPhysicalDistance",2);it([P(St)],Je.prototype,"sound",2);var vc=Object.defineProperty,wc=Object.getOwnPropertyDescriptor,Tc=(o,e,t,s)=>{for(var n=s>1?void 0:s?wc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&vc(e,t,n),n};class io extends j{start(){this._meshRenderer=this.gameObject.getComponentInChildren(Wo)}onDestroy(){if(this.gameObject.visible&&this.particleSystem){if(this.particleSystem.shape.shapeType===mn.MeshRenderer&&this._meshRenderer&&!vi(this._meshRenderer.gameObject)){this.particleSystem.shape.shapeType=mn.MeshRenderer,this.particleSystem.shape.setMesh(this._meshRenderer),this.particleSystem.play();return}this.particleSystem.shape.shapeType=mn.Sphere,this.particleSystem.worldPosition=this.gameObject.worldPosition,this.particleSystem.play()}}}Tc([P(jn)],io.prototype,"particleSystem",2);var Ic=Object.defineProperty,Ec=Object.getOwnPropertyDescriptor,Pc=(o,e,t,s)=>{for(var n=s>1?void 0:s?Ec(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Ic(e,t,n),n};class oo extends j{constructor(){super(...arguments),this._instances=new Array}awake(){var e,t;if(!((e=this.prefabs)!=null&&e.length)||((t=this.prefabs)==null?void 0:t.length)===0){console.warn("BowTargetSpawner start: no prefab set"),this.enabled=!1;return}this.prefabs.forEach(s=>s.visible=!1)}update(){var t;if(!((t=this.prefabs)!=null&&t.length))return;const e=Me();for(let s=this._instances.length-1;s>=0;s--){const n=this._instances[s];vi(n.instance)?this._instances.splice(s,1):(e.setScalar(n.scale),n.instance.scale.lerp(e,this.context.time.deltaTime))}if(this.context.time.frame%20===0&&Math.random()>.5){const s=this.worldPosition;s.x+=Math.random()*12-6,s.y+=Math.random()*3,s.z+=Math.random()*6;const n=Math.random()*3+.5,r=this.prefabs[Math.floor(Math.random()*this.prefabs.length)],i=qo(r,{parent:this.scene,position:s.clone(),scale:new I(.01,.01,.01),keepWorldPosition:!0});i.visible=!0,this._instances.push({instance:i,scale:n}),setTimeout(()=>{i.destroy()},7e3),Qn(1).then(()=>{const a=i.getComponentInChildren(rt);a&&(a.gravityScale=.2+Math.random()*.3,a.mass=2,a.autoMass=!1),a==null||a.setAngularVelocity(ve.random(-2,2),ve.random(-2,2),ve.random(-2,2)),a==null||a.applyImpulse({x:0,y:5+Math.random()*12,z:0})})}}}Pc([P(Oe)],oo.prototype,"prefabs",2);class Dc extends j{awake(){this.context.renderer.toneMapping=na,_r.occlusion_fragment=_r.occlusion_fragment.replace("gl_FragColor *= 1.0 - occlusion;",`
float depthMm = Depth_GetCameraDepthInMeters(depthColor, depthUv, arrayIndex);

// requires also patching ShaderChunk.occlusion_pars_fragment and adding some noise function
// float noise = snoise(gl_FragCoord.xy * 0.005);
// depthMm += noise * 0.002;

float absDistance = abs(assetDepthM - depthMm);
float v = 0.0025;
absDistance = saturate(v - absDistance) / v;

gl_FragColor.rgb += vec3(absDistance * 2.0, absDistance * 2.0, absDistance * 12.0);
gl_FragColor = mix(gl_FragColor, vec4(0.0, 0.0, 0.0, 0.0), occlusion * 0.7);
`)}}class Bc extends j{constructor(){super(...arguments),this.interval=-1,this.supportsAR=!1,this.supportsVR=!1}async onEnable(){this.log(!0),this.interval=setInterval(()=>this.log(),500),this.supportsAR=await Ls.isARSupported(),this.supportsVR=await Ls.isVRSupported()}onDisable(){clearInterval(this.interval)}async log(e=!1){e&&(console.log("UserAgent",window.navigator.userAgent),console.log("isMobileDevice",De.isMobileDevice()),console.log("isiOSDevice",De.isiOS()),console.log("isMozillaXR",De.isMozillaXR()),console.log("isSafari",De.isSafari()),console.log("isQuest",De.isQuest()),console.log("isMacOS",De.isMacOS()),console.log("isVisionOS",De.isVisionOS())),ae("AR: "+t(this.supportsAR)+", VR: "+t(this.supportsVR)+", QuickLook: "+t(De.supportsQuickLookAR())),De.isMobileDevice()?De.isiOS()?ae("iOS 🍎"):window.navigator.userAgent.indexOf("Android")>-1?ae("Android 🤖"):ae("Other Mobile 📱"):De.isDesktop()?ae("Desktop 🖥️"):ae("Other Device 🌏"),De.isMobileDevice()&&De.isiOS()&&De.isSafari()?ae("Safari 🌏"):De.isMozillaXR()?ae("Mozilla XR 🦊"):De.isQuest()?ae("Quest 🎮"):window.navigator.userAgent.indexOf("Chrome")>-1?ae("Chrome 🌏"):ae("Other Browser 🌏"),ae("UserAgent: "+window.navigator.userAgent);function t(s){return s?"✅":"❌"}}}class Fc extends j{onEnable(){const e=Z.findObjectOfType(Nn);e&&(e.anchoringType="plane",e.planeAnchoringAlignment="vertical")}}var Mc=Object.defineProperty,Oc=Object.getOwnPropertyDescriptor,hs=(o,e,t,s)=>{for(var n=s>1?void 0:s?Oc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Mc(e,t,n),n};class kt extends j{constructor(){super(...arguments),this.distance=.5,this.fadeDuration=1,this.targetState=!0,this.hideOnStart=!0,this.tempVector=new I}start(){this.hideOnStart&&!De.isiOS()&&this.target.scale.set(0,0,0)}update(){this.tempVector.copy(this.context.mainCameraComponent.worldPosition),this.tempVector.sub(this.worldPosition).length()<this.distance&&(this.enabled=!1)}createBehaviours(e,t,s){if(t.uuid===this.gameObject.uuid){const n=this.target?this.target:this.gameObject;this.hideOnStart&&e.addBehavior(new pt("SetActiveOnProximity_active_"+this.gameObject.name,ut.sceneStartTrigger(),Ve.fadeAction(n,0,!this.targetState))),e.addBehavior(new pt("SetActiveOnProximity_"+this.gameObject.name,ut.proximityToCameraTrigger(this.gameObject,this.distance),Ve.fadeAction(n,this.fadeDuration,this.targetState)))}}}hs([P(Z)],kt.prototype,"target",2);hs([P()],kt.prototype,"distance",2);hs([P()],kt.prototype,"fadeDuration",2);hs([P()],kt.prototype,"targetState",2);hs([P()],kt.prototype,"hideOnStart",2);var Rc=Object.defineProperty,_c=Object.getOwnPropertyDescriptor,or=(o,e,t,s)=>{for(var n=s>1?void 0:s?_c(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Rc(e,t,n),n};class sn extends j{constructor(){super(...arguments),this.getCloseClip="",this.distance=.5,this.lastDistance=void 0}update(){const e=this.gameObject.worldPosition.distanceTo(this.context.mainCameraComponent.worldPosition);this.lastDistance!==void 0&&e<this.distance&&this.lastDistance>=this.distance&&this.target.play(this.getCloseClip),this.lastDistance=e}createBehaviours(e,t,s){if(t.uuid===this.gameObject.uuid){const n=this.target?this.target.gameObject:this.gameObject,r=s.extensions.find(l=>l instanceof $o);if(!r){console.warn("No AnimationExtension found",s.extensions);return}let i;const a=Rr.getAndRegisterAnimationSequences(r,n,this.getCloseClip);if(a)i=Rr.getActionForSequences(n,a.animationSequence,a.animationLoopAfterSequence,a.randomTimeOffset);else{console.warn("No animation sequence found for "+this.getCloseClip,a);return}e.addBehavior(new pt("PlayAnimationOnProximity_"+this.gameObject.name,ut.proximityToCameraTrigger(this.gameObject,this.distance),i));return}}}or([P(Qs)],sn.prototype,"target",2);or([P()],sn.prototype,"getCloseClip",2);or([P()],sn.prototype,"distance",2);var Lc=Object.defineProperty,Hc=Object.getOwnPropertyDescriptor,nn=(o,e,t,s)=>{for(var n=s>1?void 0:s?Hc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Lc(e,t,n),n};class ps extends j{constructor(){super(...arguments),this.distance=.5,this.targetState=!0}createBehaviours(e,t,s){}async afterSerialize(e,t){}}nn([P(St)],ps.prototype,"target",2);nn([P(URL)],ps.prototype,"clip",2);nn([P()],ps.prototype,"distance",2);nn([P()],ps.prototype,"targetState",2);var Uc=Object.defineProperty,zc=Object.getOwnPropertyDescriptor,jt=(o,e,t,s)=>{for(var n=s>1?void 0:s?zc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Uc(e,t,n),n};class rn{constructor(){this.contents=[],this.negativeContents=[],this.triggers=[]}}jt([P(Oe)],rn.prototype,"contents",2);jt([P(Oe)],rn.prototype,"negativeContents",2);jt([P(Oe)],rn.prototype,"triggers",2);class on extends j{constructor(){super(...arguments),this.elements=[],this.fadeDuration=.2,this.selectFirstOnStart=!0,this._allTargets=[],this._allTriggers=[]}get currentIndex(){return this._currentIndex}get defaultVariant(){const e=this.selectFirstOnStart?this.elements.at(0):void 0;return this._currentIndex!==void 0?this.elements.at(this._currentIndex):e}awake(){this.elements.forEach(e=>{e.contents=e.contents.filter(t=>t),e.triggers=e.triggers.filter(t=>t)}),this.elements.forEach(e=>{var t;return(t=e.contents)==null?void 0:t.forEach(s=>this._allTargets.push(s))}),this.elements.forEach(e=>{var t;return(t=e.triggers)==null?void 0:t.forEach(s=>this._allTriggers.push(s))}),this.setupForRuntime()}setupForRuntime(){this.elements.forEach((e,t)=>{var s;(s=e.triggers)==null||s.forEach(n=>{const r=Ko(n,kn);r.onClick??(r.onClick=new be),r.onClick.addEventListener(()=>{this._currentIndex=t,this._allTargets.forEach(i=>{i.visible=e.contents.includes(i)})})})}),this.selectDefault()}selectDefault(){var t;const e=((t=this.defaultVariant)==null?void 0:t.contents)??[];this._allTargets.forEach(s=>{s.visible=e.includes(s)})}createBehaviours(e,t,s){t.uuid===this.gameObject.uuid&&this.setupForUSDZ(e)}beforeCreateDocument(e,t){this._allTargets.forEach(s=>{s.visible=!0})}async afterSerialize(e,t){await Qn(3),this.selectDefault()}setupForUSDZ(e){var n;this.elements.forEach(r=>{var i;(i=r.triggers)==null||i.forEach(a=>{const l=r.contents,c=this._cloneArray(this._allTargets).filter(d=>!l.includes(d));l.length>=0&&e.addBehavior(new pt(`EnableObject_${a.uuid}`,ut.tapTrigger(a),Ve.fadeAction(l,this.fadeDuration,!0))),c.length>=0&&e.addBehavior(new pt(`DisableObject_${a.uuid}`,ut.tapTrigger(a),Ve.fadeAction(c,this.fadeDuration,!1)))})});const t=((n=this.defaultVariant)==null?void 0:n.contents)??[],s=this._cloneArray(this._allTargets).filter(r=>!t.includes(r));e.addBehavior(new pt(`HideOnStart_${this.guid}`,ut.sceneStartTrigger(),Ve.fadeAction(s,0,!1)))}_cloneArray(e){const t=new Array(e.length);return e.forEach((s,n)=>t[n]=s),t}}jt([P(rn)],on.prototype,"elements",2);jt([P()],on.prototype,"fadeDuration",2);jt([P()],on.prototype,"selectFirstOnStart",2);var kc=Object.defineProperty,jc=Object.getOwnPropertyDescriptor,ot=(o,e,t,s)=>{for(var n=s>1?void 0:s?jc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&kc(e,t,n),n};class yt{constructor(){this.name="Name"}}ot([P()],yt.prototype,"name",2);ot([P(zt)],yt.prototype,"icon",2);ot([P(be)],yt.prototype,"click",2);class xt{constructor(){this.title="Title",this.items=[]}}ot([P()],xt.prototype,"title",2);ot([P(zt)],xt.prototype,"icon",2);ot([P(be)],xt.prototype,"select",2);ot([P(be)],xt.prototype,"deselect",2);ot([P(yt)],xt.prototype,"items",2);class us extends j{constructor(){super(...arguments),this.categories=[]}awake(){document.body.insertAdjacentHTML("afterbegin",`<style>${Wc}</style>`),document.body.insertAdjacentHTML("afterbegin",Gc),this.mainmenu=document.querySelector(".mainmenu"),this.submenuRoot=document.querySelector(".submenu-wrapper"),this.submenu=document.querySelector(".submenu"),this.submenuTitle=document.querySelector(".submenu-title"),this.submenuContent=document.querySelector(".submenu-content"),this.categories.forEach(e=>this.addCategory(e)),this.hideSubmenu()}addNewCategory(e){this.categories.push(e),this.addCategory(e)}addCategory(e){if(!this.mainmenu)return;const t=Qc(e);this.mainmenu.appendChild(t),t.onclick=()=>{this.selectedCategory===e?this.hideSubmenu():this.showSubmenu(e)}}addItem(e){if(!this.submenuContent)return;const t=Vc(e);this.submenuContent.appendChild(t),t.onclick=()=>{var s;(s=e.click)==null||s.invoke()}}showSubmenu(e){var t,s,n,r;for(this.selectedCategory=e,(s=(t=this.selectedCategory)==null?void 0:t.select)==null||s.invoke(),this.submenuTitle&&(this.submenuTitle.textContent=e.title);(n=this.submenuContent)!=null&&n.firstChild;)this.submenuContent.removeChild(this.submenuContent.firstChild);e.items.forEach(i=>this.addItem(i)),(r=this.submenuRoot)==null||r.classList.remove("close")}hideSubmenu(){var e,t,s,n,r;for((t=(e=this.selectedCategory)==null?void 0:e.deselect)==null||t.invoke(),this.selectedCategory=void 0;(s=this.submenuContent)!=null&&s.firstChild;)(n=this.submenuContent)==null||n.removeChild(this.submenuContent.firstChild);(r=this.submenuRoot)==null||r.classList.add("close")}}ot([P(xt)],us.prototype,"categories",2);const Nc="https://upload.wikimedia.org/wikipedia/commons/2/21/City_locator_4.svg",Qc=o=>{var t;const e=document.createElement("button");return e.classList.add("room"),e.classList.add("open-submenu"),e.innerHTML=`
        <button class="open-submenu">
            <span class="icon">
                <img src=${((t=o.icon)==null?void 0:t.url)??Nc} alt=${o.title??"?"}>
            </span>
        </button>
    `,e},Vc=o=>{var n;const e=document.createElement("button");e.classList.add("submenu-button");const t=`
        <img src=${(n=o.icon)==null?void 0:n.url} alt=${o.name??"?"}>
    `,s=`
        <a>${o.name}</a>
    `;return o.icon&&(e.innerHTML+=t),e.innerHTML+=s,e},Gc=`
  <div class="mainmenu">
    <!-- Content -->
  </div>

  <div class="submenu-wrapper">
    <h2 class="submenu-title"></h2>
    <div class="submenu">
        <div class="submenu-content">
            <!-- Content -->
        </div>
    </div>
  </div>
`,Wc=`
.mainmenu {
    position: absolute;
    top: 16px;
    right: 16px;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 54px;
    height: auto;
    background: rgba(229, 230, 233, 0.8);
    border-radius: 27px;
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    box-shadow: 0 0 4px rgba(2, 2, 43, 0.2);
    z-index: 1;
    padding-top: 6px;

    /* default font settings */
    font-size: 1rem;
    font-family: 'Roboto Flex', sans-serif;
    /* font-optical-sizing: auto; */
    /* font-variation-settings: "width" 100; */
    color: rgb(40, 40, 40);
}

.mainmenu button {
    width: 42px;
    height: 42px;
    border: none;
    border-radius: 50%;
    margin-bottom: 4px;
    background: transparent;
    transition: background-color 0.5s;
    outline: rgba(0, 0, 0, 0) 1px solid;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

.mainmenu button.active,
.mainmenu button:hover {
    background: rgba(245, 245, 245, .8);
    transition: all 0.1s linear .02s;
    outline: rgba(0, 0, 0, .05) 1px solid;
}

.mainmenu button.active img,
.mainmenu button:hover img
{
    /* filter: invert(100%) sepia(0%) saturate(7478%) hue-rotate(317deg) brightness(109%) contrast(99%); */
}

.mainmenu button img {
    width: 32px;
    height: 32px;
}

.mainmenu button .state-icon {
    position: absolute;
    top: 9px;
    left: 11px;
    width: 32px; 
    height: 32px; 
    background-size: cover;
    background-repeat: no-repeat;
    pointer-events: none; 
    filter: invert(61%) sepia(85%) saturate(1169%) hue-rotate(92deg) brightness(92%) contrast(86%);
}

.mainmenu button.active .state-icon,
.mainmenu button:hover .state-icon
{
    filter: invert(61%) sepia(85%) saturate(1169%) hue-rotate(92deg) brightness(92%) contrast(86%);
}

/*Submenu*/
.submenu-wrapper {
    position: absolute;
    top: 16px;
    right: calc(70px + 10px);
    width: 333px;
    max-height: 60vh;
    padding: 22px;
    z-index: 1;

    background: #ffffff5c;
    border: 1px solid rgba(255, 255, 255, .1);
    border-radius: 1.1999rem;
    outline: rgb(0 0 0 / 5%) 1px solid;
    box-shadow: 0px 7px 0.5rem 0px rgb(0 0 0 / 6%), inset 0px 0px 1.3rem rgba(0, 0, 0, .05);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);

    overflow: hidden;
}

.submenu {
    overflow-x: hidden;
    overflow-y: scroll;
    max-height: calc(60vh - 22px * 2);
    font-family: 'Roboto Flex', sans-serif;
}

/* width */
.submenu::-webkit-scrollbar {
    scrollbar-color: #ff0000;
    width: 5px;
}

/* Track */
.submenu::-webkit-scrollbar-track {
    background: #8880;
    margin-right: 20px;
}

/* Handle */
.submenu::-webkit-scrollbar-thumb {
    background: #8888;
    border-radius: 10px; /* Rounded corners */
    margin: 0 8px; /* Offset the track to move the thumb left */
}

/* Handle on hover */
.submenu::-webkit-scrollbar-thumb:hover {
    background: #555A;
}

.submenu-title {
    color: #282828;
    font-size: 22px;
    font-weight: 800;
    line-height: 32px;
    margin-bottom: 16px;
    margin-top: 0px;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    border-bottom: 1px solid rgba(40, 40, 40, .4);
    font-family: 'Roboto Flex', sans-serif;
}

.submenu-button {
    height: 1.8rem;
    display: flex;
    align-items: center;
    margin-bottom: 8px;
    font-size: 1rem;
    line-height: 32px;
    border: none;
    cursor: pointer;
    font-family: 'Roboto Flex', sans-serif;
    font-weight: 200;
    width: 100%;
    
    background: transparent;
    outline: rgba(0, 0, 0, 0) 1px solid;
    border-radius: 0.8rem;
}

.submenu-button:hover { 
    background: rgba(245, 245, 245, .8);
    transition: all 0.1s linear .02s;
    outline: rgba(0, 0, 0, .05) 1px solid;
}

.submenu-button img {
    width: 32px;
    height: 32px;
    margin-right: 6px;
    margin-left: -6px;
}

.submenu-button a {
    color: #282828;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

.submenu-content img {
    max-width: 100%;
    height: auto;
    margin-right: 6px;
}

.special {
    display: flex;
    align-items: center;
    margin-top: 16px;
    font-size: 13px;
    line-height: 20px;
    color: #919191;
    border: none;
    background: none;
}

.special img {
    width: 16px;
    height: 16px;
    filter: invert(61%) sepia(85%) saturate(1169%) hue-rotate(92deg) brightness(92%) contrast(86%);
}

.submenu-wrapper.close {
    display: none;
}

@media screen and (max-width: 768px) {
    .mainmenu {
        width: 42px;
        height: auto;
        padding-bottom: 2px;
    }

    .mainmenu button {
        width: 32px;
        height: 32px;
    }

    .mainmenu button img {
        width: 24px;
        height: 24px;
    }

    .mainmenu button .state-icon {
        position: absolute;
        top: 9px;
        left: 9px;
        width: 24px; 
        height: 24px; 
    }

    .submenu-wrapper {
        right: calc(60px + 5px);
        width: 256px;
        border-radius: 21px;
        padding: 16px;
        max-height: 40vh;
    }

    .submenu {
        max-height: calc(40vh - 16px * 2);
    }

    .submenu-title {
        font-size: 18px;
        line-height: 28px;
        margin-bottom: 10px;
    }

    .submenu-button {
        margin-bottom: 6px;
        /* font-size: 1.3rem; */
        line-height: 24px;
    }

    .submenu-button img {
        width: 24px;
        height: 24px;
    }

    .special {
        margin-top: 10px;
        font-size: 11px;
    }

    .special img {
        width: 10px;
        height: 10px;
    }
}`;var qc=Object.defineProperty,$c=Object.getOwnPropertyDescriptor,Nt=(o,e,t,s)=>{for(var n=s>1?void 0:s?$c(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&qc(e,t,n),n};class ar{}Nt([P(kn)],ar.prototype,"button",2);Nt([P(rs)],ar.prototype,"label",2);class fs extends j{constructor(){super(...arguments),this.categoryName="",this.data=[]}awake(){var t;this.galleryUI??(this.galleryUI=wi(us));const e=(t=this.galleryUI)==null?void 0:t.categories.find(s=>s.title===this.categoryName);e&&this.data.forEach(s=>{var r,i;const n=new yt;n.name=((r=s.label)==null?void 0:r.text)||"",n.icon=this.icon,n.click=new be,(i=n.click)==null||i.addEventListener(()=>{var a,l;(l=(a=s.button)==null?void 0:a.onClick)==null||l.invoke()}),e.items.push(n)})}}Nt([P(us)],fs.prototype,"galleryUI",2);Nt([P()],fs.prototype,"categoryName",2);Nt([P(zt)],fs.prototype,"icon",2);Nt([P(ar)],fs.prototype,"data",2);var Kc=Object.defineProperty,Yc=Object.getOwnPropertyDescriptor,ao=(o,e,t,s)=>{for(var n=s>1?void 0:s?Yc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Kc(e,t,n),n};class an extends j{constructor(){super(...arguments),this.title="",this.slug=""}initialize(e){this.galleryManager=e}start(){this.slug=Zc(this.title),$e("poi")===this.slug&&this.focus()}focus(){var e,t;Vs("poi",this.slug),(e=this.galleryManager)==null||e.poiFocused(this),this.cameraView&&(this.previousOrbitControls??(this.previousOrbitControls=wi(zn)),(t=this.previousOrbitControls)==null||t.setCameraAndLookTarget(this.cameraView))}focusNext(){var e;(e=this.galleryManager)==null||e.focusNext()}focusPrevious(){var e;(e=this.galleryManager)==null||e.focusPrevious()}}ao([P(Oe)],an.prototype,"cameraView",2);ao([P()],an.prototype,"title",2);function Zc(o){return o.trim().toLowerCase().replace(/ /g,"-")}var Xc=Object.defineProperty,Jc=Object.getOwnPropertyDescriptor,ms=(o,e,t,s)=>{for(var n=s>1?void 0:s?Jc(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Xc(e,t,n),n};class Qt extends j{constructor(){super(...arguments),this.pois=[],this.categoryName="",this.arrowKeysNavigation=!0,this.selectedPOIIndex=0}awake(){this.populateGalleryUI(this.pois),this.pois.forEach(e=>e.initialize(this))}populateGalleryUI(e){var s;if(!this.galleryUI)return;const t=(s=this.galleryUI)==null?void 0:s.categories.find(n=>n.title===this.categoryName);t&&e.forEach(n=>{const r=new yt;r.name=n.title,r.icon=this.icon,r.click=new be,r.click.addEventListener(()=>{n.focus()}),t.items.push(r)})}poiFocused(e){const t=this.pois.indexOf(e);t!=-1&&(this.selectedPOIIndex=t)}focusNext(){var e;this.selectedPOIIndex=(this.selectedPOIIndex+1)%this.pois.length,(e=this.pois[this.selectedPOIIndex])==null||e.focus()}focusPrevious(){var e;this.selectedPOIIndex=(this.selectedPOIIndex-1+this.pois.length)%this.pois.length,(e=this.pois[this.selectedPOIIndex])==null||e.focus()}update(){if(this.arrowKeysNavigation){const e=this.context.input;e.isKeyDown("ArrowRight")?this.focusNext():e.isKeyDown("ArrowLeft")&&this.focusPrevious()}}}ms([P(an)],Qt.prototype,"pois",2);ms([P(us)],Qt.prototype,"galleryUI",2);ms([P()],Qt.prototype,"categoryName",2);ms([P(zt)],Qt.prototype,"icon",2);ms([P()],Qt.prototype,"arrowKeysNavigation",2);var ed=Object.defineProperty,td=Object.getOwnPropertyDescriptor,lo=(o,e,t,s)=>{for(var n=s>1?void 0:s?td(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&ed(e,t,n),n};const An=$e("debugmaterialx");class lr extends j{constructor(){super(...arguments),this.images=[]}async awake(){this.materialXAsset&&this.loadMaterialX(this.materialXAsset)}async loadMaterialX(e){const t=Z.getComponent(this.gameObject,Xe);if(!t)return;const s=new ra;s.resolveURL=i=>{if(i.startsWith("assets/"))return i;const l=i.split("/").pop();return An&&console.log("resolveURL",i,l),"assets/"+l};const r=await new Da(s).setPath("").loadAsync(e).then(({materials:i})=>(An&&console.log("Loaded .mtlx materials",i),Object.values(i)[0]));An&&console.log("Loaded .mtlx material",r,e),r&&(t.sharedMaterial=r)}}lo([P(URL)],lr.prototype,"materialXAsset",2);lo([P(Yo)],lr.prototype,"images",2);const sd=$e("debugmaterialx");class nd extends j{start(){const e=Z.getComponent(this.gameObject,Xe);e&&(this.material=new ia({}),e.sharedMaterial=this.material,this.constructNodeGraph(this.material),this.material.needsUpdate=!0)}constructNodeGraph(e){const t=oa(1),s=aa.mul(10).add(t),n=la(s);e.colorNode=n}update(){if(Ct()&&this.material&&this.constructNodeGraph!==this.methodCacheKey){sd&&console.log("rebuilding node graph"),this.methodCacheKey=this.constructNodeGraph;try{this.constructNodeGraph(this.material),this.material.needsUpdate=!0}catch(e){throw console.error(e),ae(e.message,xi.Error),e}}}}var rd=Object.defineProperty,id=Object.getOwnPropertyDescriptor,od=(o,e,t,s)=>{for(var n=s>1?void 0:s?id(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&rd(e,t,n),n};class Ln extends j{constructor(){super(...arguments),this.time=0,this._timeThreshold=.3}awake(){this._director=this.gameObject.getComponentInChildren(qs)??void 0}onAfterRender(){if(!this._director)return;Math.abs(this._director.time-this.time)>this._timeThreshold&&(this.time=this._director.time)}onTimeChanged(){!this._director||Math.abs(this._director.time-this.time)<this._timeThreshold||(this._director.time=this.time,this._director.isPlaying||this._director.evaluate())}}od([Ut(Ln.prototype.onTimeChanged)],Ln.prototype,"time",2);var ad=Object.defineProperty,ld=Object.getOwnPropertyDescriptor,Vt=(o,e,t,s)=>{for(var n=s>1?void 0:s?ld(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&ad(e,t,n),n};class bt extends j{constructor(){super(...arguments),this.consumeClick=!0,this.consumeDown=!0,this.consumeMove=!0,this.consumeUp=!0,this.consumeHover=!0,this.stopPropagation=!0}onPointerDown(e){this.consumeDown&&e.use(),this.stopPropagation&&e.stopPropagation()}onPointerMove(e){this.consumeMove&&e.use(),this.stopPropagation&&e.stopPropagation()}onPointerUp(e){this.consumeUp&&e.use(),this.stopPropagation&&e.stopPropagation()}onPointerClick(e){this.consumeClick&&e.use(),this.stopPropagation&&e.stopPropagation()}onPointerEnter(e){this.consumeHover&&e.use(),this.stopPropagation&&e.stopPropagation()}onPointerExit(e){this.consumeHover&&e.use(),this.stopPropagation&&e.stopPropagation()}}Vt([P()],bt.prototype,"consumeClick",2);Vt([P()],bt.prototype,"consumeDown",2);Vt([P()],bt.prototype,"consumeMove",2);Vt([P()],bt.prototype,"consumeUp",2);Vt([P()],bt.prototype,"consumeHover",2);Vt([P()],bt.prototype,"stopPropagation",2);var cd=Object.defineProperty,dd=Object.getOwnPropertyDescriptor,hd=(o,e,t,s)=>{for(var n=s>1?void 0:s?dd(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&cd(e,t,n),n};class co extends j{constructor(){super(...arguments),this.renderers=[]}select(e){this.renderers.forEach(t=>{t.probeAnchor=e})}}hd([P(Xe)],co.prototype,"renderers",2);var pd=Object.defineProperty,ud=Object.getOwnPropertyDescriptor,fd=(o,e,t,s)=>{for(var n=s>1?void 0:s?ud(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&pd(e,t,n),n};class cr extends j{constructor(){super(...arguments),this.displayName=""}}fd([P()],cr.prototype,"displayName",2);var md=Object.defineProperty,gd=Object.getOwnPropertyDescriptor,ln=(o,e,t,s)=>{for(var n=s>1?void 0:s?gd(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&md(e,t,n),n};class gs extends j{constructor(){super(...arguments),this.objects=[],this.hideContentOnStart=!0,this.index=-1}awake(){this.hideContentOnStart||(this.index=0);const e=$e("variant");typeof e=="string"?this.index=parseInt(e):typeof e=="number"&&(this.index=e),this.apply()}next(){this.select(this.index+1)}previous(){this.select(this.index-1)}apply(){for(let e=0;e<this.objects.length;e++)this.objects[e].visible=e===this.index;if(this.lable){const e=this.objects[this.index];if(e){const t=Z.getComponent(e,cr);this.lable.text=(t==null?void 0:t.displayName)??e.name}}}select(e){e<0&&(e=this.objects.length-1),this.index=e%this.objects.length,this.index=ve.clamp(this.index,0,this.objects.length-1),Vs("variant",this.index.toString()),this.apply()}}ln([P(Oe)],gs.prototype,"objects",2);ln([P()],gs.prototype,"hideContentOnStart",2);ln([P(rs)],gs.prototype,"lable",2);ln([Ut(function(){this.apply()})],gs.prototype,"index",2);z.add("AspectRatioFitterUI",Wn);z.add("CameraGoal",Ys);z.add("CameraLayer",La);z.add("Cannon",is);z.add("RandomColor",$n);z.add("ChangeColorOnCollision",ja);z.add("IncreaseShaderSpeedOverTime",Li);z.add("ClickButton",Hi);z.add("ClickToReset",Ui);z.add("DepthOfFieldController",Xs);z.add("DisableEnvironmentLight",Ja);z.add("EmitParticlesOnClick",zi);z.add("EnforceParameters",ki);z.add("HTMLButtonClick",Yn);z.add("HTMLMenu",Zn);z.add("IFrameContent",os);z.add("ImageTrackingDownloadUI",ul);z.add("LODGroupUI",Xn);z.add("Networking_ClickToChangeColor",Mn);z.add("Networking_StringArray",On);z.add("Networking_Object",Rn);z.add("PerformanceSettings",er);z.add("Photographer",as);z.add("PhysicsCollision",ls);z.add("PhysicsTrigger",cs);z.add("PlayAnimationOnCollision",Gi);z.add("PlayAnimationOnTrigger",Wi);z.add("PlayAudioOnCollision",qi);z.add("ResetAnimationsForXR",Rl);z.add("ResponsiveContent",tr);z.add("LoadingSceneRoot",Ki);z.add("SceneLoadingEvents",nr);z.add("SceneSwitcherControls",zl);z.add("SetBackfaceCulling",kl);z.add("ShowBalloonMessage",Yi);z.add("SimpleLeaderboard",_n);z.add("StartPosition",Zi);z.add("AutoReset",Xi);z.add("SyncedRoomUI",Ji);z.add("TimedSpawn",eo);z.add("TopMenu",to);z.add("VideoBackground",oc);z.add("ResetPositionOnInterval",ds);z.add("ToggleVisibility",cc);z.add("WireframeMaterial",so);z.add("XRLifecycleEvents",rr);z.add("WebXRBodyTracking",mc);z.add("Arrow",ir);z.add("ArrowShooting",Je);z.add("BowArrowTarget",io);z.add("BowTargetSpawner",oo);z.add("CustomDepthSensing",Dc);z.add("DeviceDetection",Bc);z.add("CustomUSDSettings",Fc);z.add("FadeOnProximity",kt);z.add("PlayAnimationOnProximity",sn);z.add("SoundOnProximity",ps);z.add("EverywhereConfigurator",on);z.add("ButtonAndTextFiller",fs);z.add("GalleryManager",Qt);z.add("GalleryPOI",an);z.add("GalleryUIItem",yt);z.add("GalleryUICategory",xt);z.add("GalleryUI",us);z.add("MaterialXAsset",lr);z.add("ShadeWithMaterialX",nd);z.add("SyncedPlayableDirector",Ln);z.add("ConsumeAllPointers",bt);z.add("ReflectionsSwitcher",co);z.add("VariantInfo",cr);z.add("VariantSwitcher",gs);const Bt=class{constructor(e,t){let s,n;this.promise=new Promise((c,d)=>{s=c,n=d});const r=s.bind(this),i=n.bind(this),a=(...c)=>{r(...c)},l=c=>{i(c)};e(a.bind(this),l.bind(this)),this.abortHandler=t,this.id=Bt.idGen++}then(e){return new Bt((t,s)=>{this.promise=this.promise.then((...n)=>{const r=e(...n);r instanceof Promise||r instanceof Bt?r.then((...i)=>{t(...i)}):t(r)}).catch(n=>{s(n)})},this.abortHandler)}catch(e){return new Bt(t=>{this.promise=this.promise.then((...s)=>{t(...s)}).catch(e)},this.abortHandler)}abort(e){this.abortHandler&&this.abortHandler(e)}};let Mt=Bt;_(Mt,"idGen",0);class ho extends Error{constructor(e){super(e)}}(function(){const o=new Float32Array(1),e=new Int32Array(o.buffer);return function(t){o[0]=t;const s=e[0];let n=s>>16&32768,r=s>>12&2047;const i=s>>23&255;return i<103?n:i>142?(n|=31744,n|=(i==255?0:1)&&s&8388607,n):i<113?(r|=2048,n|=(r>>114-i)+(r>>113-i&1),n):(n|=i-112<<10|r>>1,n+=r&1,n)}})();const Cn=function(){const o=new Float32Array(1),e=new Int32Array(o.buffer);return function(t){return o[0]=t,e[0]}}(),Ad=function(o,e){return o[e]+(o[e+1]<<8)+(o[e+2]<<16)+(o[e+3]<<24)},cn=function(o,e,t=!0,s){const n=new AbortController,r=n.signal;let i=!1;const a=d=>{n.abort(d),i=!0};let l=!1;const c=(d,h,u,p)=>{e&&!l&&(e(d,h,u,p),d===100&&(l=!0))};return new Mt((d,h)=>{const u={signal:r};s&&(u.headers=s),fetch(o,u).then(async p=>{if(!p.ok){const x=await p.text();h(new Error(`Fetch failed: ${p.status} ${p.statusText} ${x}`));return}const f=p.body.getReader();let m=0,g=p.headers.get("Content-Length"),C=g?parseInt(g):void 0;const A=[];for(;!i;)try{const{value:x,done:v}=await f.read();if(v){if(c(100,"100%",x,C),t){const y=new Blob(A).arrayBuffer();d(y)}else d();break}m+=x.length;let S,T;C!==void 0&&(S=m/C*100,T=`${S.toFixed(2)}%`),t&&A.push(x),c(S,T,x,C)}catch(x){h(x);return}}).catch(p=>{h(new ho(p))})},a)},pe=function(o,e,t){return Math.max(Math.min(o,t),e)},It=function(){return performance.now()/1e3},Dt=o=>{if(o.geometry&&(o.geometry.dispose(),o.geometry=null),o.material&&(o.material.dispose(),o.material=null),o.children)for(let e of o.children)Dt(e)},je=(o,e)=>new Promise(t=>{window.setTimeout(()=>{t(o?o():void 0)},e?1:50)}),Ot=(o=0)=>{let e=0;if(o===1)e=9;else if(o===2)e=24;else if(o===3)e=45;else if(o>3)throw new Error("getSphericalHarmonicsComponentCountForDegree() -> Invalid spherical harmonics degree");return e},dr=()=>{let o,e;return{promise:new Promise((s,n)=>{o=s,e=n}),resolve:o,reject:e}},Sn=o=>{let e,t;return o||(o=()=>{}),{promise:new Mt((n,r)=>{e=n,t=r},o),resolve:e,reject:t}};class Cd{constructor(e,t,s){this.major=e,this.minor=t,this.patch=s}toString(){return`${this.major}_${this.minor}_${this.patch}`}}function hr(){const o=navigator.userAgent;return o.indexOf("iPhone")>0||o.indexOf("iPad")>0}function po(){if(hr()){const o=navigator.userAgent.match(/OS (\d+)_(\d+)_?(\d+)?/);return new Cd(parseInt(o[1]||0,10),parseInt(o[2]||0,10),parseInt(o[3]||0,10))}else return null}const Sd=14,Ns=class{constructor(e=0){this.sphericalHarmonicsDegree=e,this.sphericalHarmonicsCount=Ot(this.sphericalHarmonicsDegree),this.componentCount=this.sphericalHarmonicsCount+Sd,this.defaultSphericalHarmonics=new Array(this.sphericalHarmonicsCount).fill(0),this.splats=[],this.splatCount=0}static createSplat(e=0){const t=[0,0,0,1,1,1,1,0,0,0,0,0,0,0];let s=Ot(e);for(let n=0;n<s;n++)t.push(0);return t}addSplat(e){this.splats.push(e),this.splatCount++}getSplat(e){return this.splats[e]}addDefaultSplat(){const e=Ns.createSplat(this.sphericalHarmonicsDegree);return this.addSplat(e),e}addSplatFromComonents(e,t,s,n,r,i,a,l,c,d,h,u,p,f,...m){const g=[e,t,s,n,r,i,a,l,c,d,h,u,p,f,...this.defaultSphericalHarmonics];for(let C=0;C<m.length&&C<this.sphericalHarmonicsCount;C++)g[C]=m[C];return this.addSplat(g),g}addSplatFromArray(e,t){const s=e.splats[t],n=Ns.createSplat(this.sphericalHarmonicsDegree);for(let r=0;r<this.componentCount&&r<s.length;r++)n[r]=s[r];this.addSplat(n)}};let U=Ns;_(U,"OFFSET",{X:0,Y:1,Z:2,SCALE0:3,SCALE1:4,SCALE2:5,ROTATION0:6,ROTATION1:7,ROTATION2:8,ROTATION3:9,FDC0:10,FDC1:11,FDC2:12,OPACITY:13,FRC0:14,FRC1:15,FRC2:16,FRC3:17,FRC4:18,FRC5:19,FRC6:20,FRC7:21,FRC8:22,FRC9:23,FRC10:24,FRC11:25,FRC12:26,FRC13:27,FRC14:28,FRC15:29,FRC16:30,FRC17:31,FRC18:32,FRC19:33,FRC20:34,FRC21:35,FRC22:36,FRC23:37});class ${}_($,"DefaultSplatSortDistanceMapPrecision",16),_($,"MemoryPageSize",65536),_($,"BytesPerFloat",4),_($,"BytesPerInt",4),_($,"MaxScenes",32),_($,"ProgressiveLoadSectionSize",262144),_($,"ProgressiveLoadSectionDelayDuration",15),_($,"SphericalHarmonics8BitCompressionRange",3);const yd=$.SphericalHarmonics8BitCompressionRange,dt=yd/2,Ee=ns.toHalfFloat.bind(ns),pr=ns.fromHalfFloat.bind(ns),de=(o,e,t=!1,s,n)=>{if(e===0)return o;if(e===1||e===2&&!t)return ns.fromHalfFloat(o);if(e===2)return ur(o,s,n)},Zt=(o,e,t)=>{o=pe(o,e,t);const s=t-e;return pe(Math.floor((o-e)/s*255),0,255)},ur=(o,e,t)=>{const s=t-e;return o/255*s+e},uo=(o,e,t)=>Zt(pr(o,e,t)),xd=(o,e,t)=>Ee(ur(o,e,t)),J=(o,e,t,s=!1)=>t===0?o.getFloat32(e*4,!0):t===1||t===2&&!s?o.getUint16(e*2,!0):o.getUint8(e,!0),bd=function(){const o=e=>e;return function(e,t,s,n=!1){if(t===s)return e;let r=o;return t===2&&n?s===1?r=xd:s==0&&(r=ur):t===2||t===1?s===0?r=pr:s==2&&(n?r=uo:r=o):t===0&&(s===1?r=Ee:s==2&&(n?r=Zt:r=Ee)),r(e)}}(),Et=(o,e,t,s,n=0)=>{const r=new Uint8Array(o,e),i=new Uint8Array(t,s);for(let a=0;a<n;a++)i[a]=r[a]},D=class{constructor(e,t=!0){_(this,"getSplatScaleAndRotation",function(){const e=new ee,t=new ee,s=new ee,n=new I,r=new I,i=new Ae;return function(a,l,c,d,h){const u=this.globalSplatIndexToSectionMap[a],p=this.sections[u],f=a-p.splatCountOffset,m=p.bytesPerSplat*f+D.CompressionLevels[this.compressionLevel].ScaleOffsetBytes,g=new DataView(this.bufferData,p.dataBase+m);r.set(de(J(g,0,this.compressionLevel),this.compressionLevel),de(J(g,1,this.compressionLevel),this.compressionLevel),de(J(g,2,this.compressionLevel),this.compressionLevel)),h&&(h.x!==void 0&&(r.x=h.x),h.y!==void 0&&(r.y=h.y),h.z!==void 0&&(r.z=h.z)),i.set(de(J(g,4,this.compressionLevel),this.compressionLevel),de(J(g,5,this.compressionLevel),this.compressionLevel),de(J(g,6,this.compressionLevel),this.compressionLevel),de(J(g,3,this.compressionLevel),this.compressionLevel)),d?(e.makeScale(r.x,r.y,r.z),t.makeRotationFromQuaternion(i),s.copy(e).multiply(t).multiply(d),s.decompose(n,c,l)):(l.copy(r),c.copy(i))}}());_(this,"fillSplatScaleRotationArray",function(){const e=new ee,t=new ee,s=new ee,n=new I,r=new Ae,i=new I,a=l=>{const c=l.w<0?-1:1;l.x*=c,l.y*=c,l.z*=c,l.w*=c};return function(l,c,d,h,u,p,f,m){const g=this.splatCount;h=h||0,u=u||g-1,p===void 0&&(p=h);const C=(A,x)=>(x===void 0&&(x=this.compressionLevel),bd(A,x,f));for(let A=h;A<=u;A++){const x=this.globalSplatIndexToSectionMap[A],v=this.sections[x],S=A-v.splatCountOffset,T=v.bytesPerSplat*S+D.CompressionLevels[this.compressionLevel].ScaleOffsetBytes,y=(A-h+p)*D.ScaleComponentCount,w=(A-h+p)*D.RotationComponentCount,B=new DataView(this.bufferData,v.dataBase+T),E=m&&m.x!==void 0?m.x:J(B,0,this.compressionLevel),R=m&&m.y!==void 0?m.y:J(B,1,this.compressionLevel),L=m&&m.z!==void 0?m.z:J(B,2,this.compressionLevel),M=J(B,3,this.compressionLevel),F=J(B,4,this.compressionLevel),H=J(B,5,this.compressionLevel),k=J(B,6,this.compressionLevel);n.set(de(E,this.compressionLevel),de(R,this.compressionLevel),de(L,this.compressionLevel)),r.set(de(F,this.compressionLevel),de(H,this.compressionLevel),de(k,this.compressionLevel),de(M,this.compressionLevel)).normalize(),d&&(i.set(0,0,0),e.makeScale(n.x,n.y,n.z),t.makeRotationFromQuaternion(r),s.identity().premultiply(e).premultiply(t),s.premultiply(d),s.decompose(i,r,n),r.normalize()),a(r),l&&(l[y]=C(n.x,0),l[y+1]=C(n.y,0),l[y+2]=C(n.z,0)),c&&(c[w]=C(r.x,0),c[w+1]=C(r.y,0),c[w+2]=C(r.z,0),c[w+3]=C(r.w,0))}}}());_(this,"fillSphericalHarmonicsArray",function(){for(let F=0;F<15;F++)new I;const e=new gt,t=new ee,s=new I,n=new I,r=new Ae,i=[],a=[],l=[],c=[],d=[],h=[],u=[],p=[],f=[],m=[],g=[],C=[],A=[],x=[],v=[],S=[],T=[],y=[],w=F=>F,B=(F,H,k,Q)=>{F[0]=H,F[1]=k,F[2]=Q},E=(F,H,k,Q,G)=>{F[0]=J(H,Q,G,!0),F[1]=J(H,Q+k,G,!0),F[2]=J(H,Q+k+k,G,!0)},R=(F,H)=>{H[0]=F[0],H[1]=F[1],H[2]=F[2]},L=(F,H,k,Q)=>{H[k]=Q(F[0]),H[k+1]=Q(F[1]),H[k+2]=Q(F[2])},M=(F,H,k,Q,G)=>(H[0]=de(F[0],k,!0,Q,G),H[1]=de(F[1],k,!0,Q,G),H[2]=de(F[2],k,!0,Q,G),H);return function(F,H,k,Q,G,N,W){const te=this.splatCount;Q=Q||0,G=G||te-1,N===void 0&&(N=Q),k&&H>=1&&(t.copy(k),t.decompose(s,r,n),r.normalize(),t.makeRotationFromQuaternion(r),e.setFromMatrix4(t),B(i,e.elements[4],-e.elements[7],e.elements[1]),B(a,-e.elements[5],e.elements[8],-e.elements[2]),B(l,e.elements[3],-e.elements[6],e.elements[0]));const me=K=>uo(K,this.minSphericalHarmonicsCoeff,this.maxSphericalHarmonicsCoeff),se=K=>Zt(K,this.minSphericalHarmonicsCoeff,this.maxSphericalHarmonicsCoeff);for(let K=Q;K<=G;K++){const re=this.globalSplatIndexToSectionMap[K],Y=this.sections[re];H=Math.min(H,Y.sphericalHarmonicsDegree);const ne=Ot(H),Ce=K-Y.splatCountOffset,Se=Y.bytesPerSplat*Ce+D.CompressionLevels[this.compressionLevel].SphericalHarmonicsOffsetBytes,ue=new DataView(this.bufferData,Y.dataBase+Se),Be=(K-Q+N)*ne;let we=k?0:this.compressionLevel,ce=w;we!==W&&(we===1?W===0?ce=pr:W==2&&(ce=me):we===0&&(W===1?ce=Ee:W==2&&(ce=se)));const Te=this.minSphericalHarmonicsCoeff,ie=this.maxSphericalHarmonicsCoeff;H>=1&&(E(f,ue,3,0,this.compressionLevel),E(m,ue,3,1,this.compressionLevel),E(g,ue,3,2,this.compressionLevel),k?(M(f,f,this.compressionLevel,Te,ie),M(m,m,this.compressionLevel,Te,ie),M(g,g,this.compressionLevel,Te,ie),D.rotateSphericalHarmonics3(f,m,g,i,a,l,x,v,S)):(R(f,x),R(m,v),R(g,S)),L(x,F,Be,ce),L(v,F,Be+3,ce),L(S,F,Be+6,ce),H>=2&&(E(f,ue,5,9,this.compressionLevel),E(m,ue,5,10,this.compressionLevel),E(g,ue,5,11,this.compressionLevel),E(C,ue,5,12,this.compressionLevel),E(A,ue,5,13,this.compressionLevel),k?(M(f,f,this.compressionLevel,Te,ie),M(m,m,this.compressionLevel,Te,ie),M(g,g,this.compressionLevel,Te,ie),M(C,C,this.compressionLevel,Te,ie),M(A,A,this.compressionLevel,Te,ie),D.rotateSphericalHarmonics5(f,m,g,C,A,i,a,l,c,d,h,u,p,x,v,S,T,y)):(R(f,x),R(m,v),R(g,S),R(C,T),R(A,y)),L(x,F,Be+9,ce),L(v,F,Be+12,ce),L(S,F,Be+15,ce),L(T,F,Be+18,ce),L(y,F,Be+21,ce)))}}}());this.constructFromBuffer(e,t)}getSplatCount(){return this.splatCount}getMaxSplatCount(){return this.maxSplatCount}getMinSphericalHarmonicsDegree(){let e=0;for(let t=0;t<this.sections.length;t++){const s=this.sections[t];(t===0||s.sphericalHarmonicsDegree<e)&&(e=s.sphericalHarmonicsDegree)}return e}getBucketIndex(e,t){let s;const n=e.fullBucketCount*e.bucketSize;if(t<n)s=Math.floor(t/e.bucketSize);else{let r=n;s=e.fullBucketCount;let i=0;for(;r<e.splatCount;){let a=e.partiallyFilledBucketLengths[i];if(t>=r&&t<r+a)break;r+=a,s++,i++}}return s}getSplatCenter(e,t,s){const n=this.globalSplatIndexToSectionMap[e],r=this.sections[n],i=e-r.splatCountOffset,a=r.bytesPerSplat*i,l=new DataView(this.bufferData,r.dataBase+a),c=J(l,0,this.compressionLevel),d=J(l,1,this.compressionLevel),h=J(l,2,this.compressionLevel);if(this.compressionLevel>=1){const p=this.getBucketIndex(r,i)*D.BucketStorageSizeFloats,f=r.compressionScaleFactor,m=r.compressionScaleRange;t.x=(c-m)*f+r.bucketArray[p],t.y=(d-m)*f+r.bucketArray[p+1],t.z=(h-m)*f+r.bucketArray[p+2]}else t.x=c,t.y=d,t.z=h;s&&t.applyMatrix4(s)}getSplatColor(e,t){const s=this.globalSplatIndexToSectionMap[e],n=this.sections[s],r=e-n.splatCountOffset,i=n.bytesPerSplat*r+D.CompressionLevels[this.compressionLevel].ColorOffsetBytes,a=new Uint8Array(this.bufferData,n.dataBase+i,4);t.set(a[0],a[1],a[2],a[3])}fillSplatCenterArray(e,t,s,n,r){const i=this.splatCount;s=s||0,n=n||i-1,r===void 0&&(r=s);const a=new I;for(let l=s;l<=n;l++){const c=this.globalSplatIndexToSectionMap[l],d=this.sections[c],h=l-d.splatCountOffset,u=(l-s+r)*D.CenterComponentCount,p=d.bytesPerSplat*h,f=new DataView(this.bufferData,d.dataBase+p),m=J(f,0,this.compressionLevel),g=J(f,1,this.compressionLevel),C=J(f,2,this.compressionLevel);if(this.compressionLevel>=1){const x=this.getBucketIndex(d,h)*D.BucketStorageSizeFloats,v=d.compressionScaleFactor,S=d.compressionScaleRange;a.x=(m-S)*v+d.bucketArray[x],a.y=(g-S)*v+d.bucketArray[x+1],a.z=(C-S)*v+d.bucketArray[x+2]}else a.x=m,a.y=g,a.z=C;t&&a.applyMatrix4(t),e[u]=a.x,e[u+1]=a.y,e[u+2]=a.z}}fillSplatCovarianceArray(e,t,s,n,r,i){const a=this.splatCount,l=new I,c=new Ae;s=s||0,n=n||a-1,r===void 0&&(r=s);for(let d=s;d<=n;d++){const h=this.globalSplatIndexToSectionMap[d],u=this.sections[h],p=d-u.splatCountOffset,f=(d-s+r)*D.CovarianceComponentCount,m=u.bytesPerSplat*p+D.CompressionLevels[this.compressionLevel].ScaleOffsetBytes,g=new DataView(this.bufferData,u.dataBase+m);l.set(de(J(g,0,this.compressionLevel),this.compressionLevel),de(J(g,1,this.compressionLevel),this.compressionLevel),de(J(g,2,this.compressionLevel),this.compressionLevel)),c.set(de(J(g,4,this.compressionLevel),this.compressionLevel),de(J(g,5,this.compressionLevel),this.compressionLevel),de(J(g,6,this.compressionLevel),this.compressionLevel),de(J(g,3,this.compressionLevel),this.compressionLevel)),D.computeCovariance(l,c,t,e,f,i)}}fillSplatColorArray(e,t,s,n,r){const i=this.splatCount;s=s||0,n=n||i-1,r===void 0&&(r=s);for(let a=s;a<=n;a++){const l=this.globalSplatIndexToSectionMap[a],c=this.sections[l],d=a-c.splatCountOffset,h=(a-s+r)*D.ColorComponentCount,u=c.bytesPerSplat*d+D.CompressionLevels[this.compressionLevel].ColorOffsetBytes,p=new Uint8Array(this.bufferData,c.dataBase+u);let f=p[3];f=f>=t?f:0,e[h]=p[0],e[h+1]=p[1],e[h+2]=p[2],e[h+3]=f}}static parseHeader(e){const t=new Uint8Array(e,0,D.HeaderSizeBytes),s=new Uint16Array(e,0,D.HeaderSizeBytes/2),n=new Uint32Array(e,0,D.HeaderSizeBytes/4),r=new Float32Array(e,0,D.HeaderSizeBytes/4),i=t[0],a=t[1],l=n[1],c=n[2],d=n[3],h=n[4],u=s[10],p=new I(r[6],r[7],r[8]),f=r[9]||-dt,m=r[10]||dt;return{versionMajor:i,versionMinor:a,maxSectionCount:l,sectionCount:c,maxSplatCount:d,splatCount:h,compressionLevel:u,sceneCenter:p,minSphericalHarmonicsCoeff:f,maxSphericalHarmonicsCoeff:m}}static writeHeaderCountsToBuffer(e,t,s){const n=new Uint32Array(s,0,D.HeaderSizeBytes/4);n[2]=e,n[4]=t}static writeHeaderToBuffer(e,t){const s=new Uint8Array(t,0,D.HeaderSizeBytes),n=new Uint16Array(t,0,D.HeaderSizeBytes/2),r=new Uint32Array(t,0,D.HeaderSizeBytes/4),i=new Float32Array(t,0,D.HeaderSizeBytes/4);s[0]=e.versionMajor,s[1]=e.versionMinor,s[2]=0,s[3]=0,r[1]=e.maxSectionCount,r[2]=e.sectionCount,r[3]=e.maxSplatCount,r[4]=e.splatCount,n[10]=e.compressionLevel,i[6]=e.sceneCenter.x,i[7]=e.sceneCenter.y,i[8]=e.sceneCenter.z,i[9]=e.minSphericalHarmonicsCoeff||-dt,i[10]=e.maxSphericalHarmonicsCoeff||dt}static parseSectionHeaders(e,t,s=0,n){const r=e.compressionLevel,i=e.maxSectionCount,a=new Uint16Array(t,s,i*D.SectionHeaderSizeBytes/2),l=new Uint32Array(t,s,i*D.SectionHeaderSizeBytes/4),c=new Float32Array(t,s,i*D.SectionHeaderSizeBytes/4),d=[];let h=0,u=h/2,p=h/4,f=D.HeaderSizeBytes+e.maxSectionCount*D.SectionHeaderSizeBytes,m=0;for(let g=0;g<i;g++){const C=l[p+1],A=l[p+2],x=l[p+3],v=c[p+4],S=v/2,T=a[u+10],y=l[p+6]||D.CompressionLevels[r].ScaleRange,w=l[p+8],B=l[p+9],E=B*4,R=T*x+E,L=a[u+20],{bytesPerSplat:M}=D.calculateComponentStorage(r,L),F=M*C,H=F+R,k={bytesPerSplat:M,splatCountOffset:m,splatCount:n?C:0,maxSplatCount:C,bucketSize:A,bucketCount:x,bucketBlockSize:v,halfBucketBlockSize:S,bucketStorageSizeBytes:T,bucketsStorageSizeBytes:R,splatDataStorageSizeBytes:F,storageSizeBytes:H,compressionScaleRange:y,compressionScaleFactor:S/y,base:f,bucketsBase:f+E,dataBase:f+R,fullBucketCount:w,partiallyFilledBucketCount:B,sphericalHarmonicsDegree:L};d[g]=k,f+=H,h+=D.SectionHeaderSizeBytes,u=h/2,p=h/4,m+=C}return d}static writeSectionHeaderToBuffer(e,t,s,n=0){const r=new Uint16Array(s,n,D.SectionHeaderSizeBytes/2),i=new Uint32Array(s,n,D.SectionHeaderSizeBytes/4),a=new Float32Array(s,n,D.SectionHeaderSizeBytes/4);i[0]=e.splatCount,i[1]=e.maxSplatCount,i[2]=t>=1?e.bucketSize:0,i[3]=t>=1?e.bucketCount:0,a[4]=t>=1?e.bucketBlockSize:0,r[10]=t>=1?D.BucketStorageSizeBytes:0,i[6]=t>=1?e.compressionScaleRange:0,i[7]=e.storageSizeBytes,i[8]=t>=1?e.fullBucketCount:0,i[9]=t>=1?e.partiallyFilledBucketCount:0,r[20]=e.sphericalHarmonicsDegree}static writeSectionHeaderSplatCountToBuffer(e,t,s=0){const n=new Uint32Array(t,s,D.SectionHeaderSizeBytes/4);n[0]=e}constructFromBuffer(e,t){this.bufferData=e,this.globalSplatIndexToLocalSplatIndexMap=[],this.globalSplatIndexToSectionMap=[];const s=D.parseHeader(this.bufferData);this.versionMajor=s.versionMajor,this.versionMinor=s.versionMinor,this.maxSectionCount=s.maxSectionCount,this.sectionCount=t?s.maxSectionCount:0,this.maxSplatCount=s.maxSplatCount,this.splatCount=t?s.maxSplatCount:0,this.compressionLevel=s.compressionLevel,this.sceneCenter=new I().copy(s.sceneCenter),this.minSphericalHarmonicsCoeff=s.minSphericalHarmonicsCoeff,this.maxSphericalHarmonicsCoeff=s.maxSphericalHarmonicsCoeff,this.sections=D.parseSectionHeaders(s,this.bufferData,D.HeaderSizeBytes,t),this.linkBufferArrays(),this.buildMaps()}static calculateComponentStorage(e,t){const s=D.CompressionLevels[e].BytesPerCenter,n=D.CompressionLevels[e].BytesPerScale,r=D.CompressionLevels[e].BytesPerRotation,i=D.CompressionLevels[e].BytesPerColor,a=Ot(t),l=D.CompressionLevels[e].BytesPerSphericalHarmonicsComponent*a,c=s+n+r+i+l;return{bytesPerCenter:s,bytesPerScale:n,bytesPerRotation:r,bytesPerColor:i,sphericalHarmonicsComponentsPerSplat:a,sphericalHarmonicsBytesPerSplat:l,bytesPerSplat:c}}linkBufferArrays(){for(let e=0;e<this.maxSectionCount;e++){const t=this.sections[e];t.bucketArray=new Float32Array(this.bufferData,t.bucketsBase,t.bucketCount*D.BucketStorageSizeFloats),t.partiallyFilledBucketCount>0&&(t.partiallyFilledBucketLengths=new Uint32Array(this.bufferData,t.base,t.partiallyFilledBucketCount))}}buildMaps(){let e=0;for(let t=0;t<this.maxSectionCount;t++){const s=this.sections[t];for(let n=0;n<s.maxSplatCount;n++){const r=e+n;this.globalSplatIndexToLocalSplatIndexMap[r]=n,this.globalSplatIndexToSectionMap[r]=t}e+=s.maxSplatCount}}updateLoadedCounts(e,t){D.writeHeaderCountsToBuffer(e,t,this.bufferData),this.sectionCount=e,this.splatCount=t}updateSectionLoadedCounts(e,t){const s=D.HeaderSizeBytes+D.SectionHeaderSizeBytes*e;D.writeSectionHeaderSplatCountToBuffer(t,this.bufferData,s),this.sections[e].splatCount=t}static generateFromUncompressedSplatArrays(e,t,s,n,r,i,a=[]){let l=0;for(let S=0;S<e.length;S++){const T=e[S];l=Math.max(T.sphericalHarmonicsDegree,l)}let c,d;for(let S=0;S<e.length;S++){const T=e[S];for(let y=0;y<T.splats.length;y++){const w=T.splats[y];for(let B=U.OFFSET.FRC0;B<U.OFFSET.FRC23&&B<w.length;B++)(!c||w[B]<c)&&(c=w[B]),(!d||w[B]>d)&&(d=w[B])}}c=c||-dt,d=d||dt;const{bytesPerSplat:h}=D.calculateComponentStorage(s,l),u=D.CompressionLevels[s].ScaleRange,p=[],f=[];let m=0;for(let S=0;S<e.length;S++){const T=e[S],y=new U(l);for(let re=0;re<T.splatCount;re++){const Y=T.splats[re];(Y[U.OFFSET.OPACITY]||0)>=t&&y.addSplat(Y)}const w=a[S]||{},B=(w.blockSizeFactor||1)*(r||D.BucketBlockSize),E=Math.ceil((w.bucketSizeFactor||1)*(i||D.BucketSize)),R=D.computeBucketsForUncompressedSplatArray(y,B,E),L=R.fullBuckets.length,M=R.partiallyFullBuckets.map(re=>re.splats.length),F=M.length,H=[...R.fullBuckets,...R.partiallyFullBuckets],k=y.splats.length*h,Q=F*4,G=s>=1?H.length*D.BucketStorageSizeBytes+Q:0,N=k+G,W=new ArrayBuffer(N),te=u/(B*.5),me=new I;let se=0;for(let re=0;re<H.length;re++){const Y=H[re];me.fromArray(Y.center);for(let ne=0;ne<Y.splats.length;ne++){let Ce=Y.splats[ne];const Se=y.splats[Ce],ue=G+se*h;D.writeSplatDataToSectionBuffer(Se,W,ue,s,l,me,te,u,c,d),se++}}if(m+=se,s>=1){const re=new Uint32Array(W,0,M.length*4);for(let ne=0;ne<M.length;ne++)re[ne]=M[ne];const Y=new Float32Array(W,Q,H.length*D.BucketStorageSizeFloats);for(let ne=0;ne<H.length;ne++){const Ce=H[ne],Se=ne*3;Y[Se]=Ce.center[0],Y[Se+1]=Ce.center[1],Y[Se+2]=Ce.center[2]}}p.push(W);const K=new ArrayBuffer(D.SectionHeaderSizeBytes);D.writeSectionHeaderToBuffer({maxSplatCount:se,splatCount:se,bucketSize:E,bucketCount:H.length,bucketBlockSize:B,compressionScaleRange:u,storageSizeBytes:N,fullBucketCount:L,partiallyFilledBucketCount:F,sphericalHarmonicsDegree:l},s,K,0),f.push(K)}let g=0;for(let S of p)g+=S.byteLength;const C=D.HeaderSizeBytes+D.SectionHeaderSizeBytes*p.length+g,A=new ArrayBuffer(C);D.writeHeaderToBuffer({versionMajor:0,versionMinor:1,maxSectionCount:p.length,sectionCount:p.length,maxSplatCount:m,splatCount:m,compressionLevel:s,sceneCenter:n,minSphericalHarmonicsCoeff:c,maxSphericalHarmonicsCoeff:d},A);let x=D.HeaderSizeBytes;for(let S of f)new Uint8Array(A,x,D.SectionHeaderSizeBytes).set(new Uint8Array(S)),x+=D.SectionHeaderSizeBytes;for(let S of p)new Uint8Array(A,x,S.byteLength).set(new Uint8Array(S)),x+=S.byteLength;return new D(A)}static computeBucketsForUncompressedSplatArray(e,t,s){let n=e.splatCount;const r=t/2,i=new I,a=new I;for(let m=0;m<n;m++){const g=e.splats[m],C=[g[U.OFFSET.X],g[U.OFFSET.Y],g[U.OFFSET.Z]];(m===0||C[0]<i.x)&&(i.x=C[0]),(m===0||C[0]>a.x)&&(a.x=C[0]),(m===0||C[1]<i.y)&&(i.y=C[1]),(m===0||C[1]>a.y)&&(a.y=C[1]),(m===0||C[2]<i.z)&&(i.z=C[2]),(m===0||C[2]>a.z)&&(a.z=C[2])}const l=new I().copy(a).sub(i),c=Math.ceil(l.y/t),d=Math.ceil(l.z/t),h=new I,u=[],p={};for(let m=0;m<n;m++){const g=e.splats[m],C=[g[U.OFFSET.X],g[U.OFFSET.Y],g[U.OFFSET.Z]],A=Math.floor((C[0]-i.x)/t),x=Math.floor((C[1]-i.y)/t),v=Math.floor((C[2]-i.z)/t);h.x=A*t+i.x+r,h.y=x*t+i.y+r,h.z=v*t+i.z+r;const S=A*(c*d)+x*d+v;let T=p[S];T||(p[S]=T={splats:[],center:h.toArray()}),T.splats.push(m),T.splats.length>=s&&(u.push(T),p[S]=null)}const f=[];for(let m in p)if(p.hasOwnProperty(m)){const g=p[m];g&&f.push(g)}return{fullBuckets:u,partiallyFullBuckets:f}}static preallocateUncompressed(e,t){const s=D.CompressionLevels[0].SphericalHarmonicsDegrees[t],n=D.HeaderSizeBytes+D.SectionHeaderSizeBytes,r=n+s.BytesPerSplat*e,i=new ArrayBuffer(r);return D.writeHeaderToBuffer({versionMajor:D.CurrentMajorVersion,versionMinor:D.CurrentMinorVersion,maxSectionCount:1,sectionCount:1,maxSplatCount:e,splatCount:e,compressionLevel:0,sceneCenter:new I},i),D.writeSectionHeaderToBuffer({maxSplatCount:e,splatCount:e,bucketSize:0,bucketCount:0,bucketBlockSize:0,compressionScaleRange:0,storageSizeBytes:0,fullBucketCount:0,partiallyFilledBucketCount:0,sphericalHarmonicsDegree:t},0,i,D.HeaderSizeBytes),{splatBuffer:new D(i,!0),splatBufferDataOffsetBytes:n}}};let O=D;_(O,"CurrentMajorVersion",0),_(O,"CurrentMinorVersion",1),_(O,"CenterComponentCount",3),_(O,"ScaleComponentCount",3),_(O,"RotationComponentCount",4),_(O,"ColorComponentCount",4),_(O,"CovarianceComponentCount",6),_(O,"SplatScaleOffsetFloat",3),_(O,"SplatRotationOffsetFloat",6),_(O,"CompressionLevels",{0:{BytesPerCenter:12,BytesPerScale:12,BytesPerRotation:16,BytesPerColor:4,ScaleOffsetBytes:12,RotationffsetBytes:24,ColorOffsetBytes:40,SphericalHarmonicsOffsetBytes:44,ScaleRange:1,BytesPerSphericalHarmonicsComponent:4,SphericalHarmonicsOffsetFloat:11,SphericalHarmonicsDegrees:{0:{BytesPerSplat:44},1:{BytesPerSplat:80},2:{BytesPerSplat:140}}},1:{BytesPerCenter:6,BytesPerScale:6,BytesPerRotation:8,BytesPerColor:4,ScaleOffsetBytes:6,RotationffsetBytes:12,ColorOffsetBytes:20,SphericalHarmonicsOffsetBytes:24,ScaleRange:32767,BytesPerSphericalHarmonicsComponent:2,SphericalHarmonicsOffsetFloat:12,SphericalHarmonicsDegrees:{0:{BytesPerSplat:24},1:{BytesPerSplat:42},2:{BytesPerSplat:72}}},2:{BytesPerCenter:6,BytesPerScale:6,BytesPerRotation:8,BytesPerColor:4,ScaleOffsetBytes:6,RotationffsetBytes:12,ColorOffsetBytes:20,SphericalHarmonicsOffsetBytes:24,ScaleRange:32767,BytesPerSphericalHarmonicsComponent:1,SphericalHarmonicsOffsetFloat:12,SphericalHarmonicsDegrees:{0:{BytesPerSplat:24},1:{BytesPerSplat:33},2:{BytesPerSplat:48}}}}),_(O,"CovarianceSizeFloats",6),_(O,"HeaderSizeBytes",4096),_(O,"SectionHeaderSizeBytes",1024),_(O,"BucketStorageSizeBytes",12),_(O,"BucketStorageSizeFloats",3),_(O,"BucketBlockSize",5),_(O,"BucketSize",256),_(O,"computeCovariance",function(){const e=new ee,t=new gt,s=new gt,n=new gt,r=new gt,i=new gt,a=new gt;return function(l,c,d,h,u=0,p){e.makeScale(l.x,l.y,l.z),t.setFromMatrix4(e),e.makeRotationFromQuaternion(c),s.setFromMatrix4(e),n.copy(s).multiply(t),r.copy(n).transpose().premultiply(n),d&&(i.setFromMatrix4(d),a.copy(i).transpose(),r.multiply(a),r.premultiply(i)),p>=1?(h[u]=Ee(r.elements[0]),h[u+1]=Ee(r.elements[3]),h[u+2]=Ee(r.elements[6]),h[u+3]=Ee(r.elements[4]),h[u+4]=Ee(r.elements[7]),h[u+5]=Ee(r.elements[8])):(h[u]=r.elements[0],h[u+1]=r.elements[3],h[u+2]=r.elements[6],h[u+3]=r.elements[4],h[u+4]=r.elements[7],h[u+5]=r.elements[8])}}()),_(O,"dot3",(e,t,s,n,r)=>{r[0]=r[1]=r[2]=0;const i=n[0],a=n[1],l=n[2];D.addInto3(e[0]*i,e[1]*i,e[2]*i,r),D.addInto3(t[0]*a,t[1]*a,t[2]*a,r),D.addInto3(s[0]*l,s[1]*l,s[2]*l,r)}),_(O,"addInto3",(e,t,s,n)=>{n[0]=n[0]+e,n[1]=n[1]+t,n[2]=n[2]+s}),_(O,"dot5",(e,t,s,n,r,i,a)=>{a[0]=a[1]=a[2]=0;const l=i[0],c=i[1],d=i[2],h=i[3],u=i[4];D.addInto3(e[0]*l,e[1]*l,e[2]*l,a),D.addInto3(t[0]*c,t[1]*c,t[2]*c,a),D.addInto3(s[0]*d,s[1]*d,s[2]*d,a),D.addInto3(n[0]*h,n[1]*h,n[2]*h,a),D.addInto3(r[0]*u,r[1]*u,r[2]*u,a)}),_(O,"rotateSphericalHarmonics3",(e,t,s,n,r,i,a,l,c)=>{D.dot3(e,t,s,n,a),D.dot3(e,t,s,r,l),D.dot3(e,t,s,i,c)}),_(O,"rotateSphericalHarmonics5",(e,t,s,n,r,i,a,l,c,d,h,u,p,f,m,g,C,A)=>{const x=Math.sqrt(.25),v=Math.sqrt(3/4),S=Math.sqrt(1/3),T=Math.sqrt(4/3),y=Math.sqrt(1/12);c[0]=x*(l[2]*i[0]+l[0]*i[2]+(i[2]*l[0]+i[0]*l[2])),c[1]=l[1]*i[0]+i[1]*l[0],c[2]=v*(l[1]*i[1]+i[1]*l[1]),c[3]=l[1]*i[2]+i[1]*l[2],c[4]=x*(l[2]*i[2]-l[0]*i[0]+(i[2]*l[2]-i[0]*l[0])),D.dot5(e,t,s,n,r,c,f),d[0]=x*(a[2]*i[0]+a[0]*i[2]+(i[2]*a[0]+i[0]*a[2])),d[1]=a[1]*i[0]+i[1]*a[0],d[2]=v*(a[1]*i[1]+i[1]*a[1]),d[3]=a[1]*i[2]+i[1]*a[2],d[4]=x*(a[2]*i[2]-a[0]*i[0]+(i[2]*a[2]-i[0]*a[0])),D.dot5(e,t,s,n,r,d,m),h[0]=S*(a[2]*a[0]+a[0]*a[2])+-y*(l[2]*l[0]+l[0]*l[2]+(i[2]*i[0]+i[0]*i[2])),h[1]=T*a[1]*a[0]+-S*(l[1]*l[0]+i[1]*i[0]),h[2]=a[1]*a[1]+-x*(l[1]*l[1]+i[1]*i[1]),h[3]=T*a[1]*a[2]+-S*(l[1]*l[2]+i[1]*i[2]),h[4]=S*(a[2]*a[2]-a[0]*a[0])+-y*(l[2]*l[2]-l[0]*l[0]+(i[2]*i[2]-i[0]*i[0])),D.dot5(e,t,s,n,r,h,g),u[0]=x*(a[2]*l[0]+a[0]*l[2]+(l[2]*a[0]+l[0]*a[2])),u[1]=a[1]*l[0]+l[1]*a[0],u[2]=v*(a[1]*l[1]+l[1]*a[1]),u[3]=a[1]*l[2]+l[1]*a[2],u[4]=x*(a[2]*l[2]-a[0]*l[0]+(l[2]*a[2]-l[0]*a[0])),D.dot5(e,t,s,n,r,u,C),p[0]=x*(l[2]*l[0]+l[0]*l[2]-(i[2]*i[0]+i[0]*i[2])),p[1]=l[1]*l[0]-i[1]*i[0],p[2]=v*(l[1]*l[1]-i[1]*i[1]),p[3]=l[1]*l[2]-i[1]*i[2],p[4]=x*(l[2]*l[2]-l[0]*l[0]-(i[2]*i[2]-i[0]*i[0])),D.dot5(e,t,s,n,r,p,A)}),_(O,"writeSplatDataToSectionBuffer",function(){const e=new ArrayBuffer(12),t=new ArrayBuffer(12),s=new ArrayBuffer(16),n=new ArrayBuffer(4),r=new ArrayBuffer(256),i=new Ae,a=new I,l=new I,{X:c,Y:d,Z:h,SCALE0:u,SCALE1:p,SCALE2:f,ROTATION0:m,ROTATION1:g,ROTATION2:C,ROTATION3:A,FDC0:x,FDC1:v,FDC2:S,OPACITY:T,FRC0:y,FRC9:w}=U.OFFSET,B=(E,R,L)=>{const M=L*2+1;return E=Math.round(E*R)+L,pe(E,0,M)};return function(E,R,L,M,F,H,k,Q,G=-dt,N=dt){const W=Ot(F),te=D.CompressionLevels[M].BytesPerCenter,me=D.CompressionLevels[M].BytesPerScale,se=D.CompressionLevels[M].BytesPerRotation,K=D.CompressionLevels[M].BytesPerColor,re=L,Y=re+te,ne=Y+me,Ce=ne+se,Se=Ce+K;if(E[m]!==void 0?(i.set(E[m],E[g],E[C],E[A]),i.normalize()):i.set(1,0,0,0),E[u]!==void 0?a.set(E[u]||0,E[p]||0,E[f]||0):a.set(0,0,0),M===0){const Be=new Float32Array(R,re,D.CenterComponentCount),we=new Float32Array(R,ne,D.RotationComponentCount),ce=new Float32Array(R,Y,D.ScaleComponentCount);if(we.set([i.x,i.y,i.z,i.w]),ce.set([a.x,a.y,a.z]),Be.set([E[c],E[d],E[h]]),F>0){const Te=new Float32Array(R,Se,W);if(F>=1){for(let ie=0;ie<9;ie++)Te[ie]=E[y+ie]||0;if(F>=2)for(let ie=0;ie<15;ie++)Te[ie+9]=E[w+ie]||0}}}else{const Be=new Uint16Array(e,0,D.CenterComponentCount),we=new Uint16Array(s,0,D.RotationComponentCount),ce=new Uint16Array(t,0,D.ScaleComponentCount);if(we.set([Ee(i.x),Ee(i.y),Ee(i.z),Ee(i.w)]),ce.set([Ee(a.x),Ee(a.y),Ee(a.z)]),l.set(E[c],E[d],E[h]).sub(H),l.x=B(l.x,k,Q),l.y=B(l.y,k,Q),l.z=B(l.z,k,Q),Be.set([l.x,l.y,l.z]),F>0){const Te=M===1?Uint16Array:Uint8Array,ie=M===1?2:1,Ne=new Te(r,0,W);if(F>=1){for(let Pe=0;Pe<9;Pe++){const He=E[y+Pe]||0;Ne[Pe]=M===1?Ee(He):Zt(He,G,N)}const Ke=9*ie;if(Et(Ne.buffer,0,R,Se,Ke),F>=2){for(let Pe=0;Pe<15;Pe++){const He=E[w+Pe]||0;Ne[Pe+9]=M===1?Ee(He):Zt(He,G,N)}Et(Ne.buffer,Ke,R,Se+Ke,15*ie)}}}Et(Be.buffer,0,R,re,6),Et(ce.buffer,0,R,Y,6),Et(we.buffer,0,R,ne,8)}const ue=new Uint8ClampedArray(n,0,4);ue.set([E[x]||0,E[v]||0,E[S]||0]),ue[3]=E[T]||0,Et(ue.buffer,0,R,Ce,4)}}());const Gr=new Uint8Array([112,108,121,10]),Wr=new Uint8Array([10,101,110,100,95,104,101,97,100,101,114,10]),yn="end_header",xn=new Map([["char",Int8Array],["uchar",Uint8Array],["short",Int16Array],["ushort",Uint16Array],["int",Int32Array],["uint",Uint32Array],["float",Float32Array],["double",Float64Array]]),Ye=(o,e)=>{const t=(1<<e)-1;return(o&t)/t},qr=(o,e)=>{o.x=Ye(e>>>21,11),o.y=Ye(e>>>11,10),o.z=Ye(e,11)},vd=(o,e)=>{o.x=Ye(e>>>24,8),o.y=Ye(e>>>16,8),o.z=Ye(e>>>8,8),o.w=Ye(e,8)},wd=(o,e)=>{const t=1/(Math.sqrt(2)*.5),s=(Ye(e>>>20,10)-.5)*t,n=(Ye(e>>>10,10)-.5)*t,r=(Ye(e,10)-.5)*t,i=Math.sqrt(1-(s*s+n*n+r*r));switch(e>>>30){case 0:o.set(i,s,n,r);break;case 1:o.set(s,i,n,r);break;case 2:o.set(s,n,i,r);break;case 3:o.set(s,n,r,i);break}},st=(o,e,t)=>o*(1-t)+e*t,fe=(o,e)=>{var t;return(t=o.properties.find(s=>s.name===e&&s.storage))==null?void 0:t.storage},oe=class{static decodeHeaderText(e){let t,s,n,r;const i=e.split(`
`).filter(h=>!h.startsWith("comment "));let a=0,l=!1;for(let h=1;h<i.length;++h){const u=i[h].split(" ");switch(u[0]){case"format":if(u[1]!=="binary_little_endian")throw new Error("Unsupported ply format");break;case"element":t={name:u[1],count:parseInt(u[2],10),properties:[],storageSizeBytes:0},t.name==="chunk"?s=t:t.name==="vertex"?n=t:t.name==="sh"&&(r=t);break;case"property":{if(!xn.has(u[1]))throw new Error(`Unrecognized property data type '${u[1]}' in ply header`);const p=xn.get(u[1]),f=p.BYTES_PER_ELEMENT*t.count;t.name==="vertex"&&(a+=p.BYTES_PER_ELEMENT),t.properties.push({type:u[1],name:u[2],storage:null,byteSize:p.BYTES_PER_ELEMENT,storageSizeByes:f}),t.storageSizeBytes+=f;break}case yn:l=!0;break;default:throw new Error(`Unrecognized header value '${u[0]}' in ply header`)}if(l)break}let c=0,d=0;return r&&(d=r.properties.length,r.properties.length>=45?c=3:r.properties.length>=24?c=2:r.properties.length>=9&&(c=1)),{chunkElement:s,vertexElement:n,shElement:r,bytesPerSplat:a,headerSizeBytes:e.indexOf(yn)+yn.length+1,sphericalHarmonicsDegree:c,sphericalHarmonicsPerSplat:d}}static decodeHeader(e){const t=(p,f)=>{const m=p.length-f.length;let g,C;for(g=0;g<=m;++g){for(C=0;C<f.length&&p[g+C]===f[C];++C);if(C===f.length)return g}return-1},s=(p,f)=>{if(p.length<f.length)return!1;for(let m=0;m<f.length;++m)if(p[m]!==f[m])return!1;return!0};let n=new Uint8Array(e),r;if(n.length>=Gr.length&&!s(n,Gr))throw new Error("Invalid PLY header");if(r=t(n,Wr),r===-1)throw new Error("End of PLY header not found");const i=new TextDecoder("ascii").decode(n.slice(0,r)),{chunkElement:a,vertexElement:l,shElement:c,sphericalHarmonicsDegree:d,sphericalHarmonicsPerSplat:h,bytesPerSplat:u}=oe.decodeHeaderText(i);return{headerSizeBytes:r+Wr.length,bytesPerSplat:u,chunkElement:a,vertexElement:l,shElement:c,sphericalHarmonicsDegree:d,sphericalHarmonicsPerSplat:h}}static readElementData(e,t,s,n,r,i=null){let a=t instanceof DataView?t:new DataView(t);n=n||0,r=r||e.count-1;for(let l=n;l<=r;++l)for(let c=0;c<e.properties.length;++c){const d=e.properties[c],h=xn.get(d.type),u=h.BYTES_PER_ELEMENT*e.count;if((!d.storage||d.storage.byteLength<u)&&(!i||i(d.name))&&(d.storage=new h(e.count)),d.storage)switch(d.type){case"char":d.storage[l]=a.getInt8(s);break;case"uchar":d.storage[l]=a.getUint8(s);break;case"short":d.storage[l]=a.getInt16(s,!0);break;case"ushort":d.storage[l]=a.getUint16(s,!0);break;case"int":d.storage[l]=a.getInt32(s,!0);break;case"uint":d.storage[l]=a.getUint32(s,!0);break;case"float":d.storage[l]=a.getFloat32(s,!0);break;case"double":d.storage[l]=a.getFloat64(s,!0);break}s+=d.byteSize}return s}static readPly(e,t=null){const s=oe.decodeHeader(e);let n=oe.readElementData(s.chunkElement,e,s.headerSizeBytes,null,null,t);return n=oe.readElementData(s.vertexElement,e,n,null,null,t),oe.readElementData(s.shElement,e,n,null,null,t),{chunkElement:s.chunkElement,vertexElement:s.vertexElement,shElement:s.shElement,sphericalHarmonicsDegree:s.sphericalHarmonicsDegree,sphericalHarmonicsPerSplat:s.sphericalHarmonicsPerSplat}}static getElementStorageArrays(e,t,s){const n={};if(t){const r=fe(e,"min_r"),i=fe(e,"min_g"),a=fe(e,"min_b"),l=fe(e,"max_r"),c=fe(e,"max_g"),d=fe(e,"max_b"),h=fe(e,"min_x"),u=fe(e,"min_y"),p=fe(e,"min_z"),f=fe(e,"max_x"),m=fe(e,"max_y"),g=fe(e,"max_z"),C=fe(e,"min_scale_x"),A=fe(e,"min_scale_y"),x=fe(e,"min_scale_z"),v=fe(e,"max_scale_x"),S=fe(e,"max_scale_y"),T=fe(e,"max_scale_z"),y=fe(t,"packed_position"),w=fe(t,"packed_rotation"),B=fe(t,"packed_scale"),E=fe(t,"packed_color");n.colorExtremes={minR:r,maxR:l,minG:i,maxG:c,minB:a,maxB:d},n.positionExtremes={minX:h,maxX:f,minY:u,maxY:m,minZ:p,maxZ:g},n.scaleExtremes={minScaleX:C,maxScaleX:v,minScaleY:A,maxScaleY:S,minScaleZ:x,maxScaleZ:T},n.position=y,n.rotation=w,n.scale=B,n.color=E}if(s){const r={};for(let i=0;i<45;i++){const a=`f_rest_${i}`,l=fe(s,a);if(l)r[a]=l;else break}n.sh=r}return n}static parseToUncompressedSplatBufferSection(e,t,s,n,r,i,a,l,c=null){oe.readElementData(t,i,0,s,n,c);const d=O.CompressionLevels[0].SphericalHarmonicsDegrees[0].BytesPerSplat,{positionExtremes:h,scaleExtremes:u,colorExtremes:p,position:f,rotation:m,scale:g,color:C}=oe.getElementStorageArrays(e,t),A=U.createSplat();for(let x=s;x<=n;++x){oe.decompressBaseSplat(x,r,f,h,g,u,m,p,C,A);const v=x*d+l;O.writeSplatDataToSectionBuffer(A,a,v,0,0)}}static parseToUncompressedSplatArraySection(e,t,s,n,r,i,a,l=null){oe.readElementData(t,i,0,s,n,l);const{positionExtremes:c,scaleExtremes:d,colorExtremes:h,position:u,rotation:p,scale:f,color:m}=oe.getElementStorageArrays(e,t);for(let g=s;g<=n;++g){const C=U.createSplat();oe.decompressBaseSplat(g,r,u,c,f,d,p,h,m,C),a.addSplat(C)}}static parseSphericalHarmonicsToUncompressedSplatArraySection(e,t,s,n,r,i,a,l,c,d=null){oe.readElementData(t,r,i,s,n,d);const{sh:h}=oe.getElementStorageArrays(e,void 0,t),u=Object.values(h);for(let p=s;p<=n;++p)oe.decompressSphericalHarmonics(p,u,a,l,c.splats[p])}static parseToUncompressedSplatArray(e,t){const{chunkElement:s,vertexElement:n,shElement:r,sphericalHarmonicsDegree:i}=oe.readPly(e);t=Math.min(t,i);const a=new U(t),{positionExtremes:l,scaleExtremes:c,colorExtremes:d,position:h,rotation:u,scale:p,color:f}=oe.getElementStorageArrays(s,n);let m;if(t>0){const{sh:g}=oe.getElementStorageArrays(s,void 0,r);m=Object.values(g)}for(let g=0;g<n.count;++g){a.addDefaultSplat();const C=a.getSplat(a.splatCount-1);oe.decompressBaseSplat(g,0,h,l,p,c,u,d,f,C),t>0&&oe.decompressSphericalHarmonics(g,m,t,i,C)}return a}static parseToUncompressedSplatBuffer(e,t){const{chunkElement:s,vertexElement:n,shElement:r,sphericalHarmonicsDegree:i}=oe.readPly(e);t=Math.min(t,i);const{splatBuffer:a,splatBufferDataOffsetBytes:l}=O.preallocateUncompressed(n.count,t),{positionExtremes:c,scaleExtremes:d,colorExtremes:h,position:u,rotation:p,scale:f,color:m}=oe.getElementStorageArrays(s,n);let g;if(t>0){const{sh:x}=oe.getElementStorageArrays(s,void 0,r);g=Object.values(x)}const C=O.CompressionLevels[0].SphericalHarmonicsDegrees[t].BytesPerSplat,A=U.createSplat(t);for(let x=0;x<n.count;++x){oe.decompressBaseSplat(x,0,u,c,f,d,p,h,m,A),t>0&&oe.decompressSphericalHarmonics(x,g,t,i,A);const v=x*C+l;O.writeSplatDataToSectionBuffer(A,a.bufferData,v,0,t)}return a}};let We=oe;_(We,"decompressBaseSplat",function(){const e=new I,t=new Ae,s=new I,n=new Vn,r=U.OFFSET;return function(i,a,l,c,d,h,u,p,f,m){m=m||U.createSplat();const g=Math.floor((a+i)/256);return qr(e,l[i]),wd(t,u[i]),qr(s,d[i]),vd(n,f[i]),m[r.X]=st(c.minX[g],c.maxX[g],e.x),m[r.Y]=st(c.minY[g],c.maxY[g],e.y),m[r.Z]=st(c.minZ[g],c.maxZ[g],e.z),m[r.ROTATION0]=t.x,m[r.ROTATION1]=t.y,m[r.ROTATION2]=t.z,m[r.ROTATION3]=t.w,m[r.SCALE0]=Math.exp(st(h.minScaleX[g],h.maxScaleX[g],s.x)),m[r.SCALE1]=Math.exp(st(h.minScaleY[g],h.maxScaleY[g],s.y)),m[r.SCALE2]=Math.exp(st(h.minScaleZ[g],h.maxScaleZ[g],s.z)),p.minR&&p.maxR?m[r.FDC0]=pe(Math.round(st(p.minR[g],p.maxR[g],n.x)*255),0,255):m[r.FDC0]=pe(Math.floor(n.x*255),0,255),p.minG&&p.maxG?m[r.FDC1]=pe(Math.round(st(p.minG[g],p.maxG[g],n.y)*255),0,255):m[r.FDC1]=pe(Math.floor(n.y*255),0,255),p.minB&&p.maxB?m[r.FDC2]=pe(Math.round(st(p.minB[g],p.maxB[g],n.z)*255),0,255):m[r.FDC2]=pe(Math.floor(n.z*255),0,255),m[r.OPACITY]=pe(Math.floor(n.w*255),0,255),m}}()),_(We,"decompressSphericalHarmonics",function(){const e=[0,3,8,15],t=[0,1,2,9,10,11,12,13,24,25,26,27,28,29,30,3,4,5,14,15,16,17,18,31,32,33,34,35,36,37,6,7,8,19,20,21,22,23,38,39,40,41,42,43,44];return function(s,n,r,i,a){a=a||U.createSplat();let l=e[r],c=e[i];for(let d=0;d<3;++d)for(let h=0;h<15;++h){const u=t[d*15+h];h<l&&h<c&&(a[U.OFFSET.FRC0+u]=n[d*c+h][s]*(8/255)-4)}return a}}());const Re={INRIAV1:0,INRIAV2:1,PlayCanvasCompressed:2},[fo,fr,mr,gr,Ar,Cr,Sr]=[0,1,2,3,4,5,6],$r={double:fo,int:fr,uint:mr,float:gr,short:Ar,ushort:Cr,uchar:Sr},Td={[fo]:8,[fr]:4,[mr]:4,[gr]:4,[Ar]:2,[Cr]:2,[Sr]:1},ze=class{static decodeSectionHeader(e,t,s=0){const n=[];let r=!1,i=-1,a=0,l=!1,c=null;const d=[],h=[],u=[],p={};for(let C=s;C<e.length;C++){const A=e[C].trim();if(A.startsWith("element"))if(r){i--;break}else{r=!0,s=C,i=C;const x=A.split(" ");let v=0;for(let S of x){const T=S.trim();T.length>0&&(v++,v===2?c=T:v===3&&(a=parseInt(T)))}}else if(A.startsWith("property")){const x=A.match(/(\w+)\s+(\w+)\s+(\w+)/);if(x){const v=x[2],S=x[3];u.push(S);const T=t[S];p[S]=v;const y=$r[v];T!==void 0&&(d.push(T),h[T]=y)}}if(A===ze.HeaderEndToken){l=!0;break}r&&(n.push(A),i++)}const f=[];let m=0;for(let C of u){const A=p[C];if(p.hasOwnProperty(C)){const x=t[C];x!==void 0&&(f[x]=m)}m+=Td[$r[A]]}const g=ze.decodeSphericalHarmonicsFromSectionHeader(u,t);return{headerLines:n,headerStartLine:s,headerEndLine:i,fieldTypes:h,fieldIds:d,fieldOffsets:f,bytesPerVertex:m,vertexCount:a,dataSizeBytes:m*a,endOfHeader:l,sectionName:c,sphericalHarmonicsDegree:g.degree,sphericalHarmonicsCoefficientsPerChannel:g.coefficientsPerChannel,sphericalHarmonicsDegree1Fields:g.degree1Fields,sphericalHarmonicsDegree2Fields:g.degree2Fields}}static decodeSphericalHarmonicsFromSectionHeader(e,t){let s=0,n=0;for(let l of e)l.startsWith("f_rest")&&s++;n=s/3;let r=0;n>=3&&(r=1),n>=8&&(r=2);let i=[],a=[];for(let l=0;l<3;l++){if(r>=1)for(let c=0;c<3;c++)i.push(t["f_rest_"+(c+n*l)]);if(r>=2)for(let c=0;c<5;c++)a.push(t["f_rest_"+(c+n*l+3)])}return{degree:r,coefficientsPerChannel:n,degree1Fields:i,degree2Fields:a}}static getHeaderSectionNames(e){const t=[];for(let s of e)if(s.startsWith("element")){const n=s.split(" ");let r=0;for(let i of n){const a=i.trim();a.length>0&&(r++,r===2&&t.push(a))}}return t}static checkTextForEndHeader(e){return!!e.includes(ze.HeaderEndToken)}static checkBufferForEndHeader(e,t,s,n){const r=new Uint8Array(e,Math.max(0,t-s),s),i=n.decode(r);return ze.checkTextForEndHeader(i)}static extractHeaderFromBufferToText(e){const t=new TextDecoder;let s=0,n="";const r=100;for(;;){if(s+r>=e.byteLength)throw new Error("End of file reached while searching for end of header");const i=new Uint8Array(e,s,r);if(n+=t.decode(i),s+=r,ze.checkBufferForEndHeader(e,s,r*2,t))break}return n}static readHeaderFromBuffer(e){const t=new TextDecoder;let s=0,n="";const r=100;for(;;){if(s+r>=e.byteLength)throw new Error("End of file reached while searching for end of header");const i=new Uint8Array(e,s,r);if(n+=t.decode(i),s+=r,ze.checkBufferForEndHeader(e,s,r*2,t))break}return n}static convertHeaderTextToLines(e){const t=e.split(`
`),s=[];for(let n=0;n<t.length;n++){const r=t[n].trim();if(s.push(r),r===ze.HeaderEndToken)break}return s}static determineHeaderFormatFromHeaderText(e){const t=ze.convertHeaderTextToLines(e);let s=Re.INRIAV1;for(let n=0;n<t.length;n++){const r=t[n].trim();if(r.startsWith("element chunk")||r.match(/[A-Za-z]*packed_[A-Za-z]*/))s=Re.PlayCanvasCompressed;else if(r.startsWith("element codebook_centers"))s=Re.INRIAV2;else if(r===ze.HeaderEndToken)break}return s}static determineHeaderFormatFromPlyBuffer(e){const t=ze.extractHeaderFromBufferToText(e);return ze.determineHeaderFormatFromHeaderText(t)}static readVertex(e,t,s,n,r,i,a=!0){const l=s*t.bytesPerVertex+n,c=t.fieldOffsets,d=t.fieldTypes;for(let h of r){const u=d[h];u===gr?i[h]=e.getFloat32(l+c[h],!0):u===Ar?i[h]=e.getInt16(l+c[h],!0):u===Cr?i[h]=e.getUint16(l+c[h],!0):u===fr?i[h]=e.getInt32(l+c[h],!0):u===mr?i[h]=e.getUint32(l+c[h],!0):u===Sr&&(a?i[h]=e.getUint8(l+c[h])/255:i[h]=e.getUint8(l+c[h]))}}};let ge=ze;_(ge,"HeaderEndToken","end_header");const mo=["scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3","x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","red","green","blue","f_rest_0"],Id=mo.map((o,e)=>e),[Kr,Ed,Pd,Dd,Bd,Fd,Md,Od,Rd,_d,Yr,Ld,Hd,Zr,Xr,Ud,zd,kd]=Id,Ge=class{static decodeHeaderLines(e){let t=0;e.forEach(d=>{d.includes("f_rest_")&&t++});let s=0;t>=45?s=45:t>=24?s=24:t>=9&&(s=9);let r=Array.from(Array(Math.max(s-1,0))).map((d,h)=>`f_rest_${h+1}`);const i=[...mo,...r],a=i.map((d,h)=>h),l=a.reduce((d,h)=>(d[i[h]]=h,d),{}),c=ge.decodeSectionHeader(e,l,0);return c.splatCount=c.vertexCount,c.bytesPerSplat=c.bytesPerVertex,c.fieldsToReadIndexes=a,c}static decodeHeaderText(e){const t=ge.convertHeaderTextToLines(e),s=Ge.decodeHeaderLines(t);return s.headerText=e,s.headerSizeBytes=e.indexOf(ge.HeaderEndToken)+ge.HeaderEndToken.length+1,s}static decodeHeaderFromBuffer(e){const t=ge.readHeaderFromBuffer(e);return Ge.decodeHeaderText(t)}static findSplatData(e,t){return new DataView(e,t.headerSizeBytes)}static parseToUncompressedSplatBufferSection(e,t,s,n,r,i,a,l=0){l=Math.min(l,e.sphericalHarmonicsDegree);const c=O.CompressionLevels[0].SphericalHarmonicsDegrees[l].BytesPerSplat;for(let d=t;d<=s;d++){const h=Ge.parseToUncompressedSplat(n,d,e,r,l),u=d*c+a;O.writeSplatDataToSectionBuffer(h,i,u,0,l)}}static parseToUncompressedSplatArraySection(e,t,s,n,r,i,a=0){a=Math.min(a,e.sphericalHarmonicsDegree);for(let l=t;l<=s;l++){const c=Ge.parseToUncompressedSplat(n,l,e,r,a);i.addSplat(c)}}static decodeSectionSplatData(e,t,s,n,r=!0){if(n=Math.min(n,s.sphericalHarmonicsDegree),r){const i=new U(n);for(let a=0;a<t;a++){const l=Ge.parseToUncompressedSplat(e,a,s,0,n);i.addSplat(l)}return i}else{const{splatBuffer:i,splatBufferDataOffsetBytes:a}=O.preallocateUncompressed(t,n);return Ge.parseToUncompressedSplatBufferSection(s,0,t-1,e,0,i.bufferData,a,n),i}}static readSplat(e,t,s,n,r){return ge.readVertex(e,t,s,n,t.fieldsToReadIndexes,r,!0)}static parseToUncompressedSplatArray(e,t=0){const{header:s,splatCount:n,splatData:r}=Jr(e);return Ge.decodeSectionSplatData(r,n,s,t,!0)}static parseToUncompressedSplatBuffer(e,t=0){const{header:s,splatCount:n,splatData:r}=Jr(e);return Ge.decodeSectionSplatData(r,n,s,t,!1)}};let Ze=Ge;_(Ze,"parseToUncompressedSplat",function(){let e=[];const t=new Ae,s=U.OFFSET.X,n=U.OFFSET.Y,r=U.OFFSET.Z,i=U.OFFSET.SCALE0,a=U.OFFSET.SCALE1,l=U.OFFSET.SCALE2,c=U.OFFSET.ROTATION0,d=U.OFFSET.ROTATION1,h=U.OFFSET.ROTATION2,u=U.OFFSET.ROTATION3,p=U.OFFSET.FDC0,f=U.OFFSET.FDC1,m=U.OFFSET.FDC2,g=U.OFFSET.OPACITY,C=[];for(let A=0;A<45;A++)C[A]=U.OFFSET.FRC0+A;return function(A,x,v,S=0,T=0){T=Math.min(T,v.sphericalHarmonicsDegree),Ge.readSplat(A,v,x,S,e);const y=U.createSplat(T);if(e[Kr]!==void 0?(y[i]=Math.exp(e[Kr]),y[a]=Math.exp(e[Ed]),y[l]=Math.exp(e[Pd])):(y[i]=.01,y[a]=.01,y[l]=.01),e[Yr]!==void 0){const w=.28209479177387814;y[p]=(.5+w*e[Yr])*255,y[f]=(.5+w*e[Ld])*255,y[m]=(.5+w*e[Hd])*255}else e[Xr]!==void 0?(y[p]=e[Xr]*255,y[f]=e[Ud]*255,y[m]=e[zd]*255):(y[p]=0,y[f]=0,y[m]=0);if(e[Zr]!==void 0&&(y[g]=1/(1+Math.exp(-e[Zr]))*255),y[p]=pe(Math.floor(y[p]),0,255),y[f]=pe(Math.floor(y[f]),0,255),y[m]=pe(Math.floor(y[m]),0,255),y[g]=pe(Math.floor(y[g]),0,255),T>=1&&e[kd]!==void 0){for(let w=0;w<9;w++)y[C[w]]=e[v.sphericalHarmonicsDegree1Fields[w]];if(T>=2)for(let w=0;w<15;w++)y[C[9+w]]=e[v.sphericalHarmonicsDegree2Fields[w]]}return t.set(e[Dd],e[Bd],e[Fd],e[Md]),t.normalize(),y[c]=t.x,y[d]=t.y,y[h]=t.z,y[u]=t.w,y[s]=e[Od],y[n]=e[Rd],y[r]=e[_d],y}}());function Jr(o){const e=Ze.decodeHeaderFromBuffer(o),t=e.splatCount,s=Ze.findSplatData(o,e);return{header:e,splatCount:t,splatData:s}}const go=["features_dc","features_rest_0","features_rest_1","features_rest_2","features_rest_3","features_rest_4","features_rest_5","features_rest_6","features_rest_7","features_rest_8","features_rest_9","features_rest_10","features_rest_11","features_rest_12","features_rest_13","features_rest_14","opacity","scaling","rotation_re","rotation_im"],ws=go.map((o,e)=>e),[Ts,jd,Nd,ei,Is,Qd,bn]=[0,1,4,16,17,18,19],Ao=["scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3","x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","red","green","blue","f_rest_0","f_rest_1","f_rest_2","f_rest_3","f_rest_4","f_rest_5","f_rest_6","f_rest_7","f_rest_8","f_rest_9","f_rest_10","f_rest_11","f_rest_12","f_rest_13","f_rest_14","f_rest_15","f_rest_16","f_rest_17","f_rest_18","f_rest_19","f_rest_20","f_rest_21","f_rest_22","f_rest_23","f_rest_24","f_rest_25","f_rest_26","f_rest_27","f_rest_28","f_rest_29","f_rest_30","f_rest_31","f_rest_32","f_rest_33","f_rest_34","f_rest_35","f_rest_36","f_rest_37","f_rest_38","f_rest_39","f_rest_40","f_rest_41","f_rest_42","f_rest_43","f_rest_44","f_rest_45"],Hn=Ao.map((o,e)=>e),[ti,Vd,Gd,Wd,qd,$d,Kd,Yd,Zd,Xd,Un,Co,So,si]=Hn,ni=Un,Jd=Co,eh=So,Es=o=>{const e=(31744&o)>>10,t=1023&o;return(o>>15?-1:1)*(e?e===31?t?NaN:1/0:Math.pow(2,e-15)*(1+t/1024):t/1024*6103515625e-14)},ke=class{static decodeSectionHeadersFromHeaderLines(e){const t=Hn.reduce((d,h)=>(d[Ao[h]]=h,d),{}),s=ws.reduce((d,h)=>(d[go[h]]=h,d),{}),n=ge.getHeaderSectionNames(e);let r;for(let d=0;d<n.length;d++)n[d]==="codebook_centers"&&(r=d);let i=0,a=!1;const l=[];let c=0;for(;!a;){let d;c===r?d=ge.decodeSectionHeader(e,s,i):d=ge.decodeSectionHeader(e,t,i),a=d.endOfHeader,i=d.headerEndLine+1,a||(d.splatCount=d.vertexCount,d.bytesPerSplat=d.bytesPerVertex),l.push(d),c++}return l}static decodeSectionHeadersFromHeaderText(e){const t=ge.convertHeaderTextToLines(e);return ke.decodeSectionHeadersFromHeaderLines(t)}static getSplatCountFromSectionHeaders(e){let t=0;for(let s of e)s.sectionName!=="codebook_centers"&&(t+=s.vertexCount);return t}static decodeHeaderFromHeaderText(e){const t=e.indexOf(ge.HeaderEndToken)+ge.HeaderEndToken.length+1,s=ke.decodeSectionHeadersFromHeaderText(e),n=ke.getSplatCountFromSectionHeaders(s);return{headerSizeBytes:t,sectionHeaders:s,splatCount:n}}static decodeHeaderFromBuffer(e){const t=ge.readHeaderFromBuffer(e);return ke.decodeHeaderFromHeaderText(t)}static findVertexData(e,t,s){let n=t.headerSizeBytes;for(let r=0;r<s&&r<t.sectionHeaders.length;r++){const i=t.sectionHeaders[r];n+=i.dataSizeBytes}return new DataView(e,n,t.sectionHeaders[s].dataSizeBytes)}static decodeCodeBook(e,t){const s=[],n=[];for(let r=0;r<t.vertexCount;r++){ge.readVertex(e,t,r,0,ws,s);for(let i of ws){const a=ws[i];let l=n[a];l||(n[a]=l=[]),l.push(s[i])}}for(let r=0;r<n.length;r++){const i=n[r],a=.28209479177387814;for(let l=0;l<i.length;l++){const c=Es(i[l]);r===ei?i[l]=Math.round(1/(1+Math.exp(-c))*255):r===Ts?i[l]=Math.round((.5+a*c)*255):r===Is?i[l]=Math.exp(c):i[l]=c}}return n}static decodeSectionSplatData(e,t,s,n,r){r=Math.min(r,s.sphericalHarmonicsDegree);const i=new U(r);for(let a=0;a<t;a++){const l=ke.parseToUncompressedSplat(e,a,s,n,0,r);i.addSplat(l)}return i}static readSplat(e,t,s,n,r){return ge.readVertex(e,t,s,n,Hn,r,!1)}static parseToUncompressedSplatArray(e,t=0){const s=[],n=ke.decodeHeaderFromBuffer(e,t);let r;for(let a=0;a<n.sectionHeaders.length;a++){const l=n.sectionHeaders[a];if(l.sectionName==="codebook_centers"){const c=ke.findVertexData(e,n,a);r=ke.decodeCodeBook(c,l)}}for(let a=0;a<n.sectionHeaders.length;a++){const l=n.sectionHeaders[a];if(l.sectionName!=="codebook_centers"){const c=l.vertexCount,d=ke.findVertexData(e,n,a),h=ke.decodeSectionSplatData(d,c,l,r,t);s.push(h)}}const i=new U(t);for(let a of s)for(let l of a.splats)i.addSplat(l);return i}};let Os=ke;_(Os,"parseToUncompressedSplat",function(){let e=[];const t=new Ae,s=U.OFFSET.X,n=U.OFFSET.Y,r=U.OFFSET.Z,i=U.OFFSET.SCALE0,a=U.OFFSET.SCALE1,l=U.OFFSET.SCALE2,c=U.OFFSET.ROTATION0,d=U.OFFSET.ROTATION1,h=U.OFFSET.ROTATION2,u=U.OFFSET.ROTATION3,p=U.OFFSET.FDC0,f=U.OFFSET.FDC1,m=U.OFFSET.FDC2,g=U.OFFSET.OPACITY,C=[];for(let A=0;A<45;A++)C[A]=U.OFFSET.FRC0+A;return function(A,x,v,S,T=0,y=0){y=Math.min(y,v.sphericalHarmonicsDegree),ke.readSplat(A,v,x,T,e);const w=U.createSplat(y);if(e[ti]!==void 0?(w[i]=S[Is][e[ti]],w[a]=S[Is][e[Vd]],w[l]=S[Is][e[Gd]]):(w[i]=.01,w[a]=.01,w[l]=.01),e[Un]!==void 0?(w[p]=S[Ts][e[Un]],w[f]=S[Ts][e[Co]],w[m]=S[Ts][e[So]]):e[ni]!==void 0?(w[p]=e[ni]*255,w[f]=e[Jd]*255,w[m]=e[eh]*255):(w[p]=0,w[f]=0,w[m]=0),e[si]!==void 0&&(w[g]=S[ei][e[si]]),w[p]=pe(Math.floor(w[p]),0,255),w[f]=pe(Math.floor(w[f]),0,255),w[m]=pe(Math.floor(w[m]),0,255),w[g]=pe(Math.floor(w[g]),0,255),y>=1&&v.sphericalHarmonicsDegree>=1){for(let M=0;M<9;M++){const F=S[jd+M%3];w[C[M]]=F[e[v.sphericalHarmonicsDegree1Fields[M]]]}if(y>=2&&v.sphericalHarmonicsDegree>=2)for(let M=0;M<15;M++){const F=S[Nd+M%5];w[C[9+M]]=F[e[v.sphericalHarmonicsDegree2Fields[M]]]}}const B=S[Qd][e[Wd]],E=S[bn][e[qd]],R=S[bn][e[$d]],L=S[bn][e[Kd]];return t.set(B,E,R,L),t.normalize(),w[c]=t.x,w[d]=t.y,w[h]=t.z,w[u]=t.w,w[s]=Es(e[Yd]),w[n]=Es(e[Zd]),w[r]=Es(e[Xd]),w}}());class ri{static parseToUncompressedSplatArray(e,t=0){const s=ge.determineHeaderFormatFromPlyBuffer(e);if(s===Re.PlayCanvasCompressed)return We.parseToUncompressedSplatArray(e,t);if(s===Re.INRIAV1)return Ze.parseToUncompressedSplatArray(e,t);if(s===Re.INRIAV2)return Os.parseToUncompressedSplatArray(e,t)}static parseToUncompressedSplatBuffer(e,t=0){const s=ge.determineHeaderFormatFromPlyBuffer(e);if(s===Re.PlayCanvasCompressed)return We.parseToUncompressedSplatBuffer(e,t);if(s===Re.INRIAV1)return Ze.parseToUncompressedSplatBuffer(e,t);if(s===Re.INRIAV2)throw new Error("parseToUncompressedSplatBuffer() is not implemented for INRIA V2 PLY files")}}class yr{constructor(e,t,s,n){this.sectionCount=e,this.sectionFilters=t,this.groupingParameters=s,this.partitionGenerator=n}partitionUncompressedSplatArray(e){let t,s,n;if(this.partitionGenerator){const i=this.partitionGenerator(e);t=i.groupingParameters,s=i.sectionCount,n=i.sectionFilters}else t=this.groupingParameters,s=this.sectionCount,n=this.sectionFilters;const r=[];for(let i=0;i<s;i++){const a=new U(e.sphericalHarmonicsDegree),l=n[i];for(let c=0;c<e.splatCount;c++)l(c)&&a.addSplat(e.splats[c]);r.push(a)}return{splatArrays:r,parameters:t}}static getStandardPartitioner(e=0,t=new I,s=O.BucketBlockSize,n=O.BucketSize){const r=i=>{const a=U.OFFSET.X,l=U.OFFSET.Y,c=U.OFFSET.Z;e<=0&&(e=i.splatCount);const d=new I,h=.5,u=C=>{C.x=Math.floor(C.x/h)*h,C.y=Math.floor(C.y/h)*h,C.z=Math.floor(C.z/h)*h};i.splats.forEach(C=>{d.set(C[a],C[l],C[c]).sub(t),u(d),C.centerDist=d.lengthSq()}),i.splats.sort((C,A)=>{let x=C.centerDist,v=A.centerDist;return x>v?1:-1});const p=[],f=[];e=Math.min(i.splatCount,e);const m=Math.ceil(i.splatCount/e);let g=0;for(let C=0;C<m;C++){let A=g;p.push(x=>x>=A&&x<A+e),f.push({blocksSize:s,bucketSize:n}),g+=e}return{sectionCount:p.length,sectionFilters:p,groupingParameters:f}};return new yr(void 0,void 0,void 0,r)}}class As{constructor(e,t,s,n,r,i,a){this.splatPartitioner=e,this.alphaRemovalThreshold=t,this.compressionLevel=s,this.sectionSize=n,this.sceneCenter=r?new I().copy(r):void 0,this.blockSize=i,this.bucketSize=a}generateFromUncompressedSplatArray(e){const t=this.splatPartitioner.partitionUncompressedSplatArray(e);return O.generateFromUncompressedSplatArrays(t.splatArrays,this.alphaRemovalThreshold,this.compressionLevel,this.sceneCenter,this.blockSize,this.bucketSize,t.parameters)}static getStandardGenerator(e=1,t=1,s=0,n=new I,r=O.BucketBlockSize,i=O.BucketSize){const a=yr.getStandardPartitioner(s,n,r,i);return new As(a,e,t,s,n,r,i)}}const xe={Downloading:0,Processing:1,Done:2};class Us extends Error{constructor(e){super(e)}}const le={ProgressiveToSplatBuffer:0,ProgressiveToSplatArray:1,DownloadBeforeProcessing:2};function ii(o,e){let t=0;for(let n of o)t+=n.sizeBytes;(!e||e.byteLength<t)&&(e=new ArrayBuffer(t));let s=0;for(let n of o)new Uint8Array(e,s,n.sizeBytes).set(n.data),s+=n.sizeBytes;return e}function oi(o,e,t,s,n,r,i,a){return e?As.getStandardGenerator(t,s,n,r,i,a).generateFromUncompressedSplatArray(o):O.generateFromUncompressedSplatArrays([o],t,0,new I)}class dn{static loadFromURL(e,t,s,n,r,i,a=!0,l=0,c,d,h,u,p){let f;!s&&!a?f=le.DownloadBeforeProcessing:a?f=le.ProgressiveToSplatArray:f=le.ProgressiveToSplatBuffer;const m=$.ProgressiveLoadSectionSize,g=O.HeaderSizeBytes+O.SectionHeaderSizeBytes,C=1;let A,x,v,S,T,y=0,w=0,B=0,E=!1,R=!1,L=!1;const M=dr();let F=0,H=0,k=0,Q=0,G="",N=null,W=[],te;const me=new TextDecoder,se=(K,re,Y)=>{const ne=K>=100;if(Y&&(W.push({data:Y,sizeBytes:Y.byteLength,startBytes:k,endBytes:k+Y.byteLength}),k+=Y.byteLength),f===le.DownloadBeforeProcessing)ne&&M.resolve(W);else{if(E){if(A===Re.PlayCanvasCompressed&&!R){const Ce=N.headerSizeBytes+N.chunkElement.storageSizeBytes;T=ii(W,T),T.byteLength>=Ce&&(We.readElementData(N.chunkElement,T,N.headerSizeBytes),F=Ce,H=Ce,R=!0)}}else if(G+=me.decode(Y),ge.checkTextForEndHeader(G)){if(A=ge.determineHeaderFormatFromHeaderText(G),A===Re.INRIAV1)N=Ze.decodeHeaderText(G),l=Math.min(l,N.sphericalHarmonicsDegree),y=N.splatCount,R=!0,Q=N.headerSizeBytes+N.bytesPerSplat*y;else if(A===Re.PlayCanvasCompressed){if(N=We.decodeHeaderText(G),l=Math.min(l,N.sphericalHarmonicsDegree),f===le.ProgressiveToSplatBuffer&&l>0)throw new Us("PlyLoader.loadFromURL() -> Selected PLY format has spherical harmonics data that cannot be progressively loaded.");y=N.vertexElement.count,Q=N.headerSizeBytes+N.bytesPerSplat*y+N.chunkElement.storageSizeBytes}else{if(f===le.ProgressiveToSplatBuffer)throw new Us("PlyLoader.loadFromURL() -> Selected PLY format cannot be progressively loaded.");f=le.DownloadBeforeProcessing;return}if(f===le.ProgressiveToSplatBuffer){const Ce=O.CompressionLevels[0].SphericalHarmonicsDegrees[l],Se=g+Ce.BytesPerSplat*y;v=new ArrayBuffer(Se),O.writeHeaderToBuffer({versionMajor:O.CurrentMajorVersion,versionMinor:O.CurrentMinorVersion,maxSectionCount:C,sectionCount:C,maxSplatCount:y,splatCount:0,compressionLevel:0,sceneCenter:new I},v)}else te=new U(l);F=N.headerSizeBytes,H=N.headerSizeBytes,E=!0}if(E&&R&&W.length>0&&(x=ii(W,x),k-F>m||k>=Q&&!L||ne)){const Se=L?N.sphericalHarmonicsPerSplat:N.bytesPerSplat,Be=(L?k:Math.min(Q,k))-H,we=Math.floor(Be/Se),ce=we*Se,Te=k-H-ce,ie=H-W[0].startBytes,Ne=new DataView(x,ie,ce);if(L)A===Re.PlayCanvasCompressed&&f===le.ProgressiveToSplatArray&&(We.parseSphericalHarmonicsToUncompressedSplatArraySection(N.chunkElement,N.shElement,B,B+we-1,Ne,0,l,N.sphericalHarmonicsDegree,te),B+=we);else{if(f===le.ProgressiveToSplatBuffer){const Ke=O.CompressionLevels[0].SphericalHarmonicsDegrees[l],Pe=w*Ke.BytesPerSplat+g;A===Re.PlayCanvasCompressed?We.parseToUncompressedSplatBufferSection(N.chunkElement,N.vertexElement,0,we-1,w,Ne,v,Pe):Ze.parseToUncompressedSplatBufferSection(N,0,we-1,Ne,0,v,Pe,l)}else A===Re.PlayCanvasCompressed?We.parseToUncompressedSplatArraySection(N.chunkElement,N.vertexElement,0,we-1,w,Ne,te):Ze.parseToUncompressedSplatArraySection(N,0,we-1,Ne,0,te,l);w+=we,f===le.ProgressiveToSplatBuffer&&(S||(O.writeSectionHeaderToBuffer({maxSplatCount:y,splatCount:w,bucketSize:0,bucketCount:0,bucketBlockSize:0,compressionScaleRange:0,storageSizeBytes:0,fullBucketCount:0,partiallyFilledBucketCount:0,sphericalHarmonicsDegree:l},0,v,O.HeaderSizeBytes),S=new O(v,!1)),S.updateLoadedCounts(1,w)),k>=Q&&(L=!0)}if(Te===0)W=[];else{let Ke=[],Pe=0;for(let He=W.length-1;He>=0;He--){const at=W[He];if(Pe+=at.sizeBytes,Ke.unshift(at),Pe>=Te)break}W=Ke}F+=m,H+=ce}n&&S&&n(S,ne),ne&&(f===le.ProgressiveToSplatBuffer?M.resolve(S):M.resolve(te))}t&&t(K,re,xe.Downloading)};return t&&t(0,"0%",xe.Downloading),cn(e,se,!1,c).then(()=>(t&&t(0,"0%",xe.Processing),M.promise.then(K=>{if(t&&t(100,"100%",xe.Done),f===le.DownloadBeforeProcessing){const re=W.map(Y=>Y.data);return new Blob(re).arrayBuffer().then(Y=>dn.loadFromFileData(Y,r,i,a,l,d,h,u,p))}else return f===le.ProgressiveToSplatBuffer?K:je(()=>oi(K,a,r,i,d,h,u,p))})))}static loadFromFileData(e,t,s,n,r=0,i,a,l,c){return n?je(()=>ri.parseToUncompressedSplatArray(e,r)).then(d=>oi(d,n,t,s,i,a,l,c)):je(()=>ri.parseToUncompressedSplatBuffer(e,r))}}const th=o=>new ReadableStream({async start(e){e.enqueue(o),e.close()}});async function sh(o){try{const e=th(o);if(!e)throw new Error("Failed to create stream from data");return await nh(e)}catch(e){throw console.error("Error decompressing gzipped data:",e),e}}async function nh(o){const e=o.pipeThrough(new DecompressionStream("gzip")),s=await new Response(e).arrayBuffer();return new Uint8Array(s)}const rh=1347635022,ih=1,oh=.15;function ah(o){const e=o>>15&1,t=o>>10&31,s=o&1023,n=e===1?-1:1;return t===0?n*Math.pow(2,-14)*s/1024:t===31?s!==0?NaN:n*(1/0):n*Math.pow(2,t-15)*(1+s/1024)}function lh(o){return(o-128)/128}function At(o){switch(o){case 0:return 0;case 1:return 3;case 2:return 8;case 3:return 15;default:return console.error(`[SPZ: ERROR] Unsupported SH degree: ${o}`),0}}const ch=function(){let o=[];const e=new Ae,t=U.OFFSET.X,s=U.OFFSET.Y,n=U.OFFSET.Z,r=U.OFFSET.SCALE0,i=U.OFFSET.SCALE1,a=U.OFFSET.SCALE2,l=U.OFFSET.ROTATION0,c=U.OFFSET.ROTATION1,d=U.OFFSET.ROTATION2,h=U.OFFSET.ROTATION3,u=U.OFFSET.FDC0,p=U.OFFSET.FDC1,f=U.OFFSET.FDC2,m=U.OFFSET.OPACITY,g=[At(0),At(1),At(2),At(3)],C=[0,1,2,9,10,11,12,13,24,25,26,27,28,29,30,3,4,5,14,15,16,17,18,31,32,33,34,35,36,37,6,7,8,19,20,21,22,23,38,39,40,41,42,43,44];return function(A,x,v){v=Math.min(x,v);const S=U.createSplat(v);A.scale[0]!==void 0?(S[r]=A.scale[0],S[i]=A.scale[1],S[a]=A.scale[2]):(S[r]=.01,S[i]=.01,S[a]=.01),A.color[0]!==void 0?(S[u]=A.color[0],S[p]=A.color[1],S[f]=A.color[2]):o[RED]!==void 0?(S[u]=o[RED]*255,S[p]=o[GREEN]*255,S[f]=o[BLUE]*255):(S[u]=0,S[p]=0,S[f]=0),A.alpha!==void 0&&(S[m]=A.alpha),S[u]=pe(Math.floor(S[u]),0,255),S[p]=pe(Math.floor(S[p]),0,255),S[f]=pe(Math.floor(S[f]),0,255),S[m]=pe(Math.floor(S[m]),0,255);let T=g[v],y=g[x];for(let w=0;w<3;++w)for(let B=0;B<15;++B){const E=C[w*15+B];B<T&&B<y&&(S[U.OFFSET.FRC0+E]=A.sh[w*y+B])}return e.set(A.rotation[3],A.rotation[0],A.rotation[1],A.rotation[2]),e.normalize(),S[l]=e.x,S[c]=e.y,S[d]=e.z,S[h]=e.w,S[t]=A.position[0],S[s]=A.position[1],S[n]=A.position[2],S}}();function dh(o,e,t,s){return!(o.positions.length!==e*3*(s?2:3)||o.scales.length!==e*3||o.rotations.length!==e*3||o.alphas.length!==e||o.colors.length!==e*3||o.sh.length!==e*t*3)}function ai(o,e,t,s,n){e=Math.min(e,o.shDegree);const r=o.numPoints,i=At(o.shDegree),a=o.positions.length===r*3*2;if(!dh(o,r,i,a))return null;const l={position:[],scale:[],rotation:[],alpha:void 0,color:[],sh:[]};let c;a&&(c=new Uint16Array(o.positions.buffer,o.positions.byteOffset,r*3));const d=1/(1<<o.fractionalBits),h=At(o.shDegree),u=.28209479177387814;for(let p=0;p<r;p++){if(a)for(let A=0;A<3;A++)l.position[A]=ah(c[p*3+A]);else for(let A=0;A<3;A++){const x=p*9+A*3;let v=o.positions[x];v|=o.positions[x+1]<<8,v|=o.positions[x+2]<<16,v|=v&8388608?4278190080:0,l.position[A]=v*d}for(let A=0;A<3;A++)l.scale[A]=Math.exp(o.scales[p*3+A]/16-10);const f=o.rotations.subarray(p*3,p*3+3),m=[f[0]/127.5-1,f[1]/127.5-1,f[2]/127.5-1];l.rotation[0]=m[0],l.rotation[1]=m[1],l.rotation[2]=m[2];const g=m[0]*m[0]+m[1]*m[1]+m[2]*m[2];l.rotation[3]=Math.sqrt(Math.max(0,1-g)),l.alpha=Math.floor(o.alphas[p]);for(let A=0;A<3;A++)l.color[A]=Math.floor(((o.colors[p*3+A]/255-.5)/oh*u+.5)*255);for(let A=0;A<3;A++)for(let x=0;x<h;x++)l.sh[A*h+x]=lh(o.sh[h*3*p+x*3+A]);const C=ch(l,o.shDegree,e);if(t){const A=O.CompressionLevels[0].SphericalHarmonicsDegrees[e].BytesPerSplat,x=p*A+n;O.writeSplatDataToSectionBuffer(C,s,x,0,e)}else s.addSplat(C)}}const hh=16,ph=1e7;function uh(o){const e=new DataView(o);let t=0;const s={magic:e.getUint32(t,!0),version:e.getUint32(t+4,!0),numPoints:e.getUint32(t+8,!0),shDegree:e.getUint8(t+12),fractionalBits:e.getUint8(t+13),flags:e.getUint8(t+14),reserved:e.getUint8(t+15)};if(t+=hh,s.magic!==rh)return console.error("[SPZ ERROR] deserializePackedGaussians: header not found"),null;if(s.version<1||s.version>2)return console.error(`[SPZ ERROR] deserializePackedGaussians: version not supported: ${s.version}`),null;if(s.numPoints>ph)return console.error(`[SPZ ERROR] deserializePackedGaussians: Too many points: ${s.numPoints}`),null;if(s.shDegree>3)return console.error(`[SPZ ERROR] deserializePackedGaussians: Unsupported SH degree: ${s.shDegree}`),null;const n=s.numPoints,r=At(s.shDegree),i=s.version===1,a={numPoints:n,shDegree:s.shDegree,fractionalBits:s.fractionalBits,antialiased:(s.flags&ih)!==0,positions:new Uint8Array(n*3*(i?2:3)),scales:new Uint8Array(n*3),rotations:new Uint8Array(n*3),alphas:new Uint8Array(n),colors:new Uint8Array(n*3),sh:new Uint8Array(n*r*3)};try{const l=new Uint8Array(o);let c=a.positions.length,d=t;if(a.positions.set(l.slice(d,d+c)),d+=c,a.alphas.set(l.slice(d,d+a.alphas.length)),d+=a.alphas.length,a.colors.set(l.slice(d,d+a.colors.length)),d+=a.colors.length,a.scales.set(l.slice(d,d+a.scales.length)),d+=a.scales.length,a.rotations.set(l.slice(d,d+a.rotations.length)),d+=a.rotations.length,a.sh.set(l.slice(d,d+a.sh.length)),d+a.sh.length!==o.byteLength)return console.error("[SPZ ERROR] deserializePackedGaussians: incorrect buffer size"),null}catch(l){return console.error("[SPZ ERROR] deserializePackedGaussians: read error",l),null}return a}async function fh(o){try{const e=await sh(o);return uh(e.buffer)}catch(e){return console.error("[SPZ ERROR] loadSpzPacked: decompression error",e),null}}class xr{static loadFromURL(e,t,s,n,r=!0,i=0,a,l,c,d,h){return t&&t(0,"0%",xe.Downloading),cn(e,t,!0,a).then(u=>(t&&t(0,"0%",xe.Processing),xr.loadFromFileData(u,s,n,r,i,l,c,d,h)))}static async loadFromFileData(e,t,s,n,r=0,i,a,l,c){await je();const d=await fh(e);r=Math.min(d.shDegree,r);const h=new U(r);if(n)return ai(d,r,!1,h,0),As.getStandardGenerator(t,s,i,a,l,c).generateFromUncompressedSplatArray(h);{const{splatBuffer:u,splatBufferDataOffsetBytes:p}=O.preallocateUncompressed(d.numPoints,r);return ai(d,r,!0,u.bufferData,p),u}}}const he=class{static parseToUncompressedSplatBufferSection(e,t,s,n,r,i){const a=O.CompressionLevels[0].BytesPerCenter,l=O.CompressionLevels[0].BytesPerScale,c=O.CompressionLevels[0].BytesPerRotation,d=O.CompressionLevels[0].SphericalHarmonicsDegrees[0].BytesPerSplat;for(let h=e;h<=t;h++){const u=h*he.RowSizeBytes+n,p=new Float32Array(s,u,3),f=new Float32Array(s,u+he.CenterSizeBytes,3),m=new Uint8Array(s,u+he.CenterSizeBytes+he.ScaleSizeBytes,4),g=new Uint8Array(s,u+he.CenterSizeBytes+he.ScaleSizeBytes+he.RotationSizeBytes,4),C=new Ae((g[1]-128)/128,(g[2]-128)/128,(g[3]-128)/128,(g[0]-128)/128);C.normalize();const A=h*d+i,x=new Float32Array(r,A,3),v=new Float32Array(r,A+a,3),S=new Float32Array(r,A+a+l,4),T=new Uint8Array(r,A+a+l+c,4);x[0]=p[0],x[1]=p[1],x[2]=p[2],v[0]=f[0],v[1]=f[1],v[2]=f[2],S[0]=C.w,S[1]=C.x,S[2]=C.y,S[3]=C.z,T[0]=m[0],T[1]=m[1],T[2]=m[2],T[3]=m[3]}}static parseToUncompressedSplatArraySection(e,t,s,n,r){for(let i=e;i<=t;i++){const a=i*he.RowSizeBytes+n,l=new Float32Array(s,a,3),c=new Float32Array(s,a+he.CenterSizeBytes,3),d=new Uint8Array(s,a+he.CenterSizeBytes+he.ScaleSizeBytes,4),h=new Uint8Array(s,a+he.CenterSizeBytes+he.ScaleSizeBytes+he.RotationSizeBytes,4),u=new Ae((h[1]-128)/128,(h[2]-128)/128,(h[3]-128)/128,(h[0]-128)/128);u.normalize(),r.addSplatFromComonents(l[0],l[1],l[2],c[0],c[1],c[2],u.w,u.x,u.y,u.z,d[0],d[1],d[2],d[3])}}static parseStandardSplatToUncompressedSplatArray(e){const t=e.byteLength/he.RowSizeBytes,s=new U;for(let n=0;n<t;n++){const r=n*he.RowSizeBytes,i=new Float32Array(e,r,3),a=new Float32Array(e,r+he.CenterSizeBytes,3),l=new Uint8Array(e,r+he.CenterSizeBytes+he.ScaleSizeBytes,4),c=new Uint8Array(e,r+he.CenterSizeBytes+he.ScaleSizeBytes+he.ColorSizeBytes,4),d=new Ae((c[1]-128)/128,(c[2]-128)/128,(c[3]-128)/128,(c[0]-128)/128);d.normalize(),s.addSplatFromComonents(i[0],i[1],i[2],a[0],a[1],a[2],d.w,d.x,d.y,d.z,l[0],l[1],l[2],l[3])}return s}};let Qe=he;_(Qe,"RowSizeBytes",32),_(Qe,"CenterSizeBytes",12),_(Qe,"ScaleSizeBytes",12),_(Qe,"RotationSizeBytes",4),_(Qe,"ColorSizeBytes",4);function li(o,e,t,s,n,r,i,a){return e?As.getStandardGenerator(t,s,n,r,i,a).generateFromUncompressedSplatArray(o):O.generateFromUncompressedSplatArrays([o],t,0,new I)}class br{static loadFromURL(e,t,s,n,r,i,a=!0,l,c,d,h,u){let p=s?le.ProgressiveToSplatBuffer:le.ProgressiveToSplatArray;a&&(p=le.ProgressiveToSplatArray);const f=O.HeaderSizeBytes+O.SectionHeaderSizeBytes,m=$.ProgressiveLoadSectionSize,g=1;let C,A,x,v=0,S=0,T;const y=dr();let w=0,B=0,E=[];const R=(L,M,F,H)=>{const k=L>=100;if(F&&E.push(F),p===le.DownloadBeforeProcessing){k&&y.resolve(E);return}if(!H){if(s)throw new Us("Cannon directly load .splat because no file size info is available.");p=le.DownloadBeforeProcessing;return}if(!C){v=H/Qe.RowSizeBytes,C=new ArrayBuffer(H);const Q=O.CompressionLevels[0].SphericalHarmonicsDegrees[0].BytesPerSplat,G=f+Q*v;p===le.ProgressiveToSplatBuffer?(A=new ArrayBuffer(G),O.writeHeaderToBuffer({versionMajor:O.CurrentMajorVersion,versionMinor:O.CurrentMinorVersion,maxSectionCount:g,sectionCount:g,maxSplatCount:v,splatCount:S,compressionLevel:0,sceneCenter:new I},A)):T=new U(0)}if(F){new Uint8Array(C,B,F.byteLength).set(new Uint8Array(F)),B+=F.byteLength;const Q=B-w;if(Q>m||k){const N=(k?Q:m)/Qe.RowSizeBytes,W=S+N;p===le.ProgressiveToSplatBuffer?Qe.parseToUncompressedSplatBufferSection(S,W-1,C,0,A,f):Qe.parseToUncompressedSplatArraySection(S,W-1,C,0,T),S=W,p===le.ProgressiveToSplatBuffer&&(x||(O.writeSectionHeaderToBuffer({maxSplatCount:v,splatCount:S,bucketSize:0,bucketCount:0,bucketBlockSize:0,compressionScaleRange:0,storageSizeBytes:0,fullBucketCount:0,partiallyFilledBucketCount:0},0,A,O.HeaderSizeBytes),x=new O(A,!1)),x.updateLoadedCounts(1,S),n&&n(x,k)),w+=m}}k&&(p===le.ProgressiveToSplatBuffer?y.resolve(x):y.resolve(T)),t&&t(L,M,xe.Downloading)};return t&&t(0,"0%",xe.Downloading),cn(e,R,!1,l).then(()=>(t&&t(0,"0%",xe.Processing),y.promise.then(L=>(t&&t(100,"100%",xe.Done),p===le.DownloadBeforeProcessing?new Blob(E).arrayBuffer().then(M=>br.loadFromFileData(M,r,i,a,c,d,h,u)):p===le.ProgressiveToSplatBuffer?L:je(()=>li(L,a,r,i,c,d,h,u))))))}static loadFromFileData(e,t,s,n,r,i,a,l){return je(()=>{const c=Qe.parseStandardSplatToUncompressedSplatArray(e);return li(c,n,t,s,r,i,a,l)})}}const ss=class{static checkVersion(e){const t=O.CurrentMajorVersion,s=O.CurrentMinorVersion,n=O.parseHeader(e);if(n.versionMajor===t&&n.versionMinor>=s||n.versionMajor>t)return!0;throw new Error(`KSplat version not supported: v${n.versionMajor}.${n.versionMinor}. Minimum required: v${t}.${s}`)}static loadFromURL(e,t,s,n,r){let i,a,l,c,d=!1,h=!1,u,p=[],f=!1,m=!1,g=0,C=0,A=0,x=!1,v=!1,S=!1,T=[];const y=dr(),w=()=>{!d&&!h&&g>=O.HeaderSizeBytes&&(h=!0,new Blob(T).arrayBuffer().then(H=>{l=new ArrayBuffer(O.HeaderSizeBytes),new Uint8Array(l).set(new Uint8Array(H,0,O.HeaderSizeBytes)),ss.checkVersion(l),h=!1,d=!0,c=O.parseHeader(l),window.setTimeout(()=>{R()},1)}))};let B=0;const E=()=>{B===0&&(B++,window.setTimeout(()=>{B--,L()},1))},R=()=>{const F=()=>{m=!0,new Blob(T).arrayBuffer().then(k=>{m=!1,f=!0,u=new ArrayBuffer(c.maxSectionCount*O.SectionHeaderSizeBytes),new Uint8Array(u).set(new Uint8Array(k,O.HeaderSizeBytes,c.maxSectionCount*O.SectionHeaderSizeBytes)),p=O.parseSectionHeaders(c,u,0,!1);let Q=0;for(let N=0;N<c.maxSectionCount;N++)Q+=p[N].storageSizeBytes;const G=O.HeaderSizeBytes+c.maxSectionCount*O.SectionHeaderSizeBytes+Q;if(!i){i=new ArrayBuffer(G);let N=0;for(let W=0;W<T.length;W++){const te=T[W];new Uint8Array(i,N,te.byteLength).set(new Uint8Array(te)),N+=te.byteLength}}A=O.HeaderSizeBytes+O.SectionHeaderSizeBytes*c.maxSectionCount;for(let N=0;N<=p.length&&N<c.maxSectionCount;N++)A+=p[N].storageSizeBytes;E()})};!m&&!f&&d&&g>=O.HeaderSizeBytes+O.SectionHeaderSizeBytes*c.maxSectionCount&&F()},L=()=>{if(S)return;S=!0;const F=()=>{if(S=!1,f){if(v)return;if(x=g>=A,g-C>$.ProgressiveLoadSectionSize||x){C+=$.ProgressiveLoadSectionSize,v=C>=A,a||(a=new O(i,!1));const k=O.HeaderSizeBytes+O.SectionHeaderSizeBytes*c.maxSectionCount;let Q=0,G=0,N=0;for(let me=0;me<c.maxSectionCount;me++){const se=p[me],K=Q+se.partiallyFilledBucketCount*4+se.bucketStorageSizeBytes*se.bucketCount,re=k+K;if(C>=re){G++;const Y=C-re,Se=O.CompressionLevels[c.compressionLevel].SphericalHarmonicsDegrees[se.sphericalHarmonicsDegree].BytesPerSplat;let ue=Math.floor(Y/Se);ue=Math.min(ue,se.maxSplatCount),N+=ue,a.updateLoadedCounts(G,N),a.updateSectionLoadedCounts(me,ue)}else break;Q+=se.storageSizeBytes}n(a,v);const W=C/A*100,te=W.toFixed(2)+"%";t&&t(W,te,xe.Downloading),v?y.resolve(a):L()}}};window.setTimeout(F,$.ProgressiveLoadSectionDelayDuration)};return cn(e,(F,H,k)=>{k&&(T.push(k),i&&new Uint8Array(i,g,k.byteLength).set(new Uint8Array(k)),g+=k.byteLength),s?(w(),R(),L()):t&&t(F,H,xe.Downloading)},!s,r).then(F=>(t&&t(0,"0%",xe.Processing),(s?y.promise:ss.loadFromFileData(F)).then(k=>(t&&t(100,"100%",xe.Done),k))))}static loadFromFileData(e){return je(()=>(ss.checkVersion(e),new O(e)))}};let Xt=ss;_(Xt,"downloadFile",function(){let e;return function(t,s){const n=new Blob([t.bufferData],{type:"application/octet-stream"});e||(e=document.createElement("a"),document.body.appendChild(e)),e.download=s,e.href=URL.createObjectURL(n),e.click()}}());const _e={Splat:0,KSplat:1,Ply:2,Spz:3},ci=o=>o.endsWith(".ply")?_e.Ply:o.endsWith(".splat")?_e.Splat:o.endsWith(".ksplat")?_e.KSplat:o.endsWith(".spz")?_e.Spz:null,di={type:"change"},vn={type:"start"},hi={type:"end"},Ps=new ca,pi=new Di,mh=Math.cos(70*Bi.DEG2RAD);class Ds extends ha{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new I,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"KeyA",UP:"KeyW",RIGHT:"KeyD",BOTTOM:"KeyS"},this.mouseButtons={LEFT:wt.ROTATE,MIDDLE:wt.DOLLY,RIGHT:wt.PAN},this.touches={ONE:Tt.ROTATE,TWO:Tt.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(b){b.addEventListener("keydown",un),this._domElementKeyEvents=b},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",un),this._domElementKeyEvents=null},this.saveState=function(){s.target0.copy(s.target),s.position0.copy(s.object.position),s.zoom0=s.object.zoom},this.reset=function(){s.target.copy(s.target0),s.object.position.copy(s.position0),s.object.zoom=s.zoom0,this.clearDampedRotation(),this.clearDampedPan(),s.object.updateProjectionMatrix(),s.dispatchEvent(di),s.update(),r=n.NONE},this.clearDampedRotation=function(){l.theta=0,l.phi=0},this.clearDampedPan=function(){d.set(0,0,0)},this.update=function(){const b=new I,V=new Ae().setFromUnitVectors(e.up,new I(0,1,0)),ye=V.clone().invert(),Ie=new I,Ue=new Ae,vt=new I,lt=2*Math.PI;return function(){V.setFromUnitVectors(e.up,new I(0,1,0)),ye.copy(V).invert();const Br=s.object.position;b.copy(Br).sub(s.target),b.applyQuaternion(V),a.setFromVector3(b),s.autoRotate&&r===n.NONE&&R(B()),s.enableDamping?(a.theta+=l.theta*s.dampingFactor,a.phi+=l.phi*s.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let et=s.minAzimuthAngle,tt=s.maxAzimuthAngle;isFinite(et)&&isFinite(tt)&&(et<-Math.PI?et+=lt:et>Math.PI&&(et-=lt),tt<-Math.PI?tt+=lt:tt>Math.PI&&(tt-=lt),et<=tt?a.theta=Math.max(et,Math.min(tt,a.theta)):a.theta=a.theta>(et+tt)/2?Math.max(et,a.theta):Math.min(tt,a.theta)),a.phi=Math.max(s.minPolarAngle,Math.min(s.maxPolarAngle,a.phi)),a.makeSafe(),s.enableDamping===!0?s.target.addScaledVector(d,s.dampingFactor):s.target.add(d),s.zoomToCursor&&T||s.object.isOrthographicCamera?a.radius=N(a.radius):a.radius=N(a.radius*c),b.setFromSpherical(a),b.applyQuaternion(ye),Br.copy(s.target).add(b),s.object.lookAt(s.target),s.enableDamping===!0?(l.theta*=1-s.dampingFactor,l.phi*=1-s.dampingFactor,d.multiplyScalar(1-s.dampingFactor)):(l.set(0,0,0),d.set(0,0,0));let xs=!1;if(s.zoomToCursor&&T){let Gt=null;if(s.object.isPerspectiveCamera){const Wt=b.length();Gt=N(Wt*c);const bs=Wt-Gt;s.object.position.addScaledVector(v,bs),s.object.updateMatrixWorld()}else if(s.object.isOrthographicCamera){const Wt=new I(S.x,S.y,0);Wt.unproject(s.object),s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom/c)),s.object.updateProjectionMatrix(),xs=!0;const bs=new I(S.x,S.y,0);bs.unproject(s.object),s.object.position.sub(bs).add(Wt),s.object.updateMatrixWorld(),Gt=b.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),s.zoomToCursor=!1;Gt!==null&&(this.screenSpacePanning?s.target.set(0,0,-1).transformDirection(s.object.matrix).multiplyScalar(Gt).add(s.object.position):(Ps.origin.copy(s.object.position),Ps.direction.set(0,0,-1).transformDirection(s.object.matrix),Math.abs(s.object.up.dot(Ps.direction))<mh?e.lookAt(s.target):(pi.setFromNormalAndCoplanarPoint(s.object.up,s.target),Ps.intersectPlane(pi,s.target))))}else s.object.isOrthographicCamera&&(s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom/c)),s.object.updateProjectionMatrix(),xs=!0);return c=1,T=!1,xs||Ie.distanceToSquared(s.object.position)>i||8*(1-Ue.dot(s.object.quaternion))>i||vt.distanceToSquared(s.target)>0?(s.dispatchEvent(di),Ie.copy(s.object.position),Ue.copy(s.object.quaternion),vt.copy(s.target),xs=!1,!0):!1}}(),this.dispose=function(){s.domElement.removeEventListener("contextmenu",Pr),s.domElement.removeEventListener("pointerdown",Pe),s.domElement.removeEventListener("pointercancel",at),s.domElement.removeEventListener("wheel",Er),s.domElement.removeEventListener("pointermove",He),s.domElement.removeEventListener("pointerup",at),s._domElementKeyEvents!==null&&(s._domElementKeyEvents.removeEventListener("keydown",un),s._domElementKeyEvents=null)};const s=this,n={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=n.NONE;const i=1e-6,a=new Lr,l=new Lr;let c=1;const d=new I,h=new q,u=new q,p=new q,f=new q,m=new q,g=new q,C=new q,A=new q,x=new q,v=new I,S=new q;let T=!1;const y=[],w={};function B(){return 2*Math.PI/60/60*s.autoRotateSpeed}function E(){return Math.pow(.95,s.zoomSpeed)}function R(b){l.theta-=b}function L(b){l.phi-=b}const M=function(){const b=new I;return function(ye,Ie){b.setFromMatrixColumn(Ie,0),b.multiplyScalar(-ye),d.add(b)}}(),F=function(){const b=new I;return function(ye,Ie){s.screenSpacePanning===!0?b.setFromMatrixColumn(Ie,1):(b.setFromMatrixColumn(Ie,0),b.crossVectors(s.object.up,b)),b.multiplyScalar(ye),d.add(b)}}(),H=function(){const b=new I;return function(ye,Ie){const Ue=s.domElement;if(s.object.isPerspectiveCamera){const vt=s.object.position;b.copy(vt).sub(s.target);let lt=b.length();lt*=Math.tan(s.object.fov/2*Math.PI/180),M(2*ye*lt/Ue.clientHeight,s.object.matrix),F(2*Ie*lt/Ue.clientHeight,s.object.matrix)}else s.object.isOrthographicCamera?(M(ye*(s.object.right-s.object.left)/s.object.zoom/Ue.clientWidth,s.object.matrix),F(Ie*(s.object.top-s.object.bottom)/s.object.zoom/Ue.clientHeight,s.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),s.enablePan=!1)}}();function k(b){s.object.isPerspectiveCamera||s.object.isOrthographicCamera?c/=b:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function Q(b){s.object.isPerspectiveCamera||s.object.isOrthographicCamera?c*=b:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function G(b){if(!s.zoomToCursor)return;T=!0;const V=s.domElement.getBoundingClientRect(),ye=b.clientX-V.left,Ie=b.clientY-V.top,Ue=V.width,vt=V.height;S.x=ye/Ue*2-1,S.y=-(Ie/vt)*2+1,v.set(S.x,S.y,1).unproject(e).sub(e.position).normalize()}function N(b){return Math.max(s.minDistance,Math.min(s.maxDistance,b))}function W(b){h.set(b.clientX,b.clientY)}function te(b){G(b),C.set(b.clientX,b.clientY)}function me(b){f.set(b.clientX,b.clientY)}function se(b){u.set(b.clientX,b.clientY),p.subVectors(u,h).multiplyScalar(s.rotateSpeed);const V=s.domElement;R(2*Math.PI*p.x/V.clientHeight),L(2*Math.PI*p.y/V.clientHeight),h.copy(u),s.update()}function K(b){A.set(b.clientX,b.clientY),x.subVectors(A,C),x.y>0?k(E()):x.y<0&&Q(E()),C.copy(A),s.update()}function re(b){m.set(b.clientX,b.clientY),g.subVectors(m,f).multiplyScalar(s.panSpeed),H(g.x,g.y),f.copy(m),s.update()}function Y(b){G(b),b.deltaY<0?Q(E()):b.deltaY>0&&k(E()),s.update()}function ne(b){let V=!1;switch(b.code){case s.keys.UP:b.ctrlKey||b.metaKey||b.shiftKey?L(2*Math.PI*s.rotateSpeed/s.domElement.clientHeight):H(0,s.keyPanSpeed),V=!0;break;case s.keys.BOTTOM:b.ctrlKey||b.metaKey||b.shiftKey?L(-2*Math.PI*s.rotateSpeed/s.domElement.clientHeight):H(0,-s.keyPanSpeed),V=!0;break;case s.keys.LEFT:b.ctrlKey||b.metaKey||b.shiftKey?R(2*Math.PI*s.rotateSpeed/s.domElement.clientHeight):H(s.keyPanSpeed,0),V=!0;break;case s.keys.RIGHT:b.ctrlKey||b.metaKey||b.shiftKey?R(-2*Math.PI*s.rotateSpeed/s.domElement.clientHeight):H(-s.keyPanSpeed,0),V=!0;break}V&&(b.preventDefault(),s.update())}function Ce(){if(y.length===1)h.set(y[0].pageX,y[0].pageY);else{const b=.5*(y[0].pageX+y[1].pageX),V=.5*(y[0].pageY+y[1].pageY);h.set(b,V)}}function Se(){if(y.length===1)f.set(y[0].pageX,y[0].pageY);else{const b=.5*(y[0].pageX+y[1].pageX),V=.5*(y[0].pageY+y[1].pageY);f.set(b,V)}}function ue(){const b=y[0].pageX-y[1].pageX,V=y[0].pageY-y[1].pageY,ye=Math.sqrt(b*b+V*V);C.set(0,ye)}function Be(){s.enableZoom&&ue(),s.enablePan&&Se()}function we(){s.enableZoom&&ue(),s.enableRotate&&Ce()}function ce(b){if(y.length==1)u.set(b.pageX,b.pageY);else{const ye=fn(b),Ie=.5*(b.pageX+ye.x),Ue=.5*(b.pageY+ye.y);u.set(Ie,Ue)}p.subVectors(u,h).multiplyScalar(s.rotateSpeed);const V=s.domElement;R(2*Math.PI*p.x/V.clientHeight),L(2*Math.PI*p.y/V.clientHeight),h.copy(u)}function Te(b){if(y.length===1)m.set(b.pageX,b.pageY);else{const V=fn(b),ye=.5*(b.pageX+V.x),Ie=.5*(b.pageY+V.y);m.set(ye,Ie)}g.subVectors(m,f).multiplyScalar(s.panSpeed),H(g.x,g.y),f.copy(m)}function ie(b){const V=fn(b),ye=b.pageX-V.x,Ie=b.pageY-V.y,Ue=Math.sqrt(ye*ye+Ie*Ie);A.set(0,Ue),x.set(0,Math.pow(A.y/C.y,s.zoomSpeed)),k(x.y),C.copy(A)}function Ne(b){s.enableZoom&&ie(b),s.enablePan&&Te(b)}function Ke(b){s.enableZoom&&ie(b),s.enableRotate&&ce(b)}function Pe(b){s.enabled!==!1&&(y.length===0&&(s.domElement.setPointerCapture(b.pointerId),s.domElement.addEventListener("pointermove",He),s.domElement.addEventListener("pointerup",at)),Io(b),b.pointerType==="touch"?wo(b):bo(b))}function He(b){s.enabled!==!1&&(b.pointerType==="touch"?To(b):vo(b))}function at(b){Eo(b),y.length===0&&(s.domElement.releasePointerCapture(b.pointerId),s.domElement.removeEventListener("pointermove",He),s.domElement.removeEventListener("pointerup",at)),s.dispatchEvent(hi),r=n.NONE}function bo(b){let V;switch(b.button){case 0:V=s.mouseButtons.LEFT;break;case 1:V=s.mouseButtons.MIDDLE;break;case 2:V=s.mouseButtons.RIGHT;break;default:V=-1}switch(V){case wt.DOLLY:if(s.enableZoom===!1)return;te(b),r=n.DOLLY;break;case wt.ROTATE:if(b.ctrlKey||b.metaKey||b.shiftKey){if(s.enablePan===!1)return;me(b),r=n.PAN}else{if(s.enableRotate===!1)return;W(b),r=n.ROTATE}break;case wt.PAN:if(b.ctrlKey||b.metaKey||b.shiftKey){if(s.enableRotate===!1)return;W(b),r=n.ROTATE}else{if(s.enablePan===!1)return;me(b),r=n.PAN}break;default:r=n.NONE}r!==n.NONE&&s.dispatchEvent(vn)}function vo(b){switch(r){case n.ROTATE:if(s.enableRotate===!1)return;se(b);break;case n.DOLLY:if(s.enableZoom===!1)return;K(b);break;case n.PAN:if(s.enablePan===!1)return;re(b);break}}function Er(b){s.enabled===!1||s.enableZoom===!1||r!==n.NONE||(b.preventDefault(),s.dispatchEvent(vn),Y(b),s.dispatchEvent(hi))}function un(b){s.enabled===!1||s.enablePan===!1||ne(b)}function wo(b){switch(Dr(b),y.length){case 1:switch(s.touches.ONE){case Tt.ROTATE:if(s.enableRotate===!1)return;Ce(),r=n.TOUCH_ROTATE;break;case Tt.PAN:if(s.enablePan===!1)return;Se(),r=n.TOUCH_PAN;break;default:r=n.NONE}break;case 2:switch(s.touches.TWO){case Tt.DOLLY_PAN:if(s.enableZoom===!1&&s.enablePan===!1)return;Be(),r=n.TOUCH_DOLLY_PAN;break;case Tt.DOLLY_ROTATE:if(s.enableZoom===!1&&s.enableRotate===!1)return;we(),r=n.TOUCH_DOLLY_ROTATE;break;default:r=n.NONE}break;default:r=n.NONE}r!==n.NONE&&s.dispatchEvent(vn)}function To(b){switch(Dr(b),r){case n.TOUCH_ROTATE:if(s.enableRotate===!1)return;ce(b),s.update();break;case n.TOUCH_PAN:if(s.enablePan===!1)return;Te(b),s.update();break;case n.TOUCH_DOLLY_PAN:if(s.enableZoom===!1&&s.enablePan===!1)return;Ne(b),s.update();break;case n.TOUCH_DOLLY_ROTATE:if(s.enableZoom===!1&&s.enableRotate===!1)return;Ke(b),s.update();break;default:r=n.NONE}}function Pr(b){s.enabled!==!1&&b.preventDefault()}function Io(b){y.push(b)}function Eo(b){delete w[b.pointerId];for(let V=0;V<y.length;V++)if(y[V].pointerId==b.pointerId){y.splice(V,1);return}}function Dr(b){let V=w[b.pointerId];V===void 0&&(V=new q,w[b.pointerId]=V),V.set(b.pageX,b.pageY)}function fn(b){const V=b.pointerId===y[0].pointerId?y[1]:y[0];return w[V.pointerId]}s.domElement.addEventListener("contextmenu",Pr),s.domElement.addEventListener("pointerdown",Pe),s.domElement.addEventListener("pointercancel",at),s.domElement.addEventListener("wheel",Er,{passive:!1}),this.update()}}const gh=(o,e,t,s,n)=>{const r=performance.now();let i=o.style.display==="none"?0:parseFloat(o.style.opacity);isNaN(i)&&(i=1);const a=window.setInterval(()=>{const c=performance.now()-r;let d=Math.min(c/s,1);d>.999&&(d=1);let h;e?(h=(1-d)*i,h<1e-4&&(h=0)):h=(1-i)*d+i,h>0?(o.style.display=t,o.style.opacity=h):o.style.display="none",d>=1&&(n&&n(),window.clearInterval(a))},16);return a},Ah=500,Tr=class{constructor(e,t){this.taskIDGen=0,this.elementID=Tr.elementIDGen++,this.tasks=[],this.message=e||"Loading...",this.container=t||document.body,this.spinnerContainerOuter=document.createElement("div"),this.spinnerContainerOuter.className=`spinnerOuterContainer${this.elementID}`,this.spinnerContainerOuter.style.display="none",this.spinnerContainerPrimary=document.createElement("div"),this.spinnerContainerPrimary.className=`spinnerContainerPrimary${this.elementID}`,this.spinnerPrimary=document.createElement("div"),this.spinnerPrimary.classList.add(`spinner${this.elementID}`,`spinnerPrimary${this.elementID}`),this.messageContainerPrimary=document.createElement("div"),this.messageContainerPrimary.classList.add(`messageContainer${this.elementID}`,`messageContainerPrimary${this.elementID}`),this.messageContainerPrimary.innerHTML=this.message,this.spinnerContainerMin=document.createElement("div"),this.spinnerContainerMin.className=`spinnerContainerMin${this.elementID}`,this.spinnerMin=document.createElement("div"),this.spinnerMin.classList.add(`spinner${this.elementID}`,`spinnerMin${this.elementID}`),this.messageContainerMin=document.createElement("div"),this.messageContainerMin.classList.add(`messageContainer${this.elementID}`,`messageContainerMin${this.elementID}`),this.messageContainerMin.innerHTML=this.message,this.spinnerContainerPrimary.appendChild(this.spinnerPrimary),this.spinnerContainerPrimary.appendChild(this.messageContainerPrimary),this.spinnerContainerOuter.appendChild(this.spinnerContainerPrimary),this.spinnerContainerMin.appendChild(this.spinnerMin),this.spinnerContainerMin.appendChild(this.messageContainerMin),this.spinnerContainerOuter.appendChild(this.spinnerContainerMin);const s=document.createElement("style");s.innerHTML=`

            .spinnerOuterContainer${this.elementID} {
                width: 100%;
                height: 100%;
                margin: 0;
                top: 0;
                left: 0;
                position: absolute;
                pointer-events: none;
            }

            .messageContainer${this.elementID} {
                height: 20px;
                font-family: arial;
                font-size: 12pt;
                color: #ffffff;
                text-align: center;
                vertical-align: middle;
            }

            .spinner${this.elementID} {
                padding: 15px;
                background: #07e8d6;
                z-index:99999;
            
                aspect-ratio: 1;
                border-radius: 50%;
                --_m: 
                    conic-gradient(#0000,#000),
                    linear-gradient(#000 0 0) content-box;
                -webkit-mask: var(--_m);
                    mask: var(--_m);
                -webkit-mask-composite: source-out;
                    mask-composite: subtract;
                box-sizing: border-box;
                animation: load 1s linear infinite;
            }

            .spinnerContainerPrimary${this.elementID} {
                z-index:99999;
                background-color: rgba(128, 128, 128, 0.75);
                border: #666666 1px solid;
                border-radius: 5px;
                padding-top: 20px;
                padding-bottom: 10px;
                margin: 0;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-80px, -80px);
                width: 180px;
                pointer-events: auto;
            }

            .spinnerPrimary${this.elementID} {
                width: 120px;
                margin-left: 30px;
            }

            .messageContainerPrimary${this.elementID} {
                padding-top: 15px;
            }

            .spinnerContainerMin${this.elementID} {
                z-index:99999;
                background-color: rgba(128, 128, 128, 0.75);
                border: #666666 1px solid;
                border-radius: 5px;
                padding-top: 20px;
                padding-bottom: 15px;
                margin: 0;
                position: absolute;
                bottom: 50px;
                left: 50%;
                transform: translate(-50%, 0);
                display: flex;
                flex-direction: left;
                pointer-events: auto;
                min-width: 250px;
            }

            .messageContainerMin${this.elementID} {
                margin-right: 15px;
            }

            .spinnerMin${this.elementID} {
                width: 50px;
                height: 50px;
                margin-left: 15px;
                margin-right: 25px;
            }

            .messageContainerMin${this.elementID} {
                padding-top: 15px;
            }
            
            @keyframes load {
                to{transform: rotate(1turn)}
            }

        `,this.spinnerContainerOuter.appendChild(s),this.container.appendChild(this.spinnerContainerOuter),this.setMinimized(!1,!0),this.fadeTransitions=[]}addTask(e){const t={message:e,id:this.taskIDGen++};return this.tasks.push(t),this.update(),t.id}removeTask(e){let t=0;for(let s of this.tasks){if(s.id===e){this.tasks.splice(t,1);break}t++}this.update()}removeAllTasks(){this.tasks=[],this.update()}setMessageForTask(e,t){for(let s of this.tasks)if(s.id===e){s.message=t;break}this.update()}update(){this.tasks.length>0?(this.show(),this.setMessage(this.tasks[this.tasks.length-1].message)):this.hide()}show(){this.spinnerContainerOuter.style.display="block",this.visible=!0}hide(){this.spinnerContainerOuter.style.display="none",this.visible=!1}setContainer(e){this.container&&this.spinnerContainerOuter.parentElement===this.container&&this.container.removeChild(this.spinnerContainerOuter),e&&(this.container=e,this.container.appendChild(this.spinnerContainerOuter),this.spinnerContainerOuter.style.zIndex=this.container.style.zIndex+1)}setMinimized(e,t){const s=(n,r,i,a,l)=>{i?n.style.display=r?a:"none":this.fadeTransitions[l]=gh(n,!r,a,Ah,()=>{this.fadeTransitions[l]=null})};s(this.spinnerContainerPrimary,!e,t,"block",0),s(this.spinnerContainerMin,e,t,"flex",1),this.minimized=e}setMessage(e){this.messageContainerPrimary.innerHTML=e,this.messageContainerMin.innerHTML=e}};let Rs=Tr;_(Rs,"elementIDGen",0);class Ch{constructor(e){this.idGen=0,this.tasks=[],this.container=e||document.body,this.progressBarContainerOuter=document.createElement("div"),this.progressBarContainerOuter.className="progressBarOuterContainer",this.progressBarContainerOuter.style.display="none",this.progressBarBox=document.createElement("div"),this.progressBarBox.className="progressBarBox",this.progressBarBackground=document.createElement("div"),this.progressBarBackground.className="progressBarBackground",this.progressBar=document.createElement("div"),this.progressBar.className="progressBar",this.progressBarBackground.appendChild(this.progressBar),this.progressBarBox.appendChild(this.progressBarBackground),this.progressBarContainerOuter.appendChild(this.progressBarBox);const t=document.createElement("style");t.innerHTML=`

            .progressBarOuterContainer {
                width: 100%;
                height: 100%;
                margin: 0;
                top: 0;
                left: 0;
                position: absolute;
                pointer-events: none;
            }

            .progressBarBox {
                z-index:99999;
                padding: 7px 9px 5px 7px;
                background-color: rgba(190, 190, 190, 0.75);
                border: #555555 1px solid;
                border-radius: 15px;
                margin: 0;
                position: absolute;
                bottom: 50px;
                left: 50%;
                transform: translate(-50%, 0);
                width: 180px;
                height: 30px;
                pointer-events: auto;
            }

            .progressBarBackground {
                width: 100%;
                height: 25px;
                border-radius:10px;
                background-color: rgba(128, 128, 128, 0.75);
                border: #444444 1px solid;
                box-shadow: inset 0 0 10px #333333;
            }

            .progressBar {
                height: 25px;
                width: 0px;
                border-radius:10px;
                background-color: rgba(0, 200, 0, 0.75);
                box-shadow: inset 0 0 10px #003300;
            }

        `,this.progressBarContainerOuter.appendChild(t),this.container.appendChild(this.progressBarContainerOuter)}show(){this.progressBarContainerOuter.style.display="block"}hide(){this.progressBarContainerOuter.style.display="none"}setProgress(e){this.progressBar.style.width=e+"%"}setContainer(e){this.container&&this.progressBarContainerOuter.parentElement===this.container&&this.container.removeChild(this.progressBarContainerOuter),e&&(this.container=e,this.container.appendChild(this.progressBarContainerOuter),this.progressBarContainerOuter.style.zIndex=this.container.style.zIndex+1)}}class Sh{constructor(e){_(this,"update",function(e,t,s,n,r,i,a,l,c,d,h,u,p,f){const m=`${t.x.toFixed(5)}, ${t.y.toFixed(5)}, ${t.z.toFixed(5)}`;if(this.infoCells.cameraPosition.innerHTML!==m&&(this.infoCells.cameraPosition.innerHTML=m),s){const C=s,A=`${C.x.toFixed(5)}, ${C.y.toFixed(5)}, ${C.z.toFixed(5)}`;this.infoCells.cameraLookAt.innerHTML!==A&&(this.infoCells.cameraLookAt.innerHTML=A)}const g=`${n.x.toFixed(5)}, ${n.y.toFixed(5)}, ${n.z.toFixed(5)}`;if(this.infoCells.cameraUp.innerHTML!==g&&(this.infoCells.cameraUp.innerHTML=g),this.infoCells.orthographicCamera.innerHTML=r?"Orthographic":"Perspective",i){const C=i,A=`${C.x.toFixed(5)}, ${C.y.toFixed(5)}, ${C.z.toFixed(5)}`;this.infoCells.cursorPosition.innerHTML=A}else this.infoCells.cursorPosition.innerHTML="N/A";this.infoCells.fps.innerHTML=a,this.infoCells.renderWindow.innerHTML=`${e.x} x ${e.y}`,this.infoCells.renderSplatCount.innerHTML=`${c} splats out of ${l} (${d.toFixed(2)}%)`,this.infoCells.sortTime.innerHTML=`${h.toFixed(3)} ms`,this.infoCells.focalAdjustment.innerHTML=`${u.toFixed(3)}`,this.infoCells.splatScale.innerHTML=`${p.toFixed(3)}`,this.infoCells.pointCloudMode.innerHTML=`${f}`});this.container=e||document.body,this.infoCells={};const t=[["Camera position","cameraPosition"],["Camera look-at","cameraLookAt"],["Camera up","cameraUp"],["Camera mode","orthographicCamera"],["Cursor position","cursorPosition"],["FPS","fps"],["Rendering:","renderSplatCount"],["Sort time","sortTime"],["Render window","renderWindow"],["Focal adjustment","focalAdjustment"],["Splat scale","splatScale"],["Point cloud mode","pointCloudMode"]];this.infoPanelContainer=document.createElement("div");const s=document.createElement("style");s.innerHTML=`

            .infoPanel {
                width: 430px;
                padding: 10px;
                background-color: rgba(50, 50, 50, 0.85);
                border: #555555 2px solid;
                color: #dddddd;
                border-radius: 10px;
                z-index: 9999;
                font-family: arial;
                font-size: 11pt;
                text-align: left;
                margin: 0;
                top: 10px;
                left:10px;
                position: absolute;
                pointer-events: auto;
            }

            .info-panel-cell {
                margin-bottom: 5px;
                padding-bottom: 2px;
            }

            .label-cell {
                font-weight: bold;
                font-size: 12pt;
                width: 140px;
            }

        `,this.infoPanelContainer.append(s),this.infoPanel=document.createElement("div"),this.infoPanel.className="infoPanel";const n=document.createElement("div");n.style.display="table";for(let r of t){const i=document.createElement("div");i.style.display="table-row",i.className="info-panel-row";const a=document.createElement("div");a.style.display="table-cell",a.innerHTML=`${r[0]}: `,a.classList.add("info-panel-cell","label-cell");const l=document.createElement("div");l.style.display="table-cell",l.style.width="10px",l.innerHTML=" ",l.className="info-panel-cell";const c=document.createElement("div");c.style.display="table-cell",c.innerHTML="",c.className="info-panel-cell",this.infoCells[r[1]]=c,i.appendChild(a),i.appendChild(l),i.appendChild(c),n.appendChild(i)}this.infoPanel.appendChild(n),this.infoPanelContainer.append(this.infoPanel),this.infoPanelContainer.style.display="none",this.container.appendChild(this.infoPanelContainer),this.visible=!1}setContainer(e){this.container&&this.infoPanelContainer.parentElement===this.container&&this.container.removeChild(this.infoPanelContainer),e&&(this.container=e,this.container.appendChild(this.infoPanelContainer),this.infoPanelContainer.style.zIndex=this.container.style.zIndex+1)}show(){this.infoPanelContainer.style.display="block",this.visible=!0}hide(){this.infoPanelContainer.style.display="none",this.visible=!1}}const ui=new I;class yh extends Oe{constructor(e=new I(0,0,1),t=new I(0,0,0),s=1,n=.1,r=16776960,i=s*.2,a=i*.2){super(),this.type="ArrowHelper";const l=new Nr(n,n,s,32);l.translate(0,s/2,0);const c=new Nr(0,a,i,32);c.translate(0,s,0),this.position.copy(t),this.line=new Le(l,new Lt({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Le(c,new Lt({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{ui.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(ui,t)}}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Jt{constructor(e){_(this,"updateFocusMarker",function(){const e=new I,t=new ee,s=new I;return function(n,r,i){t.copy(r.matrixWorld).invert(),e.copy(n).applyMatrix4(t),e.normalize().multiplyScalar(10),e.applyMatrix4(r.matrixWorld),s.copy(r.position).sub(n);const a=s.length();this.focusMarker.position.copy(n),this.focusMarker.scale.set(a,a,a),this.focusMarker.material.uniforms.realFocusPosition.value.copy(n),this.focusMarker.material.uniforms.viewport.value.copy(i),this.focusMarker.material.uniformsNeedUpdate=!0}}());_(this,"positionAndOrientControlPlane",function(){const e=new Ae,t=new I(0,1,0);return function(s,n){e.setFromUnitVectors(t,n),this.controlPlane.position.copy(s),this.controlPlane.quaternion.copy(e)}}());this.threeScene=e,this.splatRenderTarget=null,this.renderTargetCopyQuad=null,this.renderTargetCopyCamera=null,this.meshCursor=null,this.focusMarker=null,this.controlPlane=null,this.debugRoot=null,this.secondaryDebugRoot=null}updateSplatRenderTargetForRenderDimensions(e,t){this.destroySplatRendertarget(),this.splatRenderTarget=new pa(e,t,{format:Ms,stencilBuffer:!1,depthBuffer:!0}),this.splatRenderTarget.depthTexture=new ua(e,t),this.splatRenderTarget.depthTexture.format=fa,this.splatRenderTarget.depthTexture.type=qt}destroySplatRendertarget(){this.splatRenderTarget&&(this.splatRenderTarget=null)}setupRenderTargetCopyObjects(){const e={sourceColorTexture:{type:"t",value:null},sourceDepthTexture:{type:"t",value:null}},t=new Yt({vertexShader:`
                varying vec2 vUv;
                void main() {
                    vUv = uv;
                    gl_Position = vec4( position.xy, 0.0, 1.0 );    
                }
            `,fragmentShader:`
                #include <common>
                #include <packing>
                varying vec2 vUv;
                uniform sampler2D sourceColorTexture;
                uniform sampler2D sourceDepthTexture;
                void main() {
                    vec4 color = texture2D(sourceColorTexture, vUv);
                    float fragDepth = texture2D(sourceDepthTexture, vUv).x;
                    gl_FragDepth = fragDepth;
                    gl_FragColor = vec4(color.rgb, color.a * 2.0);
              }
            `,uniforms:e,depthWrite:!1,depthTest:!1,transparent:!0,blending:ma,blendSrc:Hr,blendSrcAlpha:Hr,blendDst:Ur,blendDstAlpha:Ur});t.extensions.fragDepth=!0,this.renderTargetCopyQuad=new Le(new zr(2,2),t),this.renderTargetCopyCamera=new Mi(-1,1,1,-1,0,1)}destroyRenderTargetCopyObjects(){this.renderTargetCopyQuad&&(Dt(this.renderTargetCopyQuad),this.renderTargetCopyQuad=null)}setupMeshCursor(){if(!this.meshCursor){const e=new ga(.5,1.5,32),t=new Lt({color:16777215}),s=new Le(e,t);s.rotation.set(0,0,Math.PI),s.position.set(0,1,0);const n=new Le(e,t);n.position.set(0,-1,0);const r=new Le(e,t);r.rotation.set(0,0,Math.PI/2),r.position.set(1,0,0);const i=new Le(e,t);i.rotation.set(0,0,-Math.PI/2),i.position.set(-1,0,0),this.meshCursor=new Oe,this.meshCursor.add(s),this.meshCursor.add(n),this.meshCursor.add(r),this.meshCursor.add(i),this.meshCursor.scale.set(.1,.1,.1),this.threeScene.add(this.meshCursor),this.meshCursor.visible=!1}}destroyMeshCursor(){this.meshCursor&&(Dt(this.meshCursor),this.threeScene.remove(this.meshCursor),this.meshCursor=null)}setMeshCursorVisibility(e){this.meshCursor.visible=e}getMeschCursorVisibility(){return this.meshCursor.visible}setMeshCursorPosition(e){this.meshCursor.position.copy(e)}positionAndOrientMeshCursor(e,t){this.meshCursor.position.copy(e),this.meshCursor.up.copy(t.up),this.meshCursor.lookAt(t.position)}setupFocusMarker(){if(!this.focusMarker){const e=new Bn(.5,32,32),t=Jt.buildFocusMarkerMaterial();t.depthTest=!1,t.depthWrite=!1,t.transparent=!0,this.focusMarker=new Le(e,t)}}destroyFocusMarker(){this.focusMarker&&(Dt(this.focusMarker),this.focusMarker=null)}setFocusMarkerVisibility(e){this.focusMarker.visible=e}setFocusMarkerOpacity(e){this.focusMarker.material.uniforms.opacity.value=e,this.focusMarker.material.uniformsNeedUpdate=!0}getFocusMarkerOpacity(){return this.focusMarker.material.uniforms.opacity.value}setupControlPlane(){if(!this.controlPlane){const e=new zr(1,1);e.rotateX(-Math.PI/2);const t=new Lt({color:16777215});t.transparent=!0,t.opacity=.6,t.depthTest=!1,t.depthWrite=!1,t.side=$s;const s=new Le(e,t),n=new I(0,1,0);n.normalize();const r=new I(0,0,0),i=.5,a=.01,l=56576,c=new yh(n,r,i,a,l,.1,.03);this.controlPlane=new Oe,this.controlPlane.add(s),this.controlPlane.add(c)}}destroyControlPlane(){this.controlPlane&&(Dt(this.controlPlane),this.controlPlane=null)}setControlPlaneVisibility(e){this.controlPlane.visible=e}addDebugMeshes(){this.debugRoot=this.createDebugMeshes(),this.secondaryDebugRoot=this.createSecondaryDebugMeshes(),this.threeScene.add(this.debugRoot),this.threeScene.add(this.secondaryDebugRoot)}destroyDebugMeshes(){for(let e of[this.debugRoot,this.secondaryDebugRoot])e&&(Dt(e),this.threeScene.remove(e));this.debugRoot=null,this.secondaryDebugRoot=null}createDebugMeshes(e){const t=new Bn(1,32,32),s=new Oe,n=(r,i)=>{let a=new Le(t,Jt.buildDebugMaterial(r));a.renderOrder=e,s.add(a),a.position.fromArray(i)};return n(16711680,[-50,0,0]),n(16711680,[50,0,0]),n(65280,[0,0,-50]),n(65280,[0,0,50]),n(16755200,[5,0,5]),s}createSecondaryDebugMeshes(e){const t=new Aa(3,3,3),s=new Oe;let n=12303291;const r=a=>{let l=new Le(t,Jt.buildDebugMaterial(n));l.renderOrder=e,s.add(l),l.position.fromArray(a)};let i=10;return r([-i,0,-i]),r([-i,0,i]),r([i,0,-i]),r([i,0,i]),s}static buildDebugMaterial(e){const t=`
            #include <common>
            varying float ndcDepth;

            void main() {
                gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position.xyz, 1.0);
                ndcDepth = gl_Position.z / gl_Position.w;
                gl_Position.x = gl_Position.x / gl_Position.w;
                gl_Position.y = gl_Position.y / gl_Position.w;
                gl_Position.z = 0.0;
                gl_Position.w = 1.0;
    
            }
        `,s=`
            #include <common>
            uniform vec3 color;
            varying float ndcDepth;
            void main() {
                gl_FragDepth = (ndcDepth + 1.0) / 2.0;
                gl_FragColor = vec4(color.rgb, 0.0);
            }
        `,n={color:{type:"v3",value:new ft(e)}},r=new Yt({uniforms:n,vertexShader:t,fragmentShader:s,transparent:!1,depthTest:!0,depthWrite:!0,side:kr});return r.extensions.fragDepth=!0,r}static buildFocusMarkerMaterial(e){const t=`
            #include <common>

            uniform vec2 viewport;
            uniform vec3 realFocusPosition;

            varying vec4 ndcPosition;
            varying vec4 ndcCenter;
            varying vec4 ndcFocusPosition;

            void main() {
                float radius = 0.01;

                vec4 viewPosition = modelViewMatrix * vec4(position.xyz, 1.0);
                vec4 viewCenter = modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);

                vec4 viewFocusPosition = modelViewMatrix * vec4(realFocusPosition, 1.0);

                ndcPosition = projectionMatrix * viewPosition;
                ndcPosition = ndcPosition * vec4(1.0 / ndcPosition.w);
                ndcCenter = projectionMatrix * viewCenter;
                ndcCenter = ndcCenter * vec4(1.0 / ndcCenter.w);

                ndcFocusPosition = projectionMatrix * viewFocusPosition;
                ndcFocusPosition = ndcFocusPosition * vec4(1.0 / ndcFocusPosition.w);

                gl_Position = projectionMatrix * viewPosition;

            }
        `,s=`
            #include <common>
            uniform vec3 color;
            uniform vec2 viewport;
            uniform float opacity;

            varying vec4 ndcPosition;
            varying vec4 ndcCenter;
            varying vec4 ndcFocusPosition;

            void main() {
                vec2 screenPosition = vec2(ndcPosition) * viewport;
                vec2 screenCenter = vec2(ndcCenter) * viewport;

                vec2 screenVec = screenPosition - screenCenter;

                float projectedRadius = length(screenVec);

                float lineWidth = 0.0005 * viewport.y;
                float aaRange = 0.0025 * viewport.y;
                float radius = 0.06 * viewport.y;
                float radDiff = abs(projectedRadius - radius) - lineWidth;
                float alpha = 1.0 - clamp(radDiff / 5.0, 0.0, 1.0); 

                gl_FragColor = vec4(color.rgb, alpha * opacity);
            }
        `,n={color:{type:"v3",value:new ft(e)},realFocusPosition:{type:"v3",value:new I},viewport:{type:"v2",value:new q},opacity:{value:0}};return new Yt({uniforms:n,vertexShader:t,fragmentShader:s,transparent:!0,depthTest:!1,depthWrite:!1,side:kr})}dispose(){this.destroyMeshCursor(),this.destroyFocusMarker(),this.destroyDebugMeshes(),this.destroyControlPlane(),this.destroyRenderTargetCopyObjects(),this.destroySplatRendertarget()}}const xh=new I(1,0,0),bh=new I(0,1,0),vh=new I(0,0,1);class wn{constructor(e=new I,t=new I){_(this,"intersectBox",function(){const e=new I,t=[],s=[],n=[];return function(r,i){if(s[0]=this.origin.x,s[1]=this.origin.y,s[2]=this.origin.z,n[0]=this.direction.x,n[1]=this.direction.y,n[2]=this.direction.z,this.boxContainsPoint(r,this.origin,1e-4))return i&&(i.origin.copy(this.origin),i.normal.set(0,0,0),i.distance=-1),!0;for(let a=0;a<3;a++){if(n[a]==0)continue;const l=a==0?xh:a==1?bh:vh,c=n[a]<0?r.max:r.min;let d=-Math.sign(n[a]);t[0]=a==0?c.x:a==1?c.y:c.z;let h=t[0]-s[a];if(h*d<0){const u=(a+1)%3,p=(a+2)%3;if(t[2]=n[u]/n[a]*h+s[u],t[1]=n[p]/n[a]*h+s[p],e.set(t[a],t[p],t[u]),this.boxContainsPoint(r,e,1e-4))return i&&(i.origin.copy(e),i.normal.copy(l).multiplyScalar(d),i.distance=e.sub(this.origin).length()),!0}}return!1}}());_(this,"intersectSphere",function(){const e=new I;return function(t,s,n){e.copy(t).sub(this.origin);const r=e.dot(this.direction),i=r*r,l=e.dot(e)-i,c=s*s;if(l>c)return!1;const d=Math.sqrt(c-l),h=r-d,u=r+d;if(u<0)return!1;let p=h<0?u:h;return n&&(n.origin.copy(this.origin).addScaledVector(this.direction,p),n.normal.copy(n.origin).sub(t).normalize(),n.distance=p),!0}}());this.origin=new I,this.direction=new I,this.setParameters(e,t)}setParameters(e,t){this.origin.copy(e),this.direction.copy(t).normalize()}boxContainsPoint(e,t,s){return!(t.x<e.min.x-s||t.x>e.max.x+s||t.y<e.min.y-s||t.y>e.max.y+s||t.z<e.min.z-s||t.z>e.max.z+s)}}class vr{constructor(){this.origin=new I,this.normal=new I,this.distance=0,this.splatIndex=0}set(e,t,s,n){this.origin.copy(e),this.normal.copy(t),this.distance=s,this.splatIndex=n}clone(){const e=new vr;return e.origin.copy(this.origin),e.normal.copy(this.normal),e.distance=this.distance,e.splatIndex=this.splatIndex,e}}const nt={ThreeD:0,TwoD:1};class wh{constructor(e,t,s=!1){_(this,"setFromCameraAndScreenPosition",function(){const e=new q;return function(t,s,n){if(e.x=s.x/n.x*2-1,e.y=(n.y-s.y)/n.y*2-1,t.isPerspectiveCamera)this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t;else if(t.isOrthographicCamera)this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t;else throw new Error("Raycaster::setFromCameraAndScreenPosition() -> Unsupported camera type")}}());_(this,"intersectSplatMesh",function(){const e=new ee,t=new ee,s=new ee,n=new wn,r=new I;return function(i,a=[]){const l=i.getSplatTree();if(l){for(let c=0;c<l.subTrees.length;c++){const d=l.subTrees[c];t.copy(i.matrixWorld),i.dynamicMode&&(i.getSceneTransform(c,s),t.multiply(s)),e.copy(t).invert(),n.origin.copy(this.ray.origin).applyMatrix4(e),n.direction.copy(this.ray.origin).add(this.ray.direction),n.direction.applyMatrix4(e).sub(n.origin).normalize();const h=[];d.rootNode&&this.castRayAtSplatTreeNode(n,l,d.rootNode,h),h.forEach(u=>{u.origin.applyMatrix4(t),u.normal.applyMatrix4(t).normalize(),u.distance=r.copy(u.origin).sub(this.ray.origin).length()}),a.push(...h)}return a.sort((c,d)=>c.distance>d.distance?1:-1),a}}}());_(this,"castRayAtSplatTreeNode",function(){const e=new Vn,t=new I,s=new I,n=new Ae,r=new vr,i=1e-7,a=new I(0,0,0),l=new ee,c=new ee,d=new ee,h=new ee,u=new ee,p=new wn;return function(f,m,g,C=[]){if(f.intersectBox(g.boundingBox)){if(g.data&&g.data.indexes&&g.data.indexes.length>0)for(let A=0;A<g.data.indexes.length;A++){const x=g.data.indexes[A],v=m.splatMesh.getSceneIndexForSplat(x);if(m.splatMesh.getScene(v).visible&&(m.splatMesh.getSplatColor(x,e),m.splatMesh.getSplatCenter(x,t),m.splatMesh.getSplatScaleAndRotation(x,s,n),!(s.x<=i||s.y<=i||m.splatMesh.splatRenderMode===nt.ThreeD&&s.z<=i)))if(this.raycastAgainstTrueSplatEllipsoid){c.makeScale(s.x,s.y,s.z),d.makeRotationFromQuaternion(n);const T=Math.log10(e.w)*2;if(l.makeScale(T,T,T),u.copy(l).multiply(d).multiply(c),h.copy(u).invert(),p.origin.copy(f.origin).sub(t).applyMatrix4(h),p.direction.copy(f.origin).add(f.direction).sub(t),p.direction.applyMatrix4(h).sub(p.origin).normalize(),p.intersectSphere(a,1,r)){const y=r.clone();y.splatIndex=x,y.origin.applyMatrix4(u).add(t),C.push(y)}}else{let T=s.x+s.y,y=2;if(m.splatMesh.splatRenderMode===nt.ThreeD&&(T+=s.z,y=3),T=T/y,f.intersectSphere(t,T,r)){const w=r.clone();w.splatIndex=x,C.push(w)}}}if(g.children&&g.children.length>0)for(let A of g.children)this.castRayAtSplatTreeNode(f,m,A,C);return C}}}());this.ray=new wn(e,t),this.raycastAgainstTrueSplatEllipsoid=s}}class Rt{static buildVertexShaderBase(e=!1,t=!1,s=0,n=""){let r=`
        precision highp float;
        #include <common>

        attribute uint splatIndex;
        uniform highp usampler2D centersColorsTexture;
        uniform highp sampler2D sphericalHarmonicsTexture;
        uniform highp sampler2D sphericalHarmonicsTextureR;
        uniform highp sampler2D sphericalHarmonicsTextureG;
        uniform highp sampler2D sphericalHarmonicsTextureB;

        uniform highp usampler2D sceneIndexesTexture;
        uniform vec2 sceneIndexesTextureSize;
        uniform int sceneCount;
    `;return t&&(r+=`
            uniform float sceneOpacity[${$.MaxScenes}];
            uniform int sceneVisibility[${$.MaxScenes}];
        `),e&&(r+=`
            uniform highp mat4 transforms[${$.MaxScenes}];
        `),r+=`
        ${n}
        uniform vec2 focal;
        uniform float orthoZoom;
        uniform int orthographicMode;
        uniform int pointCloudModeEnabled;
        uniform float inverseFocalAdjustment;
        uniform vec2 viewport;
        uniform vec2 basisViewport;
        uniform vec2 centersColorsTextureSize;
        uniform int sphericalHarmonicsDegree;
        uniform vec2 sphericalHarmonicsTextureSize;
        uniform int sphericalHarmonics8BitMode;
        uniform int sphericalHarmonicsMultiTextureMode;
        uniform float visibleRegionRadius;
        uniform float visibleRegionFadeStartRadius;
        uniform float firstRenderTime;
        uniform float currentTime;
        uniform int fadeInComplete;
        uniform vec3 sceneCenter;
        uniform float splatScale;
        uniform float sphericalHarmonics8BitCompressionRangeMin[${$.MaxScenes}];
        uniform float sphericalHarmonics8BitCompressionRangeMax[${$.MaxScenes}];

        varying vec4 vColor;
        varying vec2 vUv;
        varying vec2 vPosition;

        mat3 quaternionToRotationMatrix(float x, float y, float z, float w) {
            float s = 1.0 / sqrt(w * w + x * x + y * y + z * z);
        
            return mat3(
                1. - 2. * (y * y + z * z),
                2. * (x * y + w * z),
                2. * (x * z - w * y),
                2. * (x * y - w * z),
                1. - 2. * (x * x + z * z),
                2. * (y * z + w * x),
                2. * (x * z + w * y),
                2. * (y * z - w * x),
                1. - 2. * (x * x + y * y)
            );
        }

        const float sqrt8 = sqrt(8.0);
        const float minAlpha = 1.0 / 255.0;

        const vec4 encodeNorm4 = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0);
        const uvec4 mask4 = uvec4(uint(0x000000FF), uint(0x0000FF00), uint(0x00FF0000), uint(0xFF000000));
        const uvec4 shift4 = uvec4(0, 8, 16, 24);
        vec4 uintToRGBAVec (uint u) {
           uvec4 urgba = mask4 & u;
           urgba = urgba >> shift4;
           vec4 rgba = vec4(urgba) * encodeNorm4;
           return rgba;
        }

        vec2 getDataUV(in int stride, in int offset, in vec2 dimensions) {
            vec2 samplerUV = vec2(0.0, 0.0);
            float d = float(splatIndex * uint(stride) + uint(offset)) / dimensions.x;
            samplerUV.y = float(floor(d)) / dimensions.y;
            samplerUV.x = fract(d);
            return samplerUV;
        }

        vec2 getDataUVF(in uint sIndex, in float stride, in uint offset, in vec2 dimensions) {
            vec2 samplerUV = vec2(0.0, 0.0);
            float d = float(uint(float(sIndex) * stride) + offset) / dimensions.x;
            samplerUV.y = float(floor(d)) / dimensions.y;
            samplerUV.x = fract(d);
            return samplerUV;
        }

        const float SH_C1 = 0.4886025119029199f;
        const float[5] SH_C2 = float[](1.0925484, -1.0925484, 0.3153916, -1.0925484, 0.5462742);

        void main () {

            uint oddOffset = splatIndex & uint(0x00000001);
            uint doubleOddOffset = oddOffset * uint(2);
            bool isEven = oddOffset == uint(0);
            uint nearestEvenIndex = splatIndex - oddOffset;
            float fOddOffset = float(oddOffset);

            uvec4 sampledCenterColor = texture(centersColorsTexture, getDataUV(1, 0, centersColorsTextureSize));
            vec3 splatCenter = uintBitsToFloat(uvec3(sampledCenterColor.gba));

            uint sceneIndex = uint(0);
            if (sceneCount > 1) {
                sceneIndex = texture(sceneIndexesTexture, getDataUV(1, 0, sceneIndexesTextureSize)).r;
            }
            `,t&&(r+=`
                float splatOpacityFromScene = sceneOpacity[sceneIndex];
                int sceneVisible = sceneVisibility[sceneIndex];
                if (splatOpacityFromScene <= 0.01 || sceneVisible == 0) {
                    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);
                    return;
                }
            `),e?r+=`
                mat4 transform = transforms[sceneIndex];
                mat4 transformModelViewMatrix = viewMatrix * transform;
            `:r+="mat4 transformModelViewMatrix = modelViewMatrix;",r+=`
            float sh8BitCompressionRangeMinForScene = sphericalHarmonics8BitCompressionRangeMin[sceneIndex];
            float sh8BitCompressionRangeMaxForScene = sphericalHarmonics8BitCompressionRangeMax[sceneIndex];
            float sh8BitCompressionRangeForScene = sh8BitCompressionRangeMaxForScene - sh8BitCompressionRangeMinForScene;
            float sh8BitCompressionHalfRangeForScene = sh8BitCompressionRangeForScene / 2.0;
            vec3 vec8BitSHShift = vec3(sh8BitCompressionRangeMinForScene);

            vec4 viewCenter = transformModelViewMatrix * vec4(splatCenter, 1.0);

            vec4 clipCenter = projectionMatrix * viewCenter;

            float clip = 1.2 * clipCenter.w;
            if (clipCenter.z < -clip || clipCenter.x < -clip || clipCenter.x > clip || clipCenter.y < -clip || clipCenter.y > clip) {
                gl_Position = vec4(0.0, 0.0, 2.0, 1.0);
                return;
            }

            vec3 ndcCenter = clipCenter.xyz / clipCenter.w;

            vPosition = position.xy;
            vColor = uintToRGBAVec(sampledCenterColor.r);
        `,s>=1&&(r+=`   
            if (sphericalHarmonicsDegree >= 1) {
            `,e?r+=`
                    vec3 worldViewDir = normalize(splatCenter - vec3(inverse(transform) * vec4(cameraPosition, 1.0)));
                `:r+=`
                    vec3 worldViewDir = normalize(splatCenter - cameraPosition);
                `,r+=`
                vec3 sh1;
                vec3 sh2;
                vec3 sh3;
            `,s>=2&&(r+=`
                    vec3 sh4;
                    vec3 sh5;
                    vec3 sh6;
                    vec3 sh7;
                    vec3 sh8;
                `),s===1?r+=`
                    if (sphericalHarmonicsMultiTextureMode == 0) {
                        vec2 shUV = getDataUVF(nearestEvenIndex, 2.5, doubleOddOffset, sphericalHarmonicsTextureSize);
                        vec4 sampledSH0123 = texture(sphericalHarmonicsTexture, shUV);
                        shUV = getDataUVF(nearestEvenIndex, 2.5, doubleOddOffset + uint(1), sphericalHarmonicsTextureSize);
                        vec4 sampledSH4567 = texture(sphericalHarmonicsTexture, shUV);
                        shUV = getDataUVF(nearestEvenIndex, 2.5, doubleOddOffset + uint(2), sphericalHarmonicsTextureSize);
                        vec4 sampledSH891011 = texture(sphericalHarmonicsTexture, shUV);
                        sh1 = vec3(sampledSH0123.rgb) * (1.0 - fOddOffset) + vec3(sampledSH0123.ba, sampledSH4567.r) * fOddOffset;
                        sh2 = vec3(sampledSH0123.a, sampledSH4567.rg) * (1.0 - fOddOffset) + vec3(sampledSH4567.gba) * fOddOffset;
                        sh3 = vec3(sampledSH4567.ba, sampledSH891011.r) * (1.0 - fOddOffset) + vec3(sampledSH891011.rgb) * fOddOffset;
                    } else {
                        vec2 sampledSH01R = texture(sphericalHarmonicsTextureR, getDataUV(2, 0, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH23R = texture(sphericalHarmonicsTextureR, getDataUV(2, 1, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH01G = texture(sphericalHarmonicsTextureG, getDataUV(2, 0, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH23G = texture(sphericalHarmonicsTextureG, getDataUV(2, 1, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH01B = texture(sphericalHarmonicsTextureB, getDataUV(2, 0, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH23B = texture(sphericalHarmonicsTextureB, getDataUV(2, 1, sphericalHarmonicsTextureSize)).rg;
                        sh1 = vec3(sampledSH01R.rg, sampledSH23R.r);
                        sh2 = vec3(sampledSH01G.rg, sampledSH23G.r);
                        sh3 = vec3(sampledSH01B.rg, sampledSH23B.r);
                    }
                `:s===2&&(r+=`
                    vec4 sampledSH0123;
                    vec4 sampledSH4567;
                    vec4 sampledSH891011;

                    vec4 sampledSH0123R;
                    vec4 sampledSH0123G;
                    vec4 sampledSH0123B;

                    if (sphericalHarmonicsMultiTextureMode == 0) {
                        sampledSH0123 = texture(sphericalHarmonicsTexture, getDataUV(6, 0, sphericalHarmonicsTextureSize));
                        sampledSH4567 = texture(sphericalHarmonicsTexture, getDataUV(6, 1, sphericalHarmonicsTextureSize));
                        sampledSH891011 = texture(sphericalHarmonicsTexture, getDataUV(6, 2, sphericalHarmonicsTextureSize));
                        sh1 = sampledSH0123.rgb;
                        sh2 = vec3(sampledSH0123.a, sampledSH4567.rg);
                        sh3 = vec3(sampledSH4567.ba, sampledSH891011.r);
                    } else {
                        sampledSH0123R = texture(sphericalHarmonicsTextureR, getDataUV(2, 0, sphericalHarmonicsTextureSize));
                        sampledSH0123G = texture(sphericalHarmonicsTextureG, getDataUV(2, 0, sphericalHarmonicsTextureSize));
                        sampledSH0123B = texture(sphericalHarmonicsTextureB, getDataUV(2, 0, sphericalHarmonicsTextureSize));
                        sh1 = vec3(sampledSH0123R.rgb);
                        sh2 = vec3(sampledSH0123G.rgb);
                        sh3 = vec3(sampledSH0123B.rgb);
                    }
                `),r+=`
                    if (sphericalHarmonics8BitMode == 1) {
                        sh1 = sh1 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                        sh2 = sh2 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                        sh3 = sh3 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                    }
                    float x = worldViewDir.x;
                    float y = worldViewDir.y;
                    float z = worldViewDir.z;
                    vColor.rgb += SH_C1 * (-sh1 * y + sh2 * z - sh3 * x);
            `,s>=2&&(r+=`
                    if (sphericalHarmonicsDegree >= 2) {
                        float xx = x * x;
                        float yy = y * y;
                        float zz = z * z;
                        float xy = x * y;
                        float yz = y * z;
                        float xz = x * z;
                `,s===2&&(r+=`
                        if (sphericalHarmonicsMultiTextureMode == 0) {
                            vec4 sampledSH12131415 = texture(sphericalHarmonicsTexture, getDataUV(6, 3, sphericalHarmonicsTextureSize));
                            vec4 sampledSH16171819 = texture(sphericalHarmonicsTexture, getDataUV(6, 4, sphericalHarmonicsTextureSize));
                            vec4 sampledSH20212223 = texture(sphericalHarmonicsTexture, getDataUV(6, 5, sphericalHarmonicsTextureSize));
                            sh4 = sampledSH891011.gba;
                            sh5 = sampledSH12131415.rgb;
                            sh6 = vec3(sampledSH12131415.a, sampledSH16171819.rg);
                            sh7 = vec3(sampledSH16171819.ba, sampledSH20212223.r);
                            sh8 = sampledSH20212223.gba;
                        } else {
                            vec4 sampledSH4567R = texture(sphericalHarmonicsTextureR, getDataUV(2, 1, sphericalHarmonicsTextureSize));
                            vec4 sampledSH4567G = texture(sphericalHarmonicsTextureG, getDataUV(2, 1, sphericalHarmonicsTextureSize));
                            vec4 sampledSH4567B = texture(sphericalHarmonicsTextureB, getDataUV(2, 1, sphericalHarmonicsTextureSize));
                            sh4 = vec3(sampledSH0123R.a, sampledSH4567R.rg);
                            sh5 = vec3(sampledSH4567R.ba, sampledSH0123G.a);
                            sh6 = vec3(sampledSH4567G.rgb);
                            sh7 = vec3(sampledSH4567G.a, sampledSH0123B.a, sampledSH4567B.r);
                            sh8 = vec3(sampledSH4567B.gba);
                        }
                    `),r+=`
                        if (sphericalHarmonics8BitMode == 1) {
                            sh4 = sh4 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh5 = sh5 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh6 = sh6 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh7 = sh7 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh8 = sh8 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                        }

                        vColor.rgb +=
                            (SH_C2[0] * xy) * sh4 +
                            (SH_C2[1] * yz) * sh5 +
                            (SH_C2[2] * (2.0 * zz - xx - yy)) * sh6 +
                            (SH_C2[3] * xz) * sh7 +
                            (SH_C2[4] * (xx - yy)) * sh8;
                    }
                `),r+=`

                vColor.rgb = clamp(vColor.rgb, vec3(0.), vec3(1.));

            }

            `),r}static getVertexShaderFadeIn(){return`
            if (fadeInComplete == 0) {
                float opacityAdjust = 1.0;
                float centerDist = length(splatCenter - sceneCenter);
                float renderTime = max(currentTime - firstRenderTime, 0.0);

                float fadeDistance = 0.75;
                float distanceLoadFadeInFactor = step(visibleRegionFadeStartRadius, centerDist);
                distanceLoadFadeInFactor = (1.0 - distanceLoadFadeInFactor) +
                                        (1.0 - clamp((centerDist - visibleRegionFadeStartRadius) / fadeDistance, 0.0, 1.0)) *
                                        distanceLoadFadeInFactor;
                opacityAdjust *= distanceLoadFadeInFactor;
                vColor.a *= opacityAdjust;
            }
        `}static getUniforms(e=!1,t=!1,s=0,n=1,r=!1){const i={sceneCenter:{type:"v3",value:new I},fadeInComplete:{type:"i",value:0},orthographicMode:{type:"i",value:0},visibleRegionFadeStartRadius:{type:"f",value:0},visibleRegionRadius:{type:"f",value:0},currentTime:{type:"f",value:0},firstRenderTime:{type:"f",value:0},centersColorsTexture:{type:"t",value:null},sphericalHarmonicsTexture:{type:"t",value:null},sphericalHarmonicsTextureR:{type:"t",value:null},sphericalHarmonicsTextureG:{type:"t",value:null},sphericalHarmonicsTextureB:{type:"t",value:null},sphericalHarmonics8BitCompressionRangeMin:{type:"f",value:[]},sphericalHarmonics8BitCompressionRangeMax:{type:"f",value:[]},focal:{type:"v2",value:new q},orthoZoom:{type:"f",value:1},inverseFocalAdjustment:{type:"f",value:1},viewport:{type:"v2",value:new q},basisViewport:{type:"v2",value:new q},debugColor:{type:"v3",value:new ft},centersColorsTextureSize:{type:"v2",value:new q(1024,1024)},sphericalHarmonicsDegree:{type:"i",value:s},sphericalHarmonicsTextureSize:{type:"v2",value:new q(1024,1024)},sphericalHarmonics8BitMode:{type:"i",value:0},sphericalHarmonicsMultiTextureMode:{type:"i",value:0},splatScale:{type:"f",value:n},pointCloudModeEnabled:{type:"i",value:r?1:0},sceneIndexesTexture:{type:"t",value:null},sceneIndexesTextureSize:{type:"v2",value:new q(1024,1024)},sceneCount:{type:"i",value:1}};for(let a=0;a<$.MaxScenes;a++)i.sphericalHarmonics8BitCompressionRangeMin.value.push(-$.SphericalHarmonics8BitCompressionRange/2),i.sphericalHarmonics8BitCompressionRangeMax.value.push($.SphericalHarmonics8BitCompressionRange/2);if(t){const a=[];for(let c=0;c<$.MaxScenes;c++)a.push(1);i.sceneOpacity={type:"f",value:a};const l=[];for(let c=0;c<$.MaxScenes;c++)l.push(1);i.sceneVisibility={type:"i",value:l}}if(e){const a=[];for(let l=0;l<$.MaxScenes;l++)a.push(new ee);i.transforms={type:"mat4",value:a}}return i}}class zs{static build(e=!1,t=!1,s=!1,n=2048,r=1,i=!1,a=0,l=.3){const c=`
            uniform vec2 covariancesTextureSize;
            uniform highp sampler2D covariancesTexture;
            uniform highp usampler2D covariancesTextureHalfFloat;
            uniform int covariancesAreHalfFloat;

            void fromCovarianceHalfFloatV4(uvec4 val, out vec4 first, out vec4 second) {
                vec2 r = unpackHalf2x16(val.r);
                vec2 g = unpackHalf2x16(val.g);
                vec2 b = unpackHalf2x16(val.b);

                first = vec4(r.x, r.y, g.x, g.y);
                second = vec4(b.x, b.y, 0.0, 0.0);
            }
        `;let d=Rt.buildVertexShaderBase(e,t,a,c);d+=zs.buildVertexShaderProjection(s,t,n,l);const h=zs.buildFragmentShader(),u=Rt.getUniforms(e,t,a,r,i);return u.covariancesTextureSize={type:"v2",value:new q(1024,1024)},u.covariancesTexture={type:"t",value:null},u.covariancesTextureHalfFloat={type:"t",value:null},u.covariancesAreHalfFloat={type:"i",value:0},new Yt({uniforms:u,vertexShader:d,fragmentShader:h,transparent:!0,alphaTest:1,blending:Oi,depthTest:!0,depthWrite:!1,side:$s})}static buildVertexShaderProjection(e,t,s,n){let r=`

            vec4 sampledCovarianceA;
            vec4 sampledCovarianceB;
            vec3 cov3D_M11_M12_M13;
            vec3 cov3D_M22_M23_M33;
            if (covariancesAreHalfFloat == 0) {
                sampledCovarianceA = texture(covariancesTexture, getDataUVF(nearestEvenIndex, 1.5, oddOffset,
                                                                            covariancesTextureSize));
                sampledCovarianceB = texture(covariancesTexture, getDataUVF(nearestEvenIndex, 1.5, oddOffset + uint(1),
                                                                            covariancesTextureSize));

                cov3D_M11_M12_M13 = vec3(sampledCovarianceA.rgb) * (1.0 - fOddOffset) +
                                    vec3(sampledCovarianceA.ba, sampledCovarianceB.r) * fOddOffset;
                cov3D_M22_M23_M33 = vec3(sampledCovarianceA.a, sampledCovarianceB.rg) * (1.0 - fOddOffset) +
                                    vec3(sampledCovarianceB.gba) * fOddOffset;
            } else {
                uvec4 sampledCovarianceU = texture(covariancesTextureHalfFloat, getDataUV(1, 0, covariancesTextureSize));
                fromCovarianceHalfFloatV4(sampledCovarianceU, sampledCovarianceA, sampledCovarianceB);
                cov3D_M11_M12_M13 = sampledCovarianceA.rgb;
                cov3D_M22_M23_M33 = vec3(sampledCovarianceA.a, sampledCovarianceB.rg);
            }
        
            // Construct the 3D covariance matrix
            mat3 Vrk = mat3(
                cov3D_M11_M12_M13.x, cov3D_M11_M12_M13.y, cov3D_M11_M12_M13.z,
                cov3D_M11_M12_M13.y, cov3D_M22_M23_M33.x, cov3D_M22_M23_M33.y,
                cov3D_M11_M12_M13.z, cov3D_M22_M23_M33.y, cov3D_M22_M23_M33.z
            );

            mat3 J;
            if (orthographicMode == 1) {
                // Since the projection is linear, we don't need an approximation
                J = transpose(mat3(orthoZoom, 0.0, 0.0,
                                0.0, orthoZoom, 0.0,
                                0.0, 0.0, 0.0));
            } else {
                // Construct the Jacobian of the affine approximation of the projection matrix. It will be used to transform the
                // 3D covariance matrix instead of using the actual projection matrix because that transformation would
                // require a non-linear component (perspective division) which would yield a non-gaussian result.
                float s = 1.0 / (viewCenter.z * viewCenter.z);
                J = mat3(
                    focal.x / viewCenter.z, 0., -(focal.x * viewCenter.x) * s,
                    0., focal.y / viewCenter.z, -(focal.y * viewCenter.y) * s,
                    0., 0., 0.
                );
            }

            // Concatenate the projection approximation with the model-view transformation
            mat3 W = transpose(mat3(transformModelViewMatrix));
            mat3 T = W * J;

            // Transform the 3D covariance matrix (Vrk) to compute the 2D covariance matrix
            mat3 cov2Dm = transpose(T) * Vrk * T;
            `;return e?r+=`
                float detOrig = cov2Dm[0][0] * cov2Dm[1][1] - cov2Dm[0][1] * cov2Dm[0][1];
                cov2Dm[0][0] += ${n};
                cov2Dm[1][1] += ${n};
                float detBlur = cov2Dm[0][0] * cov2Dm[1][1] - cov2Dm[0][1] * cov2Dm[0][1];
                vColor.a *= sqrt(max(detOrig / detBlur, 0.0));
                if (vColor.a < minAlpha) return;
            `:r+=`
                cov2Dm[0][0] += ${n};
                cov2Dm[1][1] += ${n};
            `,r+=`

            // We are interested in the upper-left 2x2 portion of the projected 3D covariance matrix because
            // we only care about the X and Y values. We want the X-diagonal, cov2Dm[0][0],
            // the Y-diagonal, cov2Dm[1][1], and the correlation between the two cov2Dm[0][1]. We don't
            // need cov2Dm[1][0] because it is a symetric matrix.
            vec3 cov2Dv = vec3(cov2Dm[0][0], cov2Dm[0][1], cov2Dm[1][1]);

            // We now need to solve for the eigen-values and eigen vectors of the 2D covariance matrix
            // so that we can determine the 2D basis for the splat. This is done using the method described
            // here: https://people.math.harvard.edu/~knill/teaching/math21b2004/exhibits/2dmatrices/index.html
            // After calculating the eigen-values and eigen-vectors, we calculate the basis for rendering the splat
            // by normalizing the eigen-vectors and then multiplying them by (sqrt(8) * sqrt(eigen-value)), which is
            // equal to scaling them by sqrt(8) standard deviations.
            //
            // This is a different approach than in the original work at INRIA. In that work they compute the
            // max extents of the projected splat in screen space to form a screen-space aligned bounding rectangle
            // which forms the geometry that is actually rasterized. The dimensions of that bounding box are 3.0
            // times the square root of the maximum eigen-value, or 3 standard deviations. They then use the inverse
            // 2D covariance matrix (called 'conic') in the CUDA rendering thread to determine fragment opacity by
            // calculating the full gaussian: exp(-0.5 * (X - mean) * conic * (X - mean)) * splat opacity
            float a = cov2Dv.x;
            float d = cov2Dv.z;
            float b = cov2Dv.y;
            float D = a * d - b * b;
            float trace = a + d;
            float traceOver2 = 0.5 * trace;
            float term2 = sqrt(max(0.1f, traceOver2 * traceOver2 - D));
            float eigenValue1 = traceOver2 + term2;
            float eigenValue2 = traceOver2 - term2;

            if (pointCloudModeEnabled == 1) {
                eigenValue1 = eigenValue2 = 0.2;
            }

            if (eigenValue2 <= 0.0) return;

            vec2 eigenVector1 = normalize(vec2(b, eigenValue1 - a));
            // since the eigen vectors are orthogonal, we derive the second one from the first
            vec2 eigenVector2 = vec2(eigenVector1.y, -eigenVector1.x);

            // We use sqrt(8) standard deviations instead of 3 to eliminate more of the splat with a very low opacity.
            vec2 basisVector1 = eigenVector1 * splatScale * min(sqrt8 * sqrt(eigenValue1), ${parseInt(s)}.0);
            vec2 basisVector2 = eigenVector2 * splatScale * min(sqrt8 * sqrt(eigenValue2), ${parseInt(s)}.0);
            `,t&&(r+=`
                vColor.a *= splatOpacityFromScene;
            `),r+=`
            vec2 ndcOffset = vec2(vPosition.x * basisVector1 + vPosition.y * basisVector2) *
                             basisViewport * 2.0 * inverseFocalAdjustment;

            vec4 quadPos = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);
            gl_Position = quadPos;

            // Scale the position data we send to the fragment shader
            vPosition *= sqrt8;
        `,r+=Rt.getVertexShaderFadeIn(),r+="}",r}static buildFragmentShader(){let e=`
            precision highp float;
            #include <common>
 
            uniform vec3 debugColor;

            varying vec4 vColor;
            varying vec2 vUv;
            varying vec2 vPosition;
        `;return e+=`
            void main () {
                // Compute the positional squared distance from the center of the splat to the current fragment.
                float A = dot(vPosition, vPosition);
                // Since the positional data in vPosition has been scaled by sqrt(8), the squared result will be
                // scaled by a factor of 8. If the squared result is larger than 8, it means it is outside the ellipse
                // defined by the rectangle formed by vPosition. It also means it's farther
                // away than sqrt(8) standard deviations from the mean.
                if (A > 8.0) discard;
                vec3 color = vColor.rgb;

                // Since the rendered splat is scaled by sqrt(8), the inverse covariance matrix that is part of
                // the gaussian formula becomes the identity matrix. We're then left with (X - mean) * (X - mean),
                // and since 'mean' is zero, we have X * X, which is the same as A:
                float opacity = exp(-0.5 * A) * vColor.a;

                gl_FragColor = vec4(color.rgb, opacity);
            }
        `,e}}class ks{static build(e=!1,t=!1,s=1,n=!1,r=0){const i=`
            uniform vec2 scaleRotationsTextureSize;
            uniform highp sampler2D scaleRotationsTexture;
            varying mat3 vT;
            varying vec2 vQuadCenter;
            varying vec2 vFragCoord;
        `;let a=Rt.buildVertexShaderBase(e,t,r,i);a+=ks.buildVertexShaderProjection();const l=ks.buildFragmentShader(),c=Rt.getUniforms(e,t,r,s,n);return c.scaleRotationsTexture={type:"t",value:null},c.scaleRotationsTextureSize={type:"v2",value:new q(1024,1024)},new Yt({uniforms:c,vertexShader:a,fragmentShader:l,transparent:!0,alphaTest:1,blending:Oi,depthTest:!0,depthWrite:!1,side:$s})}static buildVertexShaderProjection(){let e=`

            vec4 scaleRotationA = texture(scaleRotationsTexture, getDataUVF(nearestEvenIndex, 1.5,
                                                                            oddOffset, scaleRotationsTextureSize));
            vec4 scaleRotationB = texture(scaleRotationsTexture, getDataUVF(nearestEvenIndex, 1.5,
                                                                            oddOffset + uint(1), scaleRotationsTextureSize));

            vec3 scaleRotation123 = vec3(scaleRotationA.rgb) * (1.0 - fOddOffset) +
                                    vec3(scaleRotationA.ba, scaleRotationB.r) * fOddOffset;
            vec3 scaleRotation456 = vec3(scaleRotationA.a, scaleRotationB.rg) * (1.0 - fOddOffset) +
                                    vec3(scaleRotationB.gba) * fOddOffset;

            float missingW = sqrt(1.0 - scaleRotation456.x * scaleRotation456.x - scaleRotation456.y *
                                    scaleRotation456.y - scaleRotation456.z * scaleRotation456.z);
            mat3 R = quaternionToRotationMatrix(scaleRotation456.r, scaleRotation456.g, scaleRotation456.b, missingW);
            mat3 S = mat3(scaleRotation123.r, 0.0, 0.0,
                            0.0, scaleRotation123.g, 0.0,
                            0.0, 0.0, scaleRotation123.b);
            
            mat3 L = R * S;

            mat3x4 splat2World = mat3x4(vec4(L[0], 0.0),
                                        vec4(L[1], 0.0),
                                        vec4(splatCenter.x, splatCenter.y, splatCenter.z, 1.0));

            mat4 world2ndc = transpose(projectionMatrix * transformModelViewMatrix);

            mat3x4 ndc2pix = mat3x4(vec4(viewport.x / 2.0, 0.0, 0.0, (viewport.x - 1.0) / 2.0),
                                    vec4(0.0, viewport.y / 2.0, 0.0, (viewport.y - 1.0) / 2.0),
                                    vec4(0.0, 0.0, 0.0, 1.0));

            mat3 T = transpose(splat2World) * world2ndc * ndc2pix;
            vec3 normal = vec3(viewMatrix * vec4(L[0][2], L[1][2], L[2][2], 0.0));
        `;return e+=`

                mat4 splat2World4 = mat4(vec4(L[0], 0.0),
                                        vec4(L[1], 0.0),
                                        vec4(L[2], 0.0),
                                        vec4(splatCenter.x, splatCenter.y, splatCenter.z, 1.0));

                mat4 Tt = transpose(transpose(splat2World4) * world2ndc);

                vec4 tempPoint1 = Tt * vec4(1.0, 0.0, 0.0, 1.0);
                tempPoint1 /= tempPoint1.w;

                vec4 tempPoint2 = Tt * vec4(0.0, 1.0, 0.0, 1.0);
                tempPoint2 /= tempPoint2.w;

                vec4 center = Tt * vec4(0.0, 0.0, 0.0, 1.0);
                center /= center.w;

                vec2 basisVector1 = tempPoint1.xy - center.xy;
                vec2 basisVector2 = tempPoint2.xy - center.xy;

                vec2 basisVector1Screen = basisVector1 * 0.5 * viewport;
                vec2 basisVector2Screen = basisVector2 * 0.5 * viewport;

                const float minPix = 1.;
                if (length(basisVector1Screen) < minPix || length(basisVector2Screen) < minPix) {
                    
            vec3 T0 = vec3(T[0][0], T[0][1], T[0][2]);
            vec3 T1 = vec3(T[1][0], T[1][1], T[1][2]);
            vec3 T3 = vec3(T[2][0], T[2][1], T[2][2]);

            vec3 tempPoint = vec3(1.0, 1.0, -1.0);
            float distance = (T3.x * T3.x * tempPoint.x) + (T3.y * T3.y * tempPoint.y) + (T3.z * T3.z * tempPoint.z);
            vec3 f = (1.0 / distance) * tempPoint;
            if (abs(distance) < 0.00001) return;

            float pointImageX = (T0.x * T3.x * f.x) + (T0.y * T3.y * f.y) + (T0.z * T3.z * f.z);
            float pointImageY = (T1.x * T3.x * f.x) + (T1.y * T3.y * f.y) + (T1.z * T3.z * f.z);
            vec2 pointImage = vec2(pointImageX, pointImageY);

            float tempX = (T0.x * T0.x * f.x) + (T0.y * T0.y * f.y) + (T0.z * T0.z * f.z);
            float tempY = (T1.x * T1.x * f.x) + (T1.y * T1.y * f.y) + (T1.z * T1.z * f.z);
            vec2 temp = vec2(tempX, tempY);

            vec2 halfExtend = pointImage * pointImage - temp;
            vec2 extent = sqrt(max(vec2(0.0001), halfExtend));
            float radius = max(extent.x, extent.y);

            vec2 ndcOffset = ((position.xy * radius * 3.0) * basisViewport * 2.0);

            vec4 quadPos = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);
            gl_Position = quadPos;

            vT = T;
            vQuadCenter = pointImage;
            vFragCoord = (quadPos.xy * 0.5 + 0.5) * viewport;
        
                } else {
                    vec2 ndcOffset = vec2(position.x * basisVector1 + position.y * basisVector2) * 3.0 * inverseFocalAdjustment;
                    vec4 quadPos = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);
                    gl_Position = quadPos;

                    vT = T;
                    vQuadCenter = center.xy;
                    vFragCoord = (quadPos.xy * 0.5 + 0.5) * viewport;
                }
            `,e+=Rt.getVertexShaderFadeIn(),e+="}",e}static buildFragmentShader(){return`
            precision highp float;
            #include <common>

            uniform vec3 debugColor;

            varying vec4 vColor;
            varying vec2 vUv;
            varying vec2 vPosition;
            varying mat3 vT;
            varying vec2 vQuadCenter;
            varying vec2 vFragCoord;

            void main () {

                const float FilterInvSquare = 2.0;
                const float near_n = 0.2;
                const float T = 1.0;

                vec2 xy = vQuadCenter;
                vec3 Tu = vT[0];
                vec3 Tv = vT[1];
                vec3 Tw = vT[2];
                vec3 k = vFragCoord.x * Tw - Tu;
                vec3 l = vFragCoord.y * Tw - Tv;
                vec3 p = cross(k, l);
                if (p.z == 0.0) discard;
                vec2 s = vec2(p.x / p.z, p.y / p.z);
                float rho3d = (s.x * s.x + s.y * s.y); 
                vec2 d = vec2(xy.x - vFragCoord.x, xy.y - vFragCoord.y);
                float rho2d = FilterInvSquare * (d.x * d.x + d.y * d.y); 

                // compute intersection and depth
                float rho = min(rho3d, rho2d);
                float depth = (rho3d <= rho2d) ? (s.x * Tw.x + s.y * Tw.y) + Tw.z : Tw.z; 
                if (depth < near_n) discard;
                //  vec4 nor_o = collected_normal_opacity[j];
                //  float normal[3] = {nor_o.x, nor_o.y, nor_o.z};
                float opa = vColor.a;

                float power = -0.5f * rho;
                if (power > 0.0f) discard;

                // Eq. (2) from 3D Gaussian splatting paper.
                // Obtain alpha by multiplying with Gaussian opacity
                // and its exponential falloff from mean.
                // Avoid numerical instabilities (see paper appendix). 
                float alpha = min(0.99f, opa * exp(power));
                if (alpha < 1.0f / 255.0f) discard;
                float test_T = T * (1.0 - alpha);
                if (test_T < 0.0001)discard;

                float w = alpha * T;
                gl_FragColor = vec4(vColor.rgb, w);
            }
        `}}class Th{static build(e){const t=new Fi;t.setIndex([0,1,2,0,2,3]);const s=new Float32Array(4*3),n=new ya(s,3);t.setAttribute("position",n),n.setXYZ(0,-1,-1,0),n.setXYZ(1,-1,1,0),n.setXYZ(2,1,1,0),n.setXYZ(3,1,-1,0),n.needsUpdate=!0;const r=new xa().copy(t),i=new Uint32Array(e),a=new ba(i,1,!1);return a.setUsage(va),r.setAttribute("splatIndex",a),r.instanceCount=0,r}}class Ih extends Oe{constructor(e,t=new I,s=new Ae,n=new I(1,1,1),r=1,i=1,a=!0){super(),this.splatBuffer=e,this.position.copy(t),this.quaternion.copy(s),this.scale.copy(n),this.transform=new ee,this.minimumAlpha=r,this.opacity=i,this.visible=a}copyTransformData(e){this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.transform.copy(e.transform)}updateTransform(e){e?(this.matrixWorldAutoUpdate&&this.updateWorldMatrix(!0,!1),this.transform.copy(this.matrixWorld)):(this.matrixAutoUpdate&&this.updateMatrix(),this.transform.copy(this.matrix))}}const Ir=class{constructor(e,t,s,n){this.min=new I().copy(e),this.max=new I().copy(t),this.boundingBox=new $t(this.min,this.max),this.center=new I().copy(this.max).sub(this.min).multiplyScalar(.5).add(this.min),this.depth=s,this.children=[],this.data=null,this.id=n||Ir.idGen++}};let _s=Ir;_(_s,"idGen",0);class es{constructor(e,t){this.maxDepth=e,this.maxCentersPerNode=t,this.sceneDimensions=new I,this.sceneMin=new I,this.sceneMax=new I,this.rootNode=null,this.nodesWithIndexes=[],this.splatMesh=null}static convertWorkerSubTreeNode(e){const t=new I().fromArray(e.min),s=new I().fromArray(e.max),n=new _s(t,s,e.depth,e.id);if(e.data.indexes){n.data={indexes:[]};for(let r of e.data.indexes)n.data.indexes.push(r)}if(e.children)for(let r of e.children)n.children.push(es.convertWorkerSubTreeNode(r));return n}static convertWorkerSubTree(e,t){const s=new es(e.maxDepth,e.maxCentersPerNode);s.sceneMin=new I().fromArray(e.sceneMin),s.sceneMax=new I().fromArray(e.sceneMax),s.splatMesh=t,s.rootNode=es.convertWorkerSubTreeNode(e.rootNode);const n=(r,i)=>{r.children.length===0&&i(r);for(let a of r.children)n(a,i)};return s.nodesWithIndexes=[],n(s.rootNode,r=>{r.data&&r.data.indexes&&r.data.indexes.length>0&&s.nodesWithIndexes.push(r)}),s}}function Eh(o){let e=0;class t{constructor(l,c){this.min=[l[0],l[1],l[2]],this.max=[c[0],c[1],c[2]]}containsPoint(l){return l[0]>=this.min[0]&&l[0]<=this.max[0]&&l[1]>=this.min[1]&&l[1]<=this.max[1]&&l[2]>=this.min[2]&&l[2]<=this.max[2]}}class s{constructor(l,c){this.maxDepth=l,this.maxCentersPerNode=c,this.sceneDimensions=[],this.sceneMin=[],this.sceneMax=[],this.rootNode=null,this.addedIndexes={},this.nodesWithIndexes=[],this.splatMesh=null,this.disposed=!1}}class n{constructor(l,c,d,h){this.min=[l[0],l[1],l[2]],this.max=[c[0],c[1],c[2]],this.center=[(c[0]-l[0])*.5+l[0],(c[1]-l[1])*.5+l[1],(c[2]-l[2])*.5+l[2]],this.depth=d,this.children=[],this.data=null,this.id=h||e++}}processSplatTreeNode=function(a,l,c,d){const h=l.data.indexes.length;if(h<a.maxCentersPerNode||l.depth>a.maxDepth){const A=[];for(let x=0;x<l.data.indexes.length;x++)a.addedIndexes[l.data.indexes[x]]||(A.push(l.data.indexes[x]),a.addedIndexes[l.data.indexes[x]]=!0);l.data.indexes=A,l.data.indexes.sort((x,v)=>x>v?1:-1),a.nodesWithIndexes.push(l);return}const u=[l.max[0]-l.min[0],l.max[1]-l.min[1],l.max[2]-l.min[2]],p=[u[0]*.5,u[1]*.5,u[2]*.5],f=[l.min[0]+p[0],l.min[1]+p[1],l.min[2]+p[2]],m=[new t([f[0]-p[0],f[1],f[2]-p[2]],[f[0],f[1]+p[1],f[2]]),new t([f[0],f[1],f[2]-p[2]],[f[0]+p[0],f[1]+p[1],f[2]]),new t([f[0],f[1],f[2]],[f[0]+p[0],f[1]+p[1],f[2]+p[2]]),new t([f[0]-p[0],f[1],f[2]],[f[0],f[1]+p[1],f[2]+p[2]]),new t([f[0]-p[0],f[1]-p[1],f[2]-p[2]],[f[0],f[1],f[2]]),new t([f[0],f[1]-p[1],f[2]-p[2]],[f[0]+p[0],f[1],f[2]]),new t([f[0],f[1]-p[1],f[2]],[f[0]+p[0],f[1],f[2]+p[2]]),new t([f[0]-p[0],f[1]-p[1],f[2]],[f[0],f[1],f[2]+p[2]])],g=[];for(let A=0;A<m.length;A++)g[A]=[];const C=[0,0,0];for(let A=0;A<h;A++){const x=l.data.indexes[A],v=c[x];C[0]=d[v],C[1]=d[v+1],C[2]=d[v+2];for(let S=0;S<m.length;S++)m[S].containsPoint(C)&&g[S].push(x)}for(let A=0;A<m.length;A++){const x=new n(m[A].min,m[A].max,l.depth+1);x.data={indexes:g[A]},l.children.push(x)}l.data={};for(let A of l.children)processSplatTreeNode(a,A,c,d)};const r=(a,l,c)=>{const d=[0,0,0],h=[0,0,0],u=[],p=Math.floor(a.length/4);for(let m=0;m<p;m++){const g=m*4,C=a[g],A=a[g+1],x=a[g+2],v=Math.round(a[g+3]);(m===0||C<d[0])&&(d[0]=C),(m===0||C>h[0])&&(h[0]=C),(m===0||A<d[1])&&(d[1]=A),(m===0||A>h[1])&&(h[1]=A),(m===0||x<d[2])&&(d[2]=x),(m===0||x>h[2])&&(h[2]=x),u.push(v)}const f=new s(l,c);return f.sceneMin=d,f.sceneMax=h,f.rootNode=new n(f.sceneMin,f.sceneMax,0),f.rootNode.data={indexes:u},f};function i(a,l,c){const d=[];for(let u of a){const p=Math.floor(u.length/4);for(let f=0;f<p;f++){const m=f*4,g=Math.round(u[m+3]);d[g]=m}}const h=[];for(let u of a){const p=r(u,l,c);h.push(p),processSplatTreeNode(p,p.rootNode,d,u)}o.postMessage({subTrees:h})}o.onmessage=a=>{a.data.process&&i(a.data.process.centers,a.data.process.maxDepth,a.data.process.maxCentersPerNode)}}function Ph(o,e,t,s,n){o.postMessage({process:{centers:e,maxDepth:s,maxCentersPerNode:n}},t)}function Dh(){return new Worker(URL.createObjectURL(new Blob(["(",Eh.toString(),")(self)"],{type:"application/javascript"})))}class Bh{constructor(e,t){_(this,"processSplatMesh",function(e,t=()=>!0,s,n){this.splatTreeWorker||(this.splatTreeWorker=Dh()),this.splatMesh=e,this.subTrees=[];const r=new I,i=(a,l)=>{const c=new Float32Array(l*4);let d=0;for(let h=0;h<l;h++){const u=h+a;if(t(u)){e.getSplatCenter(u,r);const p=d*4;c[p]=r.x,c[p+1]=r.y,c[p+2]=r.z,c[p+3]=u,d++}}return c};return new Promise(a=>{const l=()=>this.disposed?(this.diposeSplatTreeWorker(),a(),!0):!1;s&&s(!1),je(()=>{if(l())return;const c=[];if(e.dynamicMode){let d=0;for(let h=0;h<e.scenes.length;h++){const p=e.getScene(h).splatBuffer.getSplatCount(),f=i(d,p);c.push(f),d+=p}}else{const d=i(0,e.getSplatCount());c.push(d)}this.splatTreeWorker.onmessage=d=>{l()||d.data.subTrees&&(n&&n(!1),je(()=>{if(!l()){for(let h of d.data.subTrees){const u=es.convertWorkerSubTree(h,e);this.subTrees.push(u)}this.diposeSplatTreeWorker(),n&&n(!0),je(()=>{a()})}}))},je(()=>{if(l())return;s&&s(!0);const d=c.map(h=>h.buffer);Ph(this.splatTreeWorker,c,d,this.maxDepth,this.maxCentersPerNode)})})})});this.maxDepth=e,this.maxCentersPerNode=t,this.subTrees=[],this.splatMesh=null}dispose(){this.diposeSplatTreeWorker(),this.disposed=!0}diposeSplatTreeWorker(){this.splatTreeWorker&&this.splatTreeWorker.terminate(),this.splatTreeWorker=null}countLeaves(){let e=0;return this.visitLeaves(()=>{e++}),e}visitLeaves(e){const t=(s,n)=>{s.children.length===0&&n(s);for(let r of s.children)t(r,n)};for(let s of this.subTrees)t(s.rootNode,e)}}function Fh(o){const e={};function t(s){if(e[s]!==void 0)return e[s];let n;switch(s){case"WEBGL_depth_texture":n=o.getExtension("WEBGL_depth_texture")||o.getExtension("MOZ_WEBGL_depth_texture")||o.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=o.getExtension("EXT_texture_filter_anisotropic")||o.getExtension("MOZ_EXT_texture_filter_anisotropic")||o.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=o.getExtension("WEBGL_compressed_texture_s3tc")||o.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=o.getExtension("WEBGL_compressed_texture_pvrtc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=o.getExtension(s)}return e[s]=n,n}return{has:function(s){return t(s)!==null},init:function(s){s.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(s){const n=t(s);return n===null&&console.warn("THREE.WebGLRenderer: "+s+" extension not supported."),n}}}function Mh(o,e,t){let s;function n(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const y=e.get("EXT_texture_filter_anisotropic");s=o.getParameter(y.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function r(y){if(y==="highp"){if(o.getShaderPrecisionFormat(o.VERTEX_SHADER,o.HIGH_FLOAT).precision>0&&o.getShaderPrecisionFormat(o.FRAGMENT_SHADER,o.HIGH_FLOAT).precision>0)return"highp";y="mediump"}return y==="mediump"&&o.getShaderPrecisionFormat(o.VERTEX_SHADER,o.MEDIUM_FLOAT).precision>0&&o.getShaderPrecisionFormat(o.FRAGMENT_SHADER,o.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const i=typeof WebGL2RenderingContext<"u"&&o.constructor.name==="WebGL2RenderingContext";let a=t.precision!==void 0?t.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=i||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,h=o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS),u=o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=o.getParameter(o.MAX_TEXTURE_SIZE),f=o.getParameter(o.MAX_CUBE_MAP_TEXTURE_SIZE),m=o.getParameter(o.MAX_VERTEX_ATTRIBS),g=o.getParameter(o.MAX_VERTEX_UNIFORM_VECTORS),C=o.getParameter(o.MAX_VARYING_VECTORS),A=o.getParameter(o.MAX_FRAGMENT_UNIFORM_VECTORS),x=u>0,v=i||e.has("OES_texture_float"),S=x&&v,T=i?o.getParameter(o.MAX_SAMPLES):0;return{isWebGL2:i,drawBuffers:c,getMaxAnisotropy:n,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:d,maxTextures:h,maxVertexTextures:u,maxTextureSize:p,maxCubemapSize:f,maxAttributes:m,maxVertexUniforms:g,maxVaryings:C,maxFragmentUniforms:A,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:S,maxSamples:T}}const ts={Default:0,Gradual:1,Instant:2},_t={None:0,Error:1,Warning:2,Info:3,Debug:4},fi=new Fi,Oh=new Lt,Bs=6,Rh=4,_h=4,Lh=4,Hh=6,Uh=8,Tn=4,In=4,mi=1,zh=.012,kh=.003,gi=1,Ai=16777216;class Fe extends Le{constructor(t=nt.ThreeD,s=!1,n=!1,r=!1,i=1,a=!0,l=!1,c=!1,d=1024,h=_t.None,u=0,p=1,f=.3){super(fi,Oh);_(this,"buildSplatTree",function(t=[],s,n){return new Promise(r=>{this.disposeSplatTree(),this.baseSplatTree=new Bh(8,1e3);const i=performance.now(),a=new Vn;this.baseSplatTree.processSplatMesh(this,l=>{this.getSplatColor(l,a);const c=this.getSceneIndexForSplat(l),d=t[c]||1;return a.w>=d},s,n).then(()=>{const l=performance.now()-i;if(this.logLevel>=_t.Info&&console.log("SplatTree build: "+l+" ms"),this.disposed)r();else{this.splatTree=this.baseSplatTree,this.baseSplatTree=null;let c=0,d=0,h=0;this.splatTree.visitLeaves(u=>{const p=u.data.indexes.length;p>0&&(d+=p,h++,c++)}),this.logLevel>=_t.Info&&(console.log(`SplatTree leaves: ${this.splatTree.countLeaves()}`),console.log(`SplatTree leaves with splats:${c}`),d=d/h,console.log(`Avg splat count per node: ${d}`),console.log(`Total splat count: ${this.getSplatCount()}`)),r()}})})});_(this,"updateUniforms",function(){const t=new q;return function(s,n,r,i,a,l){if(this.getSplatCount()>0){if(t.set(s.x*this.devicePixelRatio,s.y*this.devicePixelRatio),this.material.uniforms.viewport.value.copy(t),this.material.uniforms.basisViewport.value.set(1/t.x,1/t.y),this.material.uniforms.focal.value.set(n,r),this.material.uniforms.orthographicMode.value=i?1:0,this.material.uniforms.orthoZoom.value=a,this.material.uniforms.inverseFocalAdjustment.value=l,this.dynamicMode)for(let d=0;d<this.scenes.length;d++)this.material.uniforms.transforms.value[d].copy(this.getScene(d).transform);if(this.enableOptionalEffects)for(let d=0;d<this.scenes.length;d++)this.material.uniforms.sceneOpacity.value[d]=pe(this.getScene(d).opacity,0,1),this.material.uniforms.sceneVisibility.value[d]=this.getScene(d).visible?1:0,this.material.uniformsNeedUpdate=!0;this.material.uniformsNeedUpdate=!0}}}());_(this,"setupDistancesComputationTransformFeedback",function(){let t;return function(){const s=this.getMaxSplatCount();if(!this.renderer)return;const n=this.lastRenderer!==this.renderer,r=t!==s;if(!n&&!r)return;n?this.disposeDistancesComputationGPUResources():r&&this.disposeDistancesComputationGPUBufferResources();const i=this.renderer.getContext(),a=(p,f,m)=>{const g=p.createShader(f);if(!g)return console.error("Fatal error: gl could not create a shader object."),null;if(p.shaderSource(g,m),p.compileShader(g),!p.getShaderParameter(g,p.COMPILE_STATUS)){let A="unknown";f===p.VERTEX_SHADER?A="vertex shader":f===p.FRAGMENT_SHADER&&(A="fragement shader");const x=p.getShaderInfoLog(g);return console.error("Failed to compile "+A+" with these errors:"+x),p.deleteShader(g),null}return g};let l;this.integerBasedDistancesComputation?(l=`#version 300 es
                in ivec4 center;
                flat out int distance;`,this.dynamicMode?l+=`
                        in uint sceneIndex;
                        uniform ivec4 transforms[${$.MaxScenes}];
                        void main(void) {
                            ivec4 transform = transforms[sceneIndex];
                            distance = center.x * transform.x + center.y * transform.y + center.z * transform.z + transform.w * center.w;
                        }
                    `:l+=`
                        uniform ivec3 modelViewProj;
                        void main(void) {
                            distance = center.x * modelViewProj.x + center.y * modelViewProj.y + center.z * modelViewProj.z;
                        }
                    `):(l=`#version 300 es
                in vec4 center;
                flat out float distance;`,this.dynamicMode?l+=`
                        in uint sceneIndex;
                        uniform mat4 transforms[${$.MaxScenes}];
                        void main(void) {
                            vec4 transformedCenter = transforms[sceneIndex] * vec4(center.xyz, 1.0);
                            distance = transformedCenter.z;
                        }
                    `:l+=`
                        uniform vec3 modelViewProj;
                        void main(void) {
                            distance = center.x * modelViewProj.x + center.y * modelViewProj.y + center.z * modelViewProj.z;
                        }
                    `);const c=`#version 300 es
                precision lowp float;
                out vec4 fragColor;
                void main(){}
            `,d=i.getParameter(i.VERTEX_ARRAY_BINDING),h=i.getParameter(i.CURRENT_PROGRAM),u=h?i.getProgramParameter(h,i.DELETE_STATUS):!1;if(n&&(this.distancesTransformFeedback.vao=i.createVertexArray()),i.bindVertexArray(this.distancesTransformFeedback.vao),n){const p=i.createProgram(),f=a(i,i.VERTEX_SHADER,l),m=a(i,i.FRAGMENT_SHADER,c);if(!f||!m)throw new Error("Could not compile shaders for distances computation on GPU.");if(i.attachShader(p,f),i.attachShader(p,m),i.transformFeedbackVaryings(p,["distance"],i.SEPARATE_ATTRIBS),i.linkProgram(p),!i.getProgramParameter(p,i.LINK_STATUS)){const C=i.getProgramInfoLog(p);throw console.error("Fatal error: Failed to link program: "+C),i.deleteProgram(p),i.deleteShader(m),i.deleteShader(f),new Error("Could not link shaders for distances computation on GPU.")}this.distancesTransformFeedback.program=p,this.distancesTransformFeedback.vertexShader=f,this.distancesTransformFeedback.vertexShader=m}if(i.useProgram(this.distancesTransformFeedback.program),this.distancesTransformFeedback.centersLoc=i.getAttribLocation(this.distancesTransformFeedback.program,"center"),this.dynamicMode){this.distancesTransformFeedback.sceneIndexesLoc=i.getAttribLocation(this.distancesTransformFeedback.program,"sceneIndex");for(let p=0;p<this.scenes.length;p++)this.distancesTransformFeedback.transformsLocs[p]=i.getUniformLocation(this.distancesTransformFeedback.program,`transforms[${p}]`)}else this.distancesTransformFeedback.modelViewProjLoc=i.getUniformLocation(this.distancesTransformFeedback.program,"modelViewProj");(n||r)&&(this.distancesTransformFeedback.centersBuffer=i.createBuffer(),i.bindBuffer(i.ARRAY_BUFFER,this.distancesTransformFeedback.centersBuffer),i.enableVertexAttribArray(this.distancesTransformFeedback.centersLoc),this.integerBasedDistancesComputation?i.vertexAttribIPointer(this.distancesTransformFeedback.centersLoc,4,i.INT,0,0):i.vertexAttribPointer(this.distancesTransformFeedback.centersLoc,4,i.FLOAT,!1,0,0),this.dynamicMode&&(this.distancesTransformFeedback.sceneIndexesBuffer=i.createBuffer(),i.bindBuffer(i.ARRAY_BUFFER,this.distancesTransformFeedback.sceneIndexesBuffer),i.enableVertexAttribArray(this.distancesTransformFeedback.sceneIndexesLoc),i.vertexAttribIPointer(this.distancesTransformFeedback.sceneIndexesLoc,1,i.UNSIGNED_INT,0,0))),(n||r)&&(this.distancesTransformFeedback.outDistancesBuffer=i.createBuffer()),i.bindBuffer(i.ARRAY_BUFFER,this.distancesTransformFeedback.outDistancesBuffer),i.bufferData(i.ARRAY_BUFFER,s*4,i.STATIC_READ),n&&(this.distancesTransformFeedback.id=i.createTransformFeedback()),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,this.distancesTransformFeedback.id),i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,0,this.distancesTransformFeedback.outDistancesBuffer),h&&u!==!0&&i.useProgram(h),d&&i.bindVertexArray(d),this.lastRenderer=this.renderer,t=s}}());_(this,"fillTransformsArray",function(){const t=[];return function(s){t.length!==s.length&&(t.length=s.length);for(let n=0;n<this.scenes.length;n++){const i=this.getScene(n).transform.elements;for(let a=0;a<16;a++)t[n*16+a]=i[a]}s.set(t)}}());_(this,"computeDistancesOnGPU",function(){const t=new ee;return function(s,n){if(!this.renderer)return;const r=this.renderer.getContext(),i=r.getParameter(r.VERTEX_ARRAY_BINDING),a=r.getParameter(r.CURRENT_PROGRAM),l=a?r.getProgramParameter(a,r.DELETE_STATUS):!1;if(r.bindVertexArray(this.distancesTransformFeedback.vao),r.useProgram(this.distancesTransformFeedback.program),r.enable(r.RASTERIZER_DISCARD),this.dynamicMode)for(let h=0;h<this.scenes.length;h++)if(t.copy(this.getScene(h).transform),t.premultiply(s),this.integerBasedDistancesComputation){const u=Fe.getIntegerMatrixArray(t),p=[u[2],u[6],u[10],u[14]];r.uniform4i(this.distancesTransformFeedback.transformsLocs[h],p[0],p[1],p[2],p[3])}else r.uniformMatrix4fv(this.distancesTransformFeedback.transformsLocs[h],!1,t.elements);else if(this.integerBasedDistancesComputation){const h=Fe.getIntegerMatrixArray(s),u=[h[2],h[6],h[10]];r.uniform3i(this.distancesTransformFeedback.modelViewProjLoc,u[0],u[1],u[2])}else{const h=[s.elements[2],s.elements[6],s.elements[10]];r.uniform3f(this.distancesTransformFeedback.modelViewProjLoc,h[0],h[1],h[2])}r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.centersBuffer),r.enableVertexAttribArray(this.distancesTransformFeedback.centersLoc),this.integerBasedDistancesComputation?r.vertexAttribIPointer(this.distancesTransformFeedback.centersLoc,4,r.INT,0,0):r.vertexAttribPointer(this.distancesTransformFeedback.centersLoc,4,r.FLOAT,!1,0,0),this.dynamicMode&&(r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.sceneIndexesBuffer),r.enableVertexAttribArray(this.distancesTransformFeedback.sceneIndexesLoc),r.vertexAttribIPointer(this.distancesTransformFeedback.sceneIndexesLoc,1,r.UNSIGNED_INT,0,0)),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,this.distancesTransformFeedback.id),r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,0,this.distancesTransformFeedback.outDistancesBuffer),r.beginTransformFeedback(r.POINTS),r.drawArrays(r.POINTS,0,this.getSplatCount()),r.endTransformFeedback(),r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,0,null),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null),r.disable(r.RASTERIZER_DISCARD);const c=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);r.flush();const d=new Promise(h=>{const u=()=>{if(this.disposed)h();else switch(r.clientWaitSync(c,0,0)){case r.TIMEOUT_EXPIRED:return this.computeDistancesOnGPUSyncTimeout=setTimeout(u),this.computeDistancesOnGPUSyncTimeout;case r.WAIT_FAILED:throw new Error("should never get here");default:this.computeDistancesOnGPUSyncTimeout=null,r.deleteSync(c);const g=r.getParameter(r.VERTEX_ARRAY_BINDING);r.bindVertexArray(this.distancesTransformFeedback.vao),r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.outDistancesBuffer),r.getBufferSubData(r.ARRAY_BUFFER,0,n),r.bindBuffer(r.ARRAY_BUFFER,null),g&&r.bindVertexArray(g),h()}};this.computeDistancesOnGPUSyncTimeout=setTimeout(u)});return a&&l!==!0&&r.useProgram(a),i&&r.bindVertexArray(i),d}}());_(this,"getSplatCenter",function(){const t={};return function(s,n,r){this.getLocalSplatParameters(s,t,r),t.splatBuffer.getSplatCenter(t.localIndex,n,t.sceneTransform)}}());_(this,"getSplatScaleAndRotation",function(){const t={},s=new I;return function(n,r,i,a){this.getLocalSplatParameters(n,t,a),s.x=void 0,s.y=void 0,s.z=void 0,this.splatRenderMode===nt.TwoD&&(s.z=0),t.splatBuffer.getSplatScaleAndRotation(t.localIndex,r,i,t.sceneTransform,s)}}());_(this,"getSplatColor",function(){const t={};return function(s,n){this.getLocalSplatParameters(s,t),t.splatBuffer.getSplatColor(t.localIndex,n)}}());this.renderer=void 0,this.splatRenderMode=t,this.dynamicMode=s,this.enableOptionalEffects=n,this.halfPrecisionCovariancesOnGPU=r,this.devicePixelRatio=i,this.enableDistancesComputationOnGPU=a,this.integerBasedDistancesComputation=l,this.antialiased=c,this.kernel2DSize=f,this.maxScreenSpaceSplatSize=d,this.logLevel=h,this.sphericalHarmonicsDegree=u,this.minSphericalHarmonicsDegree=0,this.sceneFadeInRateMultiplier=p,this.scenes=[],this.splatTree=null,this.baseSplatTree=null,this.splatDataTextures={},this.distancesTransformFeedback={id:null,vertexShader:null,fragmentShader:null,program:null,centersBuffer:null,sceneIndexesBuffer:null,outDistancesBuffer:null,centersLoc:-1,modelViewProjLoc:-1,sceneIndexesLoc:-1,transformsLocs:[]},this.globalSplatIndexToLocalSplatIndexMap=[],this.globalSplatIndexToSceneIndexMap=[],this.lastBuildSplatCount=0,this.lastBuildScenes=[],this.lastBuildMaxSplatCount=0,this.lastBuildSceneCount=0,this.firstRenderTime=-1,this.finalBuild=!1,this.webGLUtils=null,this.boundingBox=new $t,this.calculatedSceneCenter=new I,this.maxSplatDistanceFromSceneCenter=0,this.visibleRegionBufferRadius=0,this.visibleRegionRadius=0,this.visibleRegionFadeStartRadius=0,this.visibleRegionChanging=!1,this.splatScale=1,this.pointCloudModeEnabled=!1,this.disposed=!1,this.lastRenderer=null,this.visible=!1}static buildScenes(t,s,n){const r=[];r.length=s.length;for(let i=0;i<s.length;i++){const a=s[i],l=n[i]||{};let c=l.position||[0,0,0],d=l.rotation||[0,0,0,1],h=l.scale||[1,1,1];const u=new I().fromArray(c),p=new Ae().fromArray(d),f=new I().fromArray(h),m=Fe.createScene(a,u,p,f,l.splatAlphaRemovalThreshold||1,l.opacity,l.visible);t.add(m),r[i]=m}return r}static createScene(t,s,n,r,i,a=1,l=!0){return new Ih(t,s,n,r,i,a,l)}static buildSplatIndexMaps(t){const s=[],n=[];let r=0;for(let i=0;i<t.length;i++){const l=t[i].getMaxSplatCount();for(let c=0;c<l;c++)s[r]=c,n[r]=i,r++}return{localSplatIndexMap:s,sceneIndexMap:n}}build(t,s,n=!0,r=!1,i,a,l=!0){this.sceneOptions=s,this.finalBuild=r;const c=Fe.getTotalMaxSplatCountForSplatBuffers(t),d=Fe.buildScenes(this,t,s);if(n)for(let g=0;g<this.scenes.length&&g<d.length;g++){const C=d[g],A=this.getScene(g);C.copyTransformData(A)}this.scenes=d;let h=3;for(let g of t){const C=g.getMinSphericalHarmonicsDegree();C<h&&(h=C)}this.minSphericalHarmonicsDegree=Math.min(h,this.sphericalHarmonicsDegree);let u=!1;if(t.length!==this.lastBuildScenes.length)u=!0;else for(let g=0;g<t.length;g++)if(t[g]!==this.lastBuildScenes[g].splatBuffer){u=!0;break}let p=!0;if((this.scenes.length!==1||this.lastBuildSceneCount!==this.scenes.length||this.lastBuildMaxSplatCount!==c||u)&&(p=!1),!p){this.boundingBox=new $t,l||(this.maxSplatDistanceFromSceneCenter=0,this.visibleRegionBufferRadius=0,this.visibleRegionRadius=0,this.visibleRegionFadeStartRadius=0,this.firstRenderTime=-1),this.lastBuildScenes=[],this.lastBuildSplatCount=0,this.lastBuildMaxSplatCount=0,this.disposeMeshData(),this.geometry=Th.build(c),this.splatRenderMode===nt.ThreeD?this.material=zs.build(this.dynamicMode,this.enableOptionalEffects,this.antialiased,this.maxScreenSpaceSplatSize,this.splatScale,this.pointCloudModeEnabled,this.minSphericalHarmonicsDegree,this.kernel2DSize):this.material=ks.build(this.dynamicMode,this.enableOptionalEffects,this.splatScale,this.pointCloudModeEnabled,this.minSphericalHarmonicsDegree);const g=Fe.buildSplatIndexMaps(t);this.globalSplatIndexToLocalSplatIndexMap=g.localSplatIndexMap,this.globalSplatIndexToSceneIndexMap=g.sceneIndexMap}const f=this.getSplatCount(!0);this.enableDistancesComputationOnGPU&&this.setupDistancesComputationTransformFeedback();const m=this.refreshGPUDataFromSplatBuffers(p);for(let g=0;g<this.scenes.length;g++)this.lastBuildScenes[g]=this.scenes[g];return this.lastBuildSplatCount=f,this.lastBuildMaxSplatCount=this.getMaxSplatCount(),this.lastBuildSceneCount=this.scenes.length,r&&this.scenes.length>0&&this.buildSplatTree(s.map(g=>g.splatAlphaRemovalThreshold||1),i,a).then(()=>{this.onSplatTreeReadyCallback&&this.onSplatTreeReadyCallback(this.splatTree),this.onSplatTreeReadyCallback=null}),this.visible=this.scenes.length>0,m}freeIntermediateSplatData(){const t=s=>{delete s.source.data,delete s.image,s.onUpdate=null};delete this.splatDataTextures.baseData.covariances,delete this.splatDataTextures.baseData.centers,delete this.splatDataTextures.baseData.colors,delete this.splatDataTextures.baseData.sphericalHarmonics,delete this.splatDataTextures.centerColors.data,delete this.splatDataTextures.covariances.data,this.splatDataTextures.sphericalHarmonics&&delete this.splatDataTextures.sphericalHarmonics.data,this.splatDataTextures.sceneIndexes&&delete this.splatDataTextures.sceneIndexes.data,this.splatDataTextures.centerColors.texture.needsUpdate=!0,this.splatDataTextures.centerColors.texture.onUpdate=()=>{t(this.splatDataTextures.centerColors.texture)},this.splatDataTextures.covariances.texture.needsUpdate=!0,this.splatDataTextures.covariances.texture.onUpdate=()=>{t(this.splatDataTextures.covariances.texture)},this.splatDataTextures.sphericalHarmonics&&(this.splatDataTextures.sphericalHarmonics.texture?(this.splatDataTextures.sphericalHarmonics.texture.needsUpdate=!0,this.splatDataTextures.sphericalHarmonics.texture.onUpdate=()=>{t(this.splatDataTextures.sphericalHarmonics.texture)}):this.splatDataTextures.sphericalHarmonics.textures.forEach(s=>{s.needsUpdate=!0,s.onUpdate=()=>{t(s)}})),this.splatDataTextures.sceneIndexes&&(this.splatDataTextures.sceneIndexes.texture.needsUpdate=!0,this.splatDataTextures.sceneIndexes.texture.onUpdate=()=>{t(this.splatDataTextures.sceneIndexes.texture)})}dispose(){this.disposeMeshData(),this.disposeTextures(),this.disposeSplatTree(),this.enableDistancesComputationOnGPU&&(this.computeDistancesOnGPUSyncTimeout&&(clearTimeout(this.computeDistancesOnGPUSyncTimeout),this.computeDistancesOnGPUSyncTimeout=null),this.disposeDistancesComputationGPUResources()),this.scenes=[],this.distancesTransformFeedback={id:null,vertexShader:null,fragmentShader:null,program:null,centersBuffer:null,sceneIndexesBuffer:null,outDistancesBuffer:null,centersLoc:-1,modelViewProjLoc:-1,sceneIndexesLoc:-1,transformsLocs:[]},this.renderer=null,this.globalSplatIndexToLocalSplatIndexMap=[],this.globalSplatIndexToSceneIndexMap=[],this.lastBuildSplatCount=0,this.lastBuildScenes=[],this.lastBuildMaxSplatCount=0,this.lastBuildSceneCount=0,this.firstRenderTime=-1,this.finalBuild=!1,this.webGLUtils=null,this.boundingBox=new $t,this.calculatedSceneCenter=new I,this.maxSplatDistanceFromSceneCenter=0,this.visibleRegionBufferRadius=0,this.visibleRegionRadius=0,this.visibleRegionFadeStartRadius=0,this.visibleRegionChanging=!1,this.splatScale=1,this.pointCloudModeEnabled=!1,this.disposed=!0,this.lastRenderer=null,this.visible=!1}disposeMeshData(){this.geometry&&this.geometry!==fi&&(this.geometry.dispose(),this.geometry=null),this.material&&(this.material.dispose(),this.material=null)}disposeTextures(){for(let t in this.splatDataTextures)if(this.splatDataTextures.hasOwnProperty(t)){const s=this.splatDataTextures[t];s.texture&&(s.texture.dispose(),s.texture=null)}this.splatDataTextures=null}disposeSplatTree(){this.splatTree&&(this.splatTree.dispose(),this.splatTree=null),this.baseSplatTree&&(this.baseSplatTree.dispose(),this.baseSplatTree=null)}getSplatTree(){return this.splatTree}onSplatTreeReady(t){this.onSplatTreeReadyCallback=t}getDataForDistancesComputation(t,s){const n=this.integerBasedDistancesComputation?this.getIntegerCenters(t,s,!0):this.getFloatCenters(t,s,!0),r=this.getSceneIndexes(t,s);return{centers:n,sceneIndexes:r}}refreshGPUDataFromSplatBuffers(t){const s=this.getSplatCount(!0);this.refreshDataTexturesFromSplatBuffers(t);const n=t?this.lastBuildSplatCount:0,{centers:r,sceneIndexes:i}=this.getDataForDistancesComputation(n,s-1);return this.enableDistancesComputationOnGPU&&this.refreshGPUBuffersForDistancesComputation(r,i,t),{from:n,to:s-1,count:s-n,centers:r,sceneIndexes:i}}refreshGPUBuffersForDistancesComputation(t,s,n=!1){const r=n?this.lastBuildSplatCount:0;this.updateGPUCentersBufferForDistancesComputation(n,t,r),this.updateGPUTransformIndexesBufferForDistancesComputation(n,s,r)}refreshDataTexturesFromSplatBuffers(t){const s=this.getSplatCount(!0),n=this.lastBuildSplatCount,r=s-1;t?this.updateBaseDataFromSplatBuffers(n,r):(this.setupDataTextures(),this.updateBaseDataFromSplatBuffers()),this.updateDataTexturesFromBaseData(n,r),this.updateVisibleRegion(t)}setupDataTextures(){const t=this.getMaxSplatCount(),s=this.getSplatCount(!0);this.disposeTextures();const n=(w,B)=>{const E=new q(4096,1024);for(;E.x*E.y*w<t*B;)E.y*=2;return E},r=w=>w>=1?Hh:_h,i=w=>{const B=r(w),E=n(B,6);return{elementsPerTexelStored:B,texSize:E}};let a=this.getTargetCovarianceCompressionLevel();const l=0,c=this.getTargetSphericalHarmonicsCompressionLevel();let d,h,u;if(this.splatRenderMode===nt.ThreeD){const w=i(a);w.texSize.x*w.texSize.y>Ai&&a===0&&(a=1),d=new Float32Array(t*Bs)}else h=new Float32Array(t*3),u=new Float32Array(t*4);const p=new Float32Array(t*3),f=new Uint8Array(t*4);let m=Float32Array;c===1?m=Uint16Array:c===2&&(m=Uint8Array);const g=Ot(this.minSphericalHarmonicsDegree),C=this.minSphericalHarmonicsDegree?new m(t*g):void 0,A=n(In,4),x=new Uint32Array(A.x*A.y*In);Fe.updateCenterColorsPaddedData(0,s-1,p,f,x);const v=new ct(x,A.x,A.y,gn,qt);if(v.internalFormat="RGBA32UI",v.needsUpdate=!0,this.material.uniforms.centersColorsTexture.value=v,this.material.uniforms.centersColorsTextureSize.value.copy(A),this.material.uniformsNeedUpdate=!0,this.splatDataTextures={baseData:{covariances:d,scales:h,rotations:u,centers:p,colors:f,sphericalHarmonics:C},centerColors:{data:x,texture:v,size:A}},this.splatRenderMode===nt.ThreeD){const w=i(a),B=w.elementsPerTexelStored,E=w.texSize;let R=a>=1?Uint32Array:Float32Array;const L=a>=1?Uh:Lh,M=new R(E.x*E.y*L);a===0?M.set(d):Fe.updatePaddedCompressedCovariancesTextureData(d,M,0,0,d.length);let F;if(a>=1)F=new ct(M,E.x,E.y,gn,qt),F.internalFormat="RGBA32UI",this.material.uniforms.covariancesTextureHalfFloat.value=F;else{F=new ct(M,E.x,E.y,Ms,jr),this.material.uniforms.covariancesTexture.value=F;const H=new ct(new Uint32Array(32),2,2,gn,qt);H.internalFormat="RGBA32UI",this.material.uniforms.covariancesTextureHalfFloat.value=H,H.needsUpdate=!0}F.needsUpdate=!0,this.material.uniforms.covariancesAreHalfFloat.value=a>=1?1:0,this.material.uniforms.covariancesTextureSize.value.copy(E),this.splatDataTextures.covariances={data:M,texture:F,size:E,compressionLevel:a,elementsPerTexelStored:B,elementsPerTexelAllocated:L}}else{const B=n(Tn,6);let E=Float32Array,R=jr;const L=new E(B.x*B.y*Tn);Fe.updateScaleRotationsPaddedData(0,s-1,h,u,L);const M=new ct(L,B.x,B.y,Ms,R);M.needsUpdate=!0,this.material.uniforms.scaleRotationsTexture.value=M,this.material.uniforms.scaleRotationsTextureSize.value.copy(B),this.splatDataTextures.scaleRotations={data:L,texture:M,size:B,compressionLevel:l}}if(C){const w=c===2?wa:Ta;let B=g;B%2!==0&&B++;const E=4,R=Ms;let L=n(E,B);if(L.x*L.y<=Ai){const M=L.x*L.y*E,F=new m(M);for(let k=0;k<s;k++){const Q=g*k,G=B*k;for(let N=0;N<g;N++)F[G+N]=C[Q+N]}const H=new ct(F,L.x,L.y,R,w);H.needsUpdate=!0,this.material.uniforms.sphericalHarmonicsTexture.value=H,this.splatDataTextures.sphericalHarmonics={componentCount:g,paddedComponentCount:B,data:F,textureCount:1,texture:H,size:L,compressionLevel:c,elementsPerTexel:E}}else{const M=g/3;B=M,B%2!==0&&B++,L=n(E,B);const F=L.x*L.y*E,H=[this.material.uniforms.sphericalHarmonicsTextureR,this.material.uniforms.sphericalHarmonicsTextureG,this.material.uniforms.sphericalHarmonicsTextureB],k=[],Q=[];for(let G=0;G<3;G++){const N=new m(F);k.push(N);for(let te=0;te<s;te++){const me=g*te,se=B*te;if(M>=3){for(let K=0;K<3;K++)N[se+K]=C[me+G*3+K];if(M>=8)for(let K=0;K<5;K++)N[se+3+K]=C[me+9+G*5+K]}}const W=new ct(N,L.x,L.y,R,w);Q.push(W),W.needsUpdate=!0,H[G].value=W}this.material.uniforms.sphericalHarmonicsMultiTextureMode.value=1,this.splatDataTextures.sphericalHarmonics={componentCount:g,componentCountPerChannel:M,paddedComponentCount:B,data:k,textureCount:3,textures:Q,size:L,compressionLevel:c,elementsPerTexel:E}}this.material.uniforms.sphericalHarmonicsTextureSize.value.copy(L),this.material.uniforms.sphericalHarmonics8BitMode.value=c===2?1:0;for(let M=0;M<this.scenes.length;M++){const F=this.scenes[M].splatBuffer;this.material.uniforms.sphericalHarmonics8BitCompressionRangeMin.value[M]=F.minSphericalHarmonicsCoeff,this.material.uniforms.sphericalHarmonics8BitCompressionRangeMax.value[M]=F.maxSphericalHarmonicsCoeff}this.material.uniformsNeedUpdate=!0}const S=n(mi,4),T=new Uint32Array(S.x*S.y*mi);for(let w=0;w<s;w++)T[w]=this.globalSplatIndexToSceneIndexMap[w];const y=new ct(T,S.x,S.y,Ca,qt);y.internalFormat="R32UI",y.needsUpdate=!0,this.material.uniforms.sceneIndexesTexture.value=y,this.material.uniforms.sceneIndexesTextureSize.value.copy(S),this.material.uniformsNeedUpdate=!0,this.splatDataTextures.sceneIndexes={data:T,texture:y,size:S},this.material.uniforms.sceneCount.value=this.scenes.length}updateBaseDataFromSplatBuffers(t,s){const n=this.splatDataTextures.covariances,r=n?n.compressionLevel:void 0,i=this.splatDataTextures.scaleRotations,a=i?i.compressionLevel:void 0,l=this.splatDataTextures.sphericalHarmonics,c=l?l.compressionLevel:0;this.fillSplatDataArrays(this.splatDataTextures.baseData.covariances,this.splatDataTextures.baseData.scales,this.splatDataTextures.baseData.rotations,this.splatDataTextures.baseData.centers,this.splatDataTextures.baseData.colors,this.splatDataTextures.baseData.sphericalHarmonics,void 0,r,a,c,t,s,t)}updateDataTexturesFromBaseData(t,s){const n=this.splatDataTextures.covariances,r=n?n.compressionLevel:void 0,i=this.splatDataTextures.scaleRotations,a=i?i.compressionLevel:void 0,l=this.splatDataTextures.sphericalHarmonics,c=l?l.compressionLevel:0,d=this.splatDataTextures.centerColors,h=d.data,u=d.texture;Fe.updateCenterColorsPaddedData(t,s,this.splatDataTextures.baseData.centers,this.splatDataTextures.baseData.colors,h);const p=this.renderer?this.renderer.properties.get(u):null;if(!p||!p.__webglTexture?u.needsUpdate=!0:this.updateDataTexture(h,d.texture,d.size,p,In,Rh,4,t,s),n){const x=n.texture,v=t*Bs,S=s*Bs;if(r===0)for(let y=v;y<=S;y++){const w=this.splatDataTextures.baseData.covariances[y];n.data[y]=w}else Fe.updatePaddedCompressedCovariancesTextureData(this.splatDataTextures.baseData.covariances,n.data,t*n.elementsPerTexelAllocated,v,S);const T=this.renderer?this.renderer.properties.get(x):null;!T||!T.__webglTexture?x.needsUpdate=!0:r===0?this.updateDataTexture(n.data,n.texture,n.size,T,n.elementsPerTexelStored,Bs,4,t,s):this.updateDataTexture(n.data,n.texture,n.size,T,n.elementsPerTexelAllocated,n.elementsPerTexelAllocated,2,t,s)}if(i){const x=i.data,v=i.texture,S=6,T=a===0?4:2;Fe.updateScaleRotationsPaddedData(t,s,this.splatDataTextures.baseData.scales,this.splatDataTextures.baseData.rotations,x);const y=this.renderer?this.renderer.properties.get(v):null;!y||!y.__webglTexture?v.needsUpdate=!0:this.updateDataTexture(x,i.texture,i.size,y,Tn,S,T,t,s)}const f=this.splatDataTextures.baseData.sphericalHarmonics;if(f){let x=4;c===1?x=2:c===2&&(x=1);const v=(y,w,B,E,R)=>{const L=this.renderer?this.renderer.properties.get(y):null;!L||!L.__webglTexture?y.needsUpdate=!0:this.updateDataTexture(E,y,w,L,B,R,x,t,s)},S=l.componentCount,T=l.paddedComponentCount;if(l.textureCount===1){const y=l.data;for(let w=t;w<=s;w++){const B=S*w,E=T*w;for(let R=0;R<S;R++)y[E+R]=f[B+R]}v(l.texture,l.size,l.elementsPerTexel,y,T)}else{const y=l.componentCountPerChannel;for(let w=0;w<3;w++){const B=l.data[w];for(let E=t;E<=s;E++){const R=S*E,L=T*E;if(y>=3){for(let M=0;M<3;M++)B[L+M]=f[R+w*3+M];if(y>=8)for(let M=0;M<5;M++)B[L+3+M]=f[R+9+w*5+M]}}v(l.textures[w],l.size,l.elementsPerTexel,B,T)}}}const m=this.splatDataTextures.sceneIndexes,g=m.data;for(let x=this.lastBuildSplatCount;x<=s;x++)g[x]=this.globalSplatIndexToSceneIndexMap[x];const C=m.texture,A=this.renderer?this.renderer.properties.get(C):null;!A||!A.__webglTexture?C.needsUpdate=!0:this.updateDataTexture(g,m.texture,m.size,A,1,1,1,this.lastBuildSplatCount,s)}getTargetCovarianceCompressionLevel(){return this.halfPrecisionCovariancesOnGPU?1:0}getTargetSphericalHarmonicsCompressionLevel(){return Math.max(1,this.getMaximumSplatBufferCompressionLevel())}getMaximumSplatBufferCompressionLevel(){let t;for(let s=0;s<this.scenes.length;s++){const r=this.getScene(s).splatBuffer;(s===0||r.compressionLevel>t)&&(t=r.compressionLevel)}return t}getMinimumSplatBufferCompressionLevel(){let t;for(let s=0;s<this.scenes.length;s++){const r=this.getScene(s).splatBuffer;(s===0||r.compressionLevel<t)&&(t=r.compressionLevel)}return t}static computeTextureUpdateRegion(t,s,n,r,i){const a=i/r,l=t*a,c=Math.floor(l/n),d=c*n*r,h=s*a,u=Math.floor(h/n),p=u*n*r+n*r;return{dataStart:d,dataEnd:p,startRow:c,endRow:u}}updateDataTexture(t,s,n,r,i,a,l,c,d){const h=this.renderer.getContext(),u=Fe.computeTextureUpdateRegion(c,d,n.x,i,a),p=u.dataEnd-u.dataStart,f=new t.constructor(t.buffer,u.dataStart*l,p),m=u.endRow-u.startRow+1,g=this.webGLUtils.convert(s.type),C=this.webGLUtils.convert(s.format,s.colorSpace),A=h.getParameter(h.TEXTURE_BINDING_2D);h.bindTexture(h.TEXTURE_2D,r.__webglTexture),h.texSubImage2D(h.TEXTURE_2D,0,0,u.startRow,n.x,m,C,g,f),h.bindTexture(h.TEXTURE_2D,A)}static updatePaddedCompressedCovariancesTextureData(t,s,n,r,i){let a=new DataView(s.buffer),l=n,c=0;for(let d=r;d<=i;d+=2)a.setUint16(l*2,t[d],!0),a.setUint16(l*2+2,t[d+1],!0),l+=2,c++,c>=3&&(l+=2,c=0)}static updateCenterColorsPaddedData(t,s,n,r,i){for(let a=t;a<=s;a++){const l=a*4,c=a*3,d=a*4;i[d]=Ad(r,l),i[d+1]=Cn(n[c]),i[d+2]=Cn(n[c+1]),i[d+3]=Cn(n[c+2])}}static updateScaleRotationsPaddedData(t,s,n,r,i){for(let l=t;l<=s;l++){const c=l*3,d=l*4,h=l*6;i[h]=n[c],i[h+1]=n[c+1],i[h+2]=n[c+2],i[h+3]=r[d],i[h+4]=r[d+1],i[h+5]=r[d+2]}}updateVisibleRegion(t){const s=this.getSplatCount(!0),n=new I;if(!t){const i=new I;this.scenes.forEach(a=>{i.add(a.splatBuffer.sceneCenter)}),i.multiplyScalar(1/this.scenes.length),this.calculatedSceneCenter.copy(i),this.material.uniforms.sceneCenter.value.copy(this.calculatedSceneCenter),this.material.uniformsNeedUpdate=!0}const r=t?this.lastBuildSplatCount:0;for(let i=r;i<s;i++){this.getSplatCenter(i,n,!0);const a=n.sub(this.calculatedSceneCenter).length();a>this.maxSplatDistanceFromSceneCenter&&(this.maxSplatDistanceFromSceneCenter=a)}this.maxSplatDistanceFromSceneCenter-this.visibleRegionBufferRadius>gi&&(this.visibleRegionBufferRadius=this.maxSplatDistanceFromSceneCenter,this.visibleRegionRadius=Math.max(this.visibleRegionBufferRadius-gi,0)),this.finalBuild&&(this.visibleRegionRadius=this.visibleRegionBufferRadius=this.maxSplatDistanceFromSceneCenter),this.updateVisibleRegionFadeDistance()}updateVisibleRegionFadeDistance(t=ts.Default){const s=zh*this.sceneFadeInRateMultiplier,n=kh*this.sceneFadeInRateMultiplier,r=this.finalBuild?s:n,i=t===ts.Default?r:n;this.visibleRegionFadeStartRadius=(this.visibleRegionRadius-this.visibleRegionFadeStartRadius)*i+this.visibleRegionFadeStartRadius;const l=(this.visibleRegionBufferRadius>0?this.visibleRegionFadeStartRadius/this.visibleRegionBufferRadius:0)>.99,c=l||t===ts.Instant?1:0;this.material.uniforms.visibleRegionFadeStartRadius.value=this.visibleRegionFadeStartRadius,this.material.uniforms.visibleRegionRadius.value=this.visibleRegionRadius,this.material.uniforms.firstRenderTime.value=this.firstRenderTime,this.material.uniforms.currentTime.value=performance.now(),this.material.uniforms.fadeInComplete.value=c,this.material.uniformsNeedUpdate=!0,this.visibleRegionChanging=!l}updateRenderIndexes(t,s){const n=this.geometry;n.attributes.splatIndex.set(t),n.attributes.splatIndex.needsUpdate=!0,s>0&&this.firstRenderTime===-1&&(this.firstRenderTime=performance.now()),n.instanceCount=s,n.setDrawRange(0,s)}updateTransforms(){for(let t=0;t<this.scenes.length;t++)this.getScene(t).updateTransform(this.dynamicMode)}setSplatScale(t=1){this.splatScale=t,this.material.uniforms.splatScale.value=t,this.material.uniformsNeedUpdate=!0}getSplatScale(){return this.splatScale}setPointCloudModeEnabled(t){this.pointCloudModeEnabled=t,this.material.uniforms.pointCloudModeEnabled.value=t?1:0,this.material.uniformsNeedUpdate=!0}getPointCloudModeEnabled(){return this.pointCloudModeEnabled}getSplatDataTextures(){return this.splatDataTextures}getSplatCount(t=!1){return t?Fe.getTotalSplatCountForScenes(this.scenes):this.lastBuildSplatCount}static getTotalSplatCountForScenes(t){let s=0;for(let n of t)n&&n.splatBuffer&&(s+=n.splatBuffer.getSplatCount());return s}static getTotalSplatCountForSplatBuffers(t){let s=0;for(let n of t)s+=n.getSplatCount();return s}getMaxSplatCount(){return Fe.getTotalMaxSplatCountForScenes(this.scenes)}static getTotalMaxSplatCountForScenes(t){let s=0;for(let n of t)n&&n.splatBuffer&&(s+=n.splatBuffer.getMaxSplatCount());return s}static getTotalMaxSplatCountForSplatBuffers(t){let s=0;for(let n of t)s+=n.getMaxSplatCount();return s}disposeDistancesComputationGPUResources(){if(!this.renderer)return;const t=this.renderer.getContext();this.distancesTransformFeedback.vao&&(t.deleteVertexArray(this.distancesTransformFeedback.vao),this.distancesTransformFeedback.vao=null),this.distancesTransformFeedback.program&&(t.deleteProgram(this.distancesTransformFeedback.program),t.deleteShader(this.distancesTransformFeedback.vertexShader),t.deleteShader(this.distancesTransformFeedback.fragmentShader),this.distancesTransformFeedback.program=null,this.distancesTransformFeedback.vertexShader=null,this.distancesTransformFeedback.fragmentShader=null),this.disposeDistancesComputationGPUBufferResources(),this.distancesTransformFeedback.id&&(t.deleteTransformFeedback(this.distancesTransformFeedback.id),this.distancesTransformFeedback.id=null)}disposeDistancesComputationGPUBufferResources(){if(!this.renderer)return;const t=this.renderer.getContext();this.distancesTransformFeedback.centersBuffer&&(this.distancesTransformFeedback.centersBuffer=null,t.deleteBuffer(this.distancesTransformFeedback.centersBuffer)),this.distancesTransformFeedback.outDistancesBuffer&&(t.deleteBuffer(this.distancesTransformFeedback.outDistancesBuffer),this.distancesTransformFeedback.outDistancesBuffer=null)}setRenderer(t){if(t!==this.renderer){this.renderer=t;const s=this.renderer.getContext(),n=new Fh(s),r=new Mh(s,n,{});if(n.init(r),this.webGLUtils=new Sa(s,n),this.enableDistancesComputationOnGPU&&this.getSplatCount()>0){this.setupDistancesComputationTransformFeedback();const{centers:i,sceneIndexes:a}=this.getDataForDistancesComputation(0,this.getSplatCount()-1);this.refreshGPUBuffersForDistancesComputation(i,a)}}}updateGPUCentersBufferForDistancesComputation(t,s,n){if(!this.renderer)return;const r=this.renderer.getContext(),i=r.getParameter(r.VERTEX_ARRAY_BINDING);r.bindVertexArray(this.distancesTransformFeedback.vao);const a=this.integerBasedDistancesComputation?Uint32Array:Float32Array,l=16,c=n*l;if(r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.centersBuffer),t)r.bufferSubData(r.ARRAY_BUFFER,c,s);else{const d=new a(this.getMaxSplatCount()*l);d.set(s),r.bufferData(r.ARRAY_BUFFER,d,r.STATIC_DRAW)}r.bindBuffer(r.ARRAY_BUFFER,null),i&&r.bindVertexArray(i)}updateGPUTransformIndexesBufferForDistancesComputation(t,s,n){if(!this.renderer||!this.dynamicMode)return;const r=this.renderer.getContext(),i=r.getParameter(r.VERTEX_ARRAY_BINDING);r.bindVertexArray(this.distancesTransformFeedback.vao);const a=n*4;if(r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.sceneIndexesBuffer),t)r.bufferSubData(r.ARRAY_BUFFER,a,s);else{const l=new Uint32Array(this.getMaxSplatCount()*4);l.set(s),r.bufferData(r.ARRAY_BUFFER,l,r.STATIC_DRAW)}r.bindBuffer(r.ARRAY_BUFFER,null),i&&r.bindVertexArray(i)}getSceneIndexes(t,s){let n;const r=s-t+1;n=new Uint32Array(r);for(let i=t;i<=s;i++)n[i]=this.globalSplatIndexToSceneIndexMap[i];return n}getLocalSplatParameters(t,s,n){n==null&&(n=!this.dynamicMode),s.splatBuffer=this.getSplatBufferForSplat(t),s.localIndex=this.getSplatLocalIndex(t),s.sceneTransform=n?this.getSceneTransformForSplat(t):null}fillSplatDataArrays(t,s,n,r,i,a,l,c=0,d=0,h=1,u,p,f=0,m){const g=new I;g.x=void 0,g.y=void 0,this.splatRenderMode===nt.ThreeD?g.z=void 0:g.z=1;const C=new ee;let A=0,x=this.scenes.length-1;m!=null&&m>=0&&m<=this.scenes.length&&(A=m,x=m);for(let v=A;v<=x;v++){l==null&&(l=!this.dynamicMode);const S=this.getScene(v),T=S.splatBuffer;let y;if(l&&(this.getSceneTransform(v,C),y=C),t&&T.fillSplatCovarianceArray(t,y,u,p,f,c),s||n){if(!s||!n)throw new Error('SplatMesh::fillSplatDataArrays() -> "scales" and "rotations" must both be valid.');T.fillSplatScaleRotationArray(s,n,y,u,p,f,d,g)}r&&T.fillSplatCenterArray(r,y,u,p,f),i&&T.fillSplatColorArray(i,S.minimumAlpha,u,p,f),a&&T.fillSphericalHarmonicsArray(a,this.minSphericalHarmonicsDegree,y,u,p,f,h),f+=T.getSplatCount()}}getIntegerCenters(t,s,n=!1){const r=s-t+1,i=new Float32Array(r*3);this.fillSplatDataArrays(null,null,null,i,null,null,void 0,void 0,void 0,void 0,t);let a,l=n?4:3;a=new Int32Array(r*l);for(let c=0;c<r;c++){for(let d=0;d<3;d++)a[c*l+d]=Math.round(i[c*3+d]*1e3);n&&(a[c*l+3]=1e3)}return a}getFloatCenters(t,s,n=!1){const r=s-t+1,i=new Float32Array(r*3);if(this.fillSplatDataArrays(null,null,null,i,null,null,void 0,void 0,void 0,void 0,t),!n)return i;let a=new Float32Array(r*4);for(let l=0;l<r;l++){for(let c=0;c<3;c++)a[l*4+c]=i[l*3+c];a[l*4+3]=1}return a}getSceneTransform(t,s){const n=this.getScene(t);n.updateTransform(this.dynamicMode),s.copy(n.transform)}getScene(t){if(t<0||t>=this.scenes.length)throw new Error("SplatMesh::getScene() -> Invalid scene index.");return this.scenes[t]}getSceneCount(){return this.scenes.length}getSplatBufferForSplat(t){return this.getScene(this.globalSplatIndexToSceneIndexMap[t]).splatBuffer}getSceneIndexForSplat(t){return this.globalSplatIndexToSceneIndexMap[t]}getSceneTransformForSplat(t){return this.getScene(this.globalSplatIndexToSceneIndexMap[t]).transform}getSplatLocalIndex(t){return this.globalSplatIndexToLocalSplatIndexMap[t]}static getIntegerMatrixArray(t){const s=t.elements,n=[];for(let r=0;r<16;r++)n[r]=Math.round(s[r]*1e3);return n}computeBoundingBox(t=!1,s){let n=this.getSplatCount();if(s!=null){if(s<0||s>=this.scenes.length)throw new Error("SplatMesh::computeBoundingBox() -> Invalid scene index.");n=this.scenes[s].splatBuffer.getSplatCount()}const r=new Float32Array(n*3);this.fillSplatDataArrays(null,null,null,r,null,null,t,void 0,void 0,void 0,void 0,s);const i=new I,a=new I;for(let l=0;l<n;l++){const c=l*3,d=r[c],h=r[c+1],u=r[c+2];(l===0||d<i.x)&&(i.x=d),(l===0||h<i.y)&&(i.y=h),(l===0||u<i.z)&&(i.z=u),(l===0||d>a.x)&&(a.x=d),(l===0||h>a.y)&&(a.y=h),(l===0||u>a.z)&&(a.z=u)}return new $t(i,a)}}var jh="AGFzbQEAAAAADwhkeWxpbmsuMAEEAAAAAAEbA2AAAGAQf39/f39/f39/f39/f39/fwBgAAF/AhIBA2VudgZtZW1vcnkCAwCAgAQDBAMAAQIHVAQRX193YXNtX2NhbGxfY3RvcnMAABhfX3dhc21fYXBwbHlfZGF0YV9yZWxvY3MAAAtzb3J0SW5kZXhlcwABE2Vtc2NyaXB0ZW5fdGxzX2luaXQAAgqWEAMDAAELihAEAXwDewN/A30gCyAKayEMAkACQCAOBEAgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQMgDCEBA0AgAyABQQJ0IgVqIAIgACAFaigCAEECdGooAgAiBTYCACAFIAogBSAKSBshCiAFIA0gBSANShshDSABQQFqIgEgC0cNAAsMAwsgDwRAIAsgDE0NAkF/IQ9B+P///wchCkGIgICAeCENIAwhAgNAIA8gByAAIAJBAnQiFWooAgAiFkECdGooAgAiFEcEQAJ/IAX9CQI4IAggFEEGdGoiDv0JAgwgDioCHP0gASAOKgIs/SACIA4qAjz9IAP95gEgBf0JAiggDv0JAgggDioCGP0gASAOKgIo/SACIA4qAjj9IAP95gEgBf0JAgggDv0JAgAgDioCEP0gASAOKgIg/SACIA4qAjD9IAP95gEgBf0JAhggDv0JAgQgDioCFP0gASAOKgIk/SACIA4qAjT9IAP95gH95AH95AH95AEiEf1f/QwAAAAAAECPQAAAAAAAQI9AIhL98gEiE/0hASIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshDgJ/IBP9IQAiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgL/REgDv0cAQJ/IBEgEf0NCAkKCwwNDg8AAAAAAAAAAP1fIBL98gEiEf0hACIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAv9HAICfyAR/SEBIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4C/0cAyESIBQhDwsgAyAVaiABIBZBBHRq/QAAACAS/bUBIhH9GwAgEf0bAWogEf0bAmogEf0bA2oiDjYCACAOIAogCiAOShshCiAOIA0gDSAOSBshDSACQQFqIgIgC0cNAAsMAwsCfyAFKgIIu/0UIAUqAhi7/SIB/QwAAAAAAECPQAAAAAAAQI9A/fIBIhH9IQEiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIQ4CfyAR/SEAIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyECAn8gBSoCKLtEAAAAAABAj0CiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEFQfj///8HIQpBiICAgHghDSALIAxNDQIgAv0RIA79HAEgBf0cAiESIAwhBQNAIAMgBUECdCICaiABIAAgAmooAgBBBHRq/QAAACAS/bUBIhH9GwAgEf0bAWogEf0bAmoiAjYCACACIAogAiAKSBshCiACIA0gAiANShshDSAFQQFqIgUgC0cNAAsMAgsgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQIgDCEBA0AgAyABQQJ0IgVqAn8gAiAAIAVqKAIAQQJ0aioCALtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyIONgIAIAogDiAKIA5IGyEKIA0gDiANIA5KGyENIAFBAWoiASALRw0ACwwCCyAPRQRAIAsgDE0NASAFKgIoIRcgBSoCGCEYIAUqAgghGUH4////ByEKQYiAgIB4IQ0gDCEFA0ACfyAXIAEgACAFQQJ0IgdqKAIAQQR0aiICKgIIlCAZIAIqAgCUIBggAioCBJSSkrtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEOIAMgB2ogDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSAFQQFqIgUgC0cNAAsMAgsgCyAMTQ0AQX8hD0H4////ByEKQYiAgIB4IQ0gDCECA0AgDyAHIAAgAkECdCIUaigCAEECdCIVaigCACIORwRAIAX9CQI4IAggDkEGdGoiD/0JAgwgDyoCHP0gASAPKgIs/SACIA8qAjz9IAP95gEgBf0JAiggD/0JAgggDyoCGP0gASAPKgIo/SACIA8qAjj9IAP95gEgBf0JAgggD/0JAgAgDyoCEP0gASAPKgIg/SACIA8qAjD9IAP95gEgBf0JAhggD/0JAgQgDyoCFP0gASAPKgIk/SACIA8qAjT9IAP95gH95AH95AH95AEhESAOIQ8LIAMgFGoCfyAR/R8DIAEgFUECdCIOQQxyaioCAJQgEf0fAiABIA5BCHJqKgIAlCAR/R8AIAEgDmoqAgCUIBH9HwEgASAOQQRyaioCAJSSkpK7RAAAAAAAALBAoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAsiDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSACQQFqIgIgC0cNAAsMAQtBiICAgHghDUH4////ByEKCyALIAxLBEAgCUEBa7MgDbIgCrKTlSEXIAwhDQNAAn8gFyADIA1BAnRqIgEoAgAgCmuylCIYi0MAAABPXQRAIBioDAELQYCAgIB4CyEOIAEgDjYCACAEIA5BAnRqIgEgASgCAEEBajYCACANQQFqIg0gC0cNAAsLIAlBAk8EQCAEKAIAIQ1BASEKA0AgBCAKQQJ0aiIBIAEoAgAgDWoiDTYCACAKQQFqIgogCUcNAAsLIAxBAEoEQCAMIQoDQCAGIApBAWsiAUECdCICaiAAIAJqKAIANgIAIApBAUshAiABIQogAg0ACwsgCyAMSgRAIAshCgNAIAYgCyAEIAMgCkEBayIKQQJ0IgFqKAIAQQJ0aiICKAIAIgVrQQJ0aiAAIAFqKAIANgIAIAIgBUEBazYCACAKIAxKDQALCwsEAEEACw==",Ci="AGFzbQEAAAAADwhkeWxpbmsuMAEEAAAAAAEXAmAAAGAQf39/f39/f39/f39/f39/fwACEgEDZW52Bm1lbW9yeQIDAICABAMDAgABBz4DEV9fd2FzbV9jYWxsX2N0b3JzAAAYX193YXNtX2FwcGx5X2RhdGFfcmVsb2NzAAALc29ydEluZGV4ZXMAAQqiDwICAAucDwMBfAd9Bn8gCyAKayEMAkACQCAOBEAgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQMgDCEFA0AgAyAFQQJ0IgFqIAIgACABaigCAEECdGooAgAiATYCACABIAogASAKSBshCiABIA0gASANShshDSAFQQFqIgUgC0cNAAsMAwsgDwRAIAsgDE0NAkF/IQ9B+P///wchCkGIgICAeCENIAwhAgNAIA8gByAAIAJBAnQiGmooAgBBAnQiG2ooAgAiDkcEQAJ/IAUqAjgiESAIIA5BBnRqIg8qAjyUIAUqAigiEiAPKgI4lCAFKgIIIhMgDyoCMJQgBSoCGCIUIA8qAjSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRgCfyARIA8qAiyUIBIgDyoCKJQgEyAPKgIglCAUIA8qAiSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRkCfyARIA8qAhyUIBIgDyoCGJQgEyAPKgIQlCAUIA8qAhSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRwCfyARIA8qAgyUIBIgDyoCCJQgEyAPKgIAlCAUIA8qAgSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIR0gDiEPCyADIBpqIAEgG0ECdGoiDigCBCAcbCAOKAIAIB1saiAOKAIIIBlsaiAOKAIMIBhsaiIONgIAIA4gCiAKIA5KGyEKIA4gDSANIA5IGyENIAJBAWoiAiALRw0ACwwDCwJ/IAUqAii7RAAAAAAAQI9AoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshAgJ/IAUqAhi7RAAAAAAAQI9AoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshByALIAxNAn8gBSoCCLtEAAAAAABAj0CiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEPQfj///8HIQpBiICAgHghDQ0CIAwhBQNAIAMgBUECdCIIaiABIAAgCGooAgBBBHRqIggoAgQgB2wgCCgCACAPbGogCCgCCCACbGoiCDYCACAIIAogCCAKSBshCiAIIA0gCCANShshDSAFQQFqIgUgC0cNAAsMAgsgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQIgDCEFA0AgAyAFQQJ0IgFqAn8gAiAAIAFqKAIAQQJ0aioCALtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyIONgIAIAogDiAKIA5IGyEKIA0gDiANIA5KGyENIAVBAWoiBSALRw0ACwwCCyAPRQRAIAsgDE0NASAFKgIoIREgBSoCGCESIAUqAgghE0H4////ByEKQYiAgIB4IQ0gDCEFA0ACfyARIAEgACAFQQJ0IgdqKAIAQQR0aiICKgIIlCATIAIqAgCUIBIgAioCBJSSkrtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEOIAMgB2ogDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSAFQQFqIgUgC0cNAAsMAgsgCyAMTQ0AQX8hD0H4////ByEKQYiAgIB4IQ0gDCECA0AgDyAHIAAgAkECdCIYaigCAEECdCIZaigCACIORwRAIAUqAjgiESAIIA5BBnRqIg8qAjyUIAUqAigiEiAPKgI4lCAFKgIIIhMgDyoCMJQgBSoCGCIUIA8qAjSUkpKSIRUgESAPKgIslCASIA8qAiiUIBMgDyoCIJQgFCAPKgIklJKSkiEWIBEgDyoCHJQgEiAPKgIYlCATIA8qAhCUIBQgDyoCFJSSkpIhFyARIA8qAgyUIBIgDyoCCJQgEyAPKgIAlCAUIA8qAgSUkpKSIREgDiEPCyADIBhqAn8gFSABIBlBAnRqIg4qAgyUIBYgDioCCJQgESAOKgIAlCAXIA4qAgSUkpKSu0QAAAAAAACwQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIg42AgAgCiAOIAogDkgbIQogDSAOIA0gDkobIQ0gAkEBaiICIAtHDQALDAELQYiAgIB4IQ1B+P///wchCgsgCyAMSwRAIAlBAWuzIA2yIAqyk5UhESAMIQ0DQAJ/IBEgAyANQQJ0aiIBKAIAIAprspQiEotDAAAAT10EQCASqAwBC0GAgICAeAshDiABIA42AgAgBCAOQQJ0aiIBIAEoAgBBAWo2AgAgDUEBaiINIAtHDQALCyAJQQJPBEAgBCgCACENQQEhCgNAIAQgCkECdGoiASABKAIAIA1qIg02AgAgCkEBaiIKIAlHDQALCyAMQQBKBEAgDCEKA0AgBiAKQQFrIgFBAnQiAmogACACaigCADYCACAKQQFLIAEhCg0ACwsgCyAMSgRAIAshCgNAIAYgCyAEIAMgCkEBayIKQQJ0IgFqKAIAQQJ0aiICKAIAIgVrQQJ0aiAAIAFqKAIANgIAIAIgBUEBazYCACAKIAxKDQALCws=",Nh="AGFzbQEAAAAADwhkeWxpbmsuMAEEAAAAAAEXAmAAAGAQf39/f39/f39/f39/f39/fwACDwEDZW52Bm1lbW9yeQIAAAMDAgABBz4DEV9fd2FzbV9jYWxsX2N0b3JzAAAYX193YXNtX2FwcGx5X2RhdGFfcmVsb2NzAAALc29ydEluZGV4ZXMAAQrrDwICAAvlDwQBfAN7B30DfyALIAprIQwCQAJAIA4EQCANBEBB+P///wchCkGIgICAeCENIAsgDE0NAyAMIQUDQCADIAVBAnQiAWogAiAAIAFqKAIAQQJ0aigCACIBNgIAIAEgCiABIApIGyEKIAEgDSABIA1KGyENIAVBAWoiBSALRw0ACwwDCyAPBEAgCyAMTQ0CQX8hD0H4////ByEKQYiAgIB4IQ0gDCECA0AgDyAHIAAgAkECdCIcaigCACIdQQJ0aigCACIbRwRAAn8gBf0JAjggCCAbQQZ0aiIO/QkCDCAOKgIc/SABIA4qAiz9IAIgDioCPP0gA/3mASAF/QkCKCAO/QkCCCAOKgIY/SABIA4qAij9IAIgDioCOP0gA/3mASAF/QkCCCAO/QkCACAOKgIQ/SABIA4qAiD9IAIgDioCMP0gA/3mASAF/QkCGCAO/QkCBCAOKgIU/SABIA4qAiT9IAIgDioCNP0gA/3mAf3kAf3kAf3kASIR/V/9DAAAAAAAQI9AAAAAAABAj0AiEv3yASIT/SEBIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEOAn8gE/0hACIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAv9ESAO/RwBAn8gESAR/Q0ICQoLDA0ODwABAgMAAQID/V8gEv3yASIR/SEAIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4C/0cAgJ/IBH9IQEiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgL/RwDIRIgGyEPCyADIBxqIAEgHUEEdGr9AAAAIBL9tQEiEf0bACAR/RsBaiAR/RsCaiAR/RsDaiIONgIAIA4gCiAKIA5KGyEKIA4gDSANIA5IGyENIAJBAWoiAiALRw0ACwwDCwJ/IAUqAgi7/RQgBSoCGLv9IgH9DAAAAAAAQI9AAAAAAABAj0D98gEiEf0hASIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshDgJ/IBH9IQAiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLAn8gBSoCKLtEAAAAAABAj0CiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEFQfj///8HIQpBiICAgHghDSALIAxNDQL9ESAO/RwBIAX9HAIhEiAMIQUDQCADIAVBAnQiAmogASAAIAJqKAIAQQR0av0AAAAgEv21ASIR/RsAIBH9GwFqIBH9GwJqIgI2AgAgAiAKIAIgCkgbIQogAiANIAIgDUobIQ0gBUEBaiIFIAtHDQALDAILIA0EQEH4////ByEKQYiAgIB4IQ0gCyAMTQ0CIAwhBQNAIAMgBUECdCIBagJ/IAIgACABaigCAEECdGoqAgC7RAAAAAAAALBAoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAsiDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSAFQQFqIgUgC0cNAAsMAgsgD0UEQCALIAxNDQEgBSoCKCEUIAUqAhghFSAFKgIIIRZB+P///wchCkGIgICAeCENIAwhBQNAAn8gFCABIAAgBUECdCIHaigCAEEEdGoiAioCCJQgFiACKgIAlCAVIAIqAgSUkpK7RAAAAAAAALBAoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshDiADIAdqIA42AgAgCiAOIAogDkgbIQogDSAOIA0gDkobIQ0gBUEBaiIFIAtHDQALDAILIAsgDE0NAEF/IQ9B+P///wchCkGIgICAeCENIAwhAgNAIA8gByAAIAJBAnQiG2ooAgBBAnQiHGooAgAiDkcEQCAFKgI4IhQgCCAOQQZ0aiIPKgI8lCAFKgIoIhUgDyoCOJQgBSoCCCIWIA8qAjCUIAUqAhgiFyAPKgI0lJKSkiEYIBQgDyoCLJQgFSAPKgIolCAWIA8qAiCUIBcgDyoCJJSSkpIhGSAUIA8qAhyUIBUgDyoCGJQgFiAPKgIQlCAXIA8qAhSUkpKSIRogFCAPKgIMlCAVIA8qAgiUIBYgDyoCAJQgFyAPKgIElJKSkiEUIA4hDwsgAyAbagJ/IBggASAcQQJ0aiIOKgIMlCAZIA4qAgiUIBQgDioCAJQgGiAOKgIElJKSkrtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyIONgIAIAogDiAKIA5IGyEKIA0gDiANIA5KGyENIAJBAWoiAiALRw0ACwwBC0GIgICAeCENQfj///8HIQoLIAsgDEsEQCAJQQFrsyANsiAKspOVIRQgDCENA0ACfyAUIAMgDUECdGoiASgCACAKa7KUIhWLQwAAAE9dBEAgFagMAQtBgICAgHgLIQ4gASAONgIAIAQgDkECdGoiASABKAIAQQFqNgIAIA1BAWoiDSALRw0ACwsgCUECTwRAIAQoAgAhDUEBIQoDQCAEIApBAnRqIgEgASgCACANaiINNgIAIApBAWoiCiAJRw0ACwsgDEEASgRAIAwhCgNAIAYgCkEBayIBQQJ0IgJqIAAgAmooAgA2AgAgCkEBSyABIQoNAAsLIAsgDEoEQCALIQoDQCAGIAsgBCADIApBAWsiCkECdCIBaigCAEECdGoiAigCACIFa0ECdGogACABaigCADYCACACIAVBAWs2AgAgCiAMSg0ACwsL",Qh="AGFzbQEAAAAADwhkeWxpbmsuMAEEAAAAAAEXAmAAAGAQf39/f39/f39/f39/f39/fwACDwEDZW52Bm1lbW9yeQIAAAMDAgABBz4DEV9fd2FzbV9jYWxsX2N0b3JzAAAYX193YXNtX2FwcGx5X2RhdGFfcmVsb2NzAAALc29ydEluZGV4ZXMAAQqiDwICAAucDwMBfAd9Bn8gCyAKayEMAkACQCAOBEAgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQMgDCEFA0AgAyAFQQJ0IgFqIAIgACABaigCAEECdGooAgAiATYCACABIAogASAKSBshCiABIA0gASANShshDSAFQQFqIgUgC0cNAAsMAwsgDwRAIAsgDE0NAkF/IQ9B+P///wchCkGIgICAeCENIAwhAgNAIA8gByAAIAJBAnQiGmooAgBBAnQiG2ooAgAiDkcEQAJ/IAUqAjgiESAIIA5BBnRqIg8qAjyUIAUqAigiEiAPKgI4lCAFKgIIIhMgDyoCMJQgBSoCGCIUIA8qAjSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRgCfyARIA8qAiyUIBIgDyoCKJQgEyAPKgIglCAUIA8qAiSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRkCfyARIA8qAhyUIBIgDyoCGJQgEyAPKgIQlCAUIA8qAhSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRwCfyARIA8qAgyUIBIgDyoCCJQgEyAPKgIAlCAUIA8qAgSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIR0gDiEPCyADIBpqIAEgG0ECdGoiDigCBCAcbCAOKAIAIB1saiAOKAIIIBlsaiAOKAIMIBhsaiIONgIAIA4gCiAKIA5KGyEKIA4gDSANIA5IGyENIAJBAWoiAiALRw0ACwwDCwJ/IAUqAii7RAAAAAAAQI9AoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshAgJ/IAUqAhi7RAAAAAAAQI9AoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshByALIAxNAn8gBSoCCLtEAAAAAABAj0CiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEPQfj///8HIQpBiICAgHghDQ0CIAwhBQNAIAMgBUECdCIIaiABIAAgCGooAgBBBHRqIggoAgQgB2wgCCgCACAPbGogCCgCCCACbGoiCDYCACAIIAogCCAKSBshCiAIIA0gCCANShshDSAFQQFqIgUgC0cNAAsMAgsgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQIgDCEFA0AgAyAFQQJ0IgFqAn8gAiAAIAFqKAIAQQJ0aioCALtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyIONgIAIAogDiAKIA5IGyEKIA0gDiANIA5KGyENIAVBAWoiBSALRw0ACwwCCyAPRQRAIAsgDE0NASAFKgIoIREgBSoCGCESIAUqAgghE0H4////ByEKQYiAgIB4IQ0gDCEFA0ACfyARIAEgACAFQQJ0IgdqKAIAQQR0aiICKgIIlCATIAIqAgCUIBIgAioCBJSSkrtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEOIAMgB2ogDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSAFQQFqIgUgC0cNAAsMAgsgCyAMTQ0AQX8hD0H4////ByEKQYiAgIB4IQ0gDCECA0AgDyAHIAAgAkECdCIYaigCAEECdCIZaigCACIORwRAIAUqAjgiESAIIA5BBnRqIg8qAjyUIAUqAigiEiAPKgI4lCAFKgIIIhMgDyoCMJQgBSoCGCIUIA8qAjSUkpKSIRUgESAPKgIslCASIA8qAiiUIBMgDyoCIJQgFCAPKgIklJKSkiEWIBEgDyoCHJQgEiAPKgIYlCATIA8qAhCUIBQgDyoCFJSSkpIhFyARIA8qAgyUIBIgDyoCCJQgEyAPKgIAlCAUIA8qAgSUkpKSIREgDiEPCyADIBhqAn8gFSABIBlBAnRqIg4qAgyUIBYgDioCCJQgESAOKgIAlCAXIA4qAgSUkpKSu0QAAAAAAACwQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIg42AgAgCiAOIAogDkgbIQogDSAOIA0gDkobIQ0gAkEBaiICIAtHDQALDAELQYiAgIB4IQ1B+P///wchCgsgCyAMSwRAIAlBAWuzIA2yIAqyk5UhESAMIQ0DQAJ/IBEgAyANQQJ0aiIBKAIAIAprspQiEotDAAAAT10EQCASqAwBC0GAgICAeAshDiABIA42AgAgBCAOQQJ0aiIBIAEoAgBBAWo2AgAgDUEBaiINIAtHDQALCyAJQQJPBEAgBCgCACENQQEhCgNAIAQgCkECdGoiASABKAIAIA1qIg02AgAgCkEBaiIKIAlHDQALCyAMQQBKBEAgDCEKA0AgBiAKQQFrIgFBAnQiAmogACACaigCADYCACAKQQFLIAEhCg0ACwsgCyAMSgRAIAshCgNAIAYgCyAEIAMgCkEBayIKQQJ0IgFqKAIAQQJ0aiICKAIAIgVrQQJ0aiAAIAFqKAIANgIAIAIgBUEBazYCACAKIAxKDQALCws=";function Vh(o){let e,t,s,n,r,i,a,l,c,d,h,u,p,f,m,g,C,A,x,v;function S(T,y,w,B,E,R,L){const M=performance.now();if(!s&&(new Uint32Array(t,a,E.byteLength/v.BytesPerInt).set(E),new Float32Array(t,d,L.byteLength/v.BytesPerFloat).set(L),B)){let G;n?G=new Int32Array(t,h,R.byteLength/v.BytesPerInt):G=new Float32Array(t,h,R.byteLength/v.BytesPerFloat),G.set(R)}g||(g=new Uint32Array(A)),new Float32Array(t,m,16).set(w),new Uint32Array(t,p,A).set(g),e.exports.sortIndexes(a,f,h,u,p,m,l,c,d,A,T,y,i,B,n,r);const F={sortDone:!0,splatSortCount:T,splatRenderCount:y,sortTime:0};if(!s){const k=new Uint32Array(t,l,y);(!C||C.length<y)&&(C=new Uint32Array(y)),C.set(k),F.sortedIndexes=C}const H=performance.now();F.sortTime=H-M,o.postMessage(F)}o.onmessage=T=>{if(T.data.centers)centers=T.data.centers,sceneIndexes=T.data.sceneIndexes,n?new Int32Array(t,f+T.data.range.from*v.BytesPerInt*4,T.data.range.count*4).set(new Int32Array(centers)):new Float32Array(t,f+T.data.range.from*v.BytesPerFloat*4,T.data.range.count*4).set(new Float32Array(centers)),r&&new Uint32Array(t,c+T.data.range.from*4,T.data.range.count).set(new Uint32Array(sceneIndexes)),x=T.data.range.from+T.data.range.count;else if(T.data.sort){const y=Math.min(T.data.sort.splatRenderCount||0,x),w=Math.min(T.data.sort.splatSortCount||0,x),B=T.data.sort.usePrecomputedDistances;let E,R,L;s||(E=T.data.sort.indexesToSort,L=T.data.sort.transforms,B&&(R=T.data.sort.precomputedDistances)),S(w,y,T.data.sort.modelViewProj,B,E,R,L)}else if(T.data.init){v=T.data.init.Constants,i=T.data.init.splatCount,s=T.data.init.useSharedMemory,n=T.data.init.integerBasedSort,r=T.data.init.dynamicMode,A=T.data.init.distanceMapRange,x=0;const y=n?v.BytesPerInt*4:v.BytesPerFloat*4,w=new Uint8Array(T.data.init.sorterWasmBytes),B=16*v.BytesPerFloat,E=i*v.BytesPerInt,R=i*y,L=B,M=n?i*v.BytesPerInt:i*v.BytesPerFloat,F=i*v.BytesPerInt,H=i*v.BytesPerInt,k=n?A*v.BytesPerInt*2:A*v.BytesPerFloat*2,Q=r?i*v.BytesPerInt:0,G=r?v.MaxScenes*B:0,N=v.MemoryPageSize*32,W=E+R+L+M+F+k+H+Q+G+N,te=Math.floor(W/v.MemoryPageSize)+1,me={module:{},env:{memory:new WebAssembly.Memory({initial:te,maximum:te,shared:!0})}};WebAssembly.compile(w).then(se=>WebAssembly.instantiate(se,me)).then(se=>{e=se,a=0,f=a+E,m=f+R,h=m+L,u=h+M,p=u+F,l=p+k,c=l+H,d=c+Q,t=me.env.memory.buffer,s?o.postMessage({sortSetupPhase1Complete:!0,indexesToSortBuffer:t,indexesToSortOffset:a,sortedIndexesBuffer:t,sortedIndexesOffset:l,precomputedDistancesBuffer:t,precomputedDistancesOffset:h,transformsBuffer:t,transformsOffset:d}):o.postMessage({sortSetupPhase1Complete:!0})})}}}function Gh(o,e,t,s,n,r=$.DefaultSplatSortDistanceMapPrecision){const i=new Worker(URL.createObjectURL(new Blob(["(",Vh.toString(),")(self)"],{type:"application/javascript"})));let a=jh;const l=hr()?po():null;!t&&!e?(a=Ci,l&&l.major<=16&&l.minor<4&&(a=Qh)):t?e||l&&l.major<=16&&l.minor<4&&(a=Nh):a=Ci;const c=atob(a),d=new Uint8Array(c.length);for(let h=0;h<c.length;h++)d[h]=c.charCodeAt(h);return i.postMessage({init:{sorterWasmBytes:d.buffer,splatCount:o,useSharedMemory:e,integerBasedSort:s,dynamicMode:n,distanceMapRange:1<<r,Constants:{BytesPerFloat:$.BytesPerFloat,BytesPerInt:$.BytesPerInt,MemoryPageSize:$.MemoryPageSize,MaxScenes:$.MaxScenes}}}),i}const Pt={None:0,VR:1,AR:2};class Ht{static createButton(e,t={}){const s=document.createElement("button");function n(){let c=null;async function d(p){p.addEventListener("end",h),await e.xr.setSession(p),s.textContent="EXIT VR",c=p}function h(){c.removeEventListener("end",h),s.textContent="ENTER VR",c=null}s.style.display="",s.style.cursor="pointer",s.style.left="calc(50% - 50px)",s.style.width="100px",s.textContent="ENTER VR";const u={...t,optionalFeatures:["local-floor","bounded-floor","layers",...t.optionalFeatures||[]]};s.onmouseenter=function(){s.style.opacity="1.0"},s.onmouseleave=function(){s.style.opacity="0.5"},s.onclick=function(){c===null?navigator.xr.requestSession("immersive-vr",u).then(d):(c.end(),navigator.xr.offerSession!==void 0&&navigator.xr.offerSession("immersive-vr",u).then(d).catch(p=>{console.warn(p)}))},navigator.xr.offerSession!==void 0&&navigator.xr.offerSession("immersive-vr",u).then(d).catch(p=>{console.warn(p)})}function r(){s.style.display="",s.style.cursor="auto",s.style.left="calc(50% - 75px)",s.style.width="150px",s.onmouseenter=null,s.onmouseleave=null,s.onclick=null}function i(){r(),s.textContent="VR NOT SUPPORTED"}function a(c){r(),console.warn("Exception when trying to call xr.isSessionSupported",c),s.textContent="VR NOT ALLOWED"}function l(c){c.style.position="absolute",c.style.bottom="20px",c.style.padding="12px 6px",c.style.border="1px solid #fff",c.style.borderRadius="4px",c.style.background="rgba(0,0,0,0.1)",c.style.color="#fff",c.style.font="normal 13px sans-serif",c.style.textAlign="center",c.style.opacity="0.5",c.style.outline="none",c.style.zIndex="999"}if("xr"in navigator)return s.id="VRButton",s.style.display="none",l(s),navigator.xr.isSessionSupported("immersive-vr").then(function(c){c?n():i(),c&&Ht.xrSessionIsGranted&&s.click()}).catch(a),s;{const c=document.createElement("a");return window.isSecureContext===!1?(c.href=document.location.href.replace(/^http:/,"https:"),c.innerHTML="WEBXR NEEDS HTTPS"):(c.href="https://immersiveweb.dev/",c.innerHTML="WEBXR NOT AVAILABLE"),c.style.left="calc(50% - 90px)",c.style.width="180px",c.style.textDecoration="none",l(c),c}}static registerSessionGrantedListener(){if(typeof navigator<"u"&&"xr"in navigator){if(/WebXRViewer\//i.test(navigator.userAgent))return;navigator.xr.addEventListener("sessiongranted",()=>{Ht.xrSessionIsGranted=!0})}}}Ht.xrSessionIsGranted=!1;Ht.registerSessionGrantedListener();class Wh{static createButton(e,t={}){const s=document.createElement("button");function n(){if(t.domOverlay===void 0){const u=document.createElement("div");u.style.display="none",document.body.appendChild(u);const p=document.createElementNS("http://www.w3.org/2000/svg","svg");p.setAttribute("width",38),p.setAttribute("height",38),p.style.position="absolute",p.style.right="20px",p.style.top="20px",p.addEventListener("click",function(){c.end()}),u.appendChild(p);const f=document.createElementNS("http://www.w3.org/2000/svg","path");f.setAttribute("d","M 12,12 L 28,28 M 28,12 12,28"),f.setAttribute("stroke","#fff"),f.setAttribute("stroke-width",2),p.appendChild(f),t.optionalFeatures===void 0&&(t.optionalFeatures=[]),t.optionalFeatures.push("dom-overlay"),t.domOverlay={root:u}}let c=null;async function d(u){u.addEventListener("end",h),e.xr.setReferenceSpaceType("local"),await e.xr.setSession(u),s.textContent="STOP AR",t.domOverlay.root.style.display="",c=u}function h(){c.removeEventListener("end",h),s.textContent="START AR",t.domOverlay.root.style.display="none",c=null}s.style.display="",s.style.cursor="pointer",s.style.left="calc(50% - 50px)",s.style.width="100px",s.textContent="START AR",s.onmouseenter=function(){s.style.opacity="1.0"},s.onmouseleave=function(){s.style.opacity="0.5"},s.onclick=function(){c===null?navigator.xr.requestSession("immersive-ar",t).then(d):(c.end(),navigator.xr.offerSession!==void 0&&navigator.xr.offerSession("immersive-ar",t).then(d).catch(u=>{console.warn(u)}))},navigator.xr.offerSession!==void 0&&navigator.xr.offerSession("immersive-ar",t).then(d).catch(u=>{console.warn(u)})}function r(){s.style.display="",s.style.cursor="auto",s.style.left="calc(50% - 75px)",s.style.width="150px",s.onmouseenter=null,s.onmouseleave=null,s.onclick=null}function i(){r(),s.textContent="AR NOT SUPPORTED"}function a(c){r(),console.warn("Exception when trying to call xr.isSessionSupported",c),s.textContent="AR NOT ALLOWED"}function l(c){c.style.position="absolute",c.style.bottom="20px",c.style.padding="12px 6px",c.style.border="1px solid #fff",c.style.borderRadius="4px",c.style.background="rgba(0,0,0,0.1)",c.style.color="#fff",c.style.font="normal 13px sans-serif",c.style.textAlign="center",c.style.opacity="0.5",c.style.outline="none",c.style.zIndex="999"}if("xr"in navigator)return s.id="ARButton",s.style.display="none",l(s),navigator.xr.isSessionSupported("immersive-ar").then(function(c){c?n():i()}).catch(a),s;{const c=document.createElement("a");return window.isSecureContext===!1?(c.href=document.location.href.replace(/^http:/,"https:"),c.innerHTML="WEBXR NEEDS HTTPS"):(c.href="https://immersiveweb.dev/",c.innerHTML="WEBXR NOT AVAILABLE"),c.style.left="calc(50% - 90px)",c.style.width="180px",c.style.textDecoration="none",l(c),c}}}const En={Always:0,OnChange:1,Never:2},qh=50,$h=.75,Kh=15e5,Yh=10,Zh=2.5,Xh=60,Ft=class{constructor(e={}){_(this,"onKeyDown",function(){const e=new I,t=new ee,s=new ee;return function(n){switch(e.set(0,0,-1),e.transformDirection(this.camera.matrixWorld),t.makeRotationAxis(e,Math.PI/128),s.makeRotationAxis(e,-Math.PI/128),n.code){case"KeyG":this.focalAdjustment+=.02,this.forceRenderNextFrame();break;case"KeyF":this.focalAdjustment-=.02,this.forceRenderNextFrame();break;case"ArrowLeft":this.camera.up.transformDirection(t);break;case"ArrowRight":this.camera.up.transformDirection(s);break;case"KeyC":this.showMeshCursor=!this.showMeshCursor;break;case"KeyU":this.showControlPlane=!this.showControlPlane;break;case"KeyI":this.showInfo=!this.showInfo,this.showInfo?this.infoPanel.show():this.infoPanel.hide();break;case"KeyO":this.usingExternalCamera||this.setOrthographicMode(!this.camera.isOrthographicCamera);break;case"KeyP":this.usingExternalCamera||this.splatMesh.setPointCloudModeEnabled(!this.splatMesh.getPointCloudModeEnabled());break;case"Equal":this.usingExternalCamera||this.splatMesh.setSplatScale(this.splatMesh.getSplatScale()+.05);break;case"Minus":this.usingExternalCamera||this.splatMesh.setSplatScale(Math.max(this.splatMesh.getSplatScale()-.05,0));break}}}());_(this,"onMouseUp",function(){const e=new q;return function(t){e.copy(this.mousePosition).sub(this.mouseDownPosition),It()-this.mouseDownTime<.5&&e.length()<2&&this.onMouseClick(t)}}());_(this,"checkForFocalPointChange",function(){const e=new q,t=new I,s=[];return function(){if(!this.transitioningCameraTarget&&(this.getRenderDimensions(e),s.length=0,this.raycaster.setFromCameraAndScreenPosition(this.camera,this.mousePosition,e),this.raycaster.intersectSplatMesh(this.splatMesh,s),s.length>0)){const r=s[0].origin;t.copy(r).sub(this.camera.position),t.length()>$h&&(this.previousCameraTarget.copy(this.controls.target),this.nextCameraTarget.copy(r),this.transitioningCameraTarget=!0,this.transitioningCameraTargetStartTime=It())}}}());_(this,"updateSplatMesh",function(){const e=new q;return function(){if(!this.splatMesh)return;if(this.splatMesh.getSplatCount()>0){this.splatMesh.updateVisibleRegionFadeDistance(this.sceneRevealMode),this.splatMesh.updateTransforms(),this.getRenderDimensions(e);const s=this.camera.projectionMatrix.elements[0]*.5*this.devicePixelRatio*e.x,n=this.camera.projectionMatrix.elements[5]*.5*this.devicePixelRatio*e.y,r=this.camera.isOrthographicCamera?1/this.devicePixelRatio:1,i=this.focalAdjustment*r,a=1/i;this.adjustForWebXRStereo(e),this.splatMesh.updateUniforms(e,s*i,n*i,this.camera.isOrthographicCamera,this.camera.zoom||1,a)}}}());_(this,"addSplatBuffers",function(){return function(e,t=[],s=!0,n=!0,r=!0,i=!1,a=!1,l=!0){if(this.isDisposingOrDisposed())return Promise.resolve();let c=null;const d=()=>{c!==null&&(this.loadingSpinner.removeTask(c),c=null)};return this.splatRenderReady=!1,new Promise(h=>{n&&(c=this.loadingSpinner.addTask("Processing splats...")),je(()=>{if(this.isDisposingOrDisposed())h();else{const u=this.addSplatBuffersToMesh(e,t,s,r,i,l),p=this.splatMesh.getMaxSplatCount();this.sortWorker&&this.sortWorker.maxSplatCount!==p&&this.disposeSortWorker(),this.gpuAcceleratedSort||this.preSortMessages.push({centers:u.centers.buffer,sceneIndexes:u.sceneIndexes.buffer,range:{from:u.from,to:u.to,count:u.count}}),(!this.sortWorker&&p>0?this.setupSortWorker(this.splatMesh):Promise.resolve()).then(()=>{this.isDisposingOrDisposed()||this.runSplatSort(!0,!0).then(m=>{!this.sortWorker||!m?(this.splatRenderReady=!0,d(),h()):(a?this.splatRenderReady=!0:this.runAfterNextSort.push(()=>{this.splatRenderReady=!0}),this.runAfterNextSort.push(()=>{d(),h()}))})})}},!0)})}}());_(this,"addSplatBuffersToMesh",function(){let e;return function(t,s,n=!0,r=!1,i=!1,a=!0){if(this.isDisposingOrDisposed())return;let l=[],c=[];i||(l=this.splatMesh.scenes.map(p=>p.splatBuffer)||[],c=this.splatMesh.sceneOptions?this.splatMesh.sceneOptions.map(p=>p):[]),l.push(...t),c.push(...s),this.renderer&&this.splatMesh.setRenderer(this.renderer);const d=p=>{if(this.isDisposingOrDisposed())return;const f=this.splatMesh.getSplatCount();r&&f>=Kh&&!p&&!e&&(this.loadingSpinner.setMinimized(!0,!0),e=this.loadingSpinner.addTask("Optimizing data structures..."))},h=p=>{this.isDisposingOrDisposed()||p&&e&&(this.loadingSpinner.removeTask(e),e=null)},u=this.splatMesh.build(l,c,!0,n,d,h,a);return n&&this.freeIntermediateSplatData&&this.splatMesh.freeIntermediateSplatData(),u}}());_(this,"shouldRender",function(){let e=0;const t=new I,s=new Ae,n=1e-4;return function(){if(!this.initialized||!this.splatRenderReady||this.isDisposingOrDisposed())return!1;let r=!1,i=!1;if(this.camera){const a=this.camera.position,l=this.camera.quaternion;i=Math.abs(a.x-t.x)>n||Math.abs(a.y-t.y)>n||Math.abs(a.z-t.z)>n||Math.abs(l.x-s.x)>n||Math.abs(l.y-s.y)>n||Math.abs(l.z-s.z)>n||Math.abs(l.w-s.w)>n}return r=this.renderMode!==En.Never&&(e===0||this.splatMesh.visibleRegionChanging||i||this.renderMode===En.Always||this.dynamicMode===!0||this.renderNextFrame),this.camera&&(t.copy(this.camera.position),s.copy(this.camera.quaternion)),e++,r}}());_(this,"render",function(){return function(){if(!this.initialized||!this.splatRenderReady||this.isDisposingOrDisposed())return;const e=s=>{for(let n of s.children)if(n.visible)return!0;return!1},t=this.renderer.autoClear;e(this.threeScene)&&(this.renderer.render(this.threeScene,this.camera),this.renderer.autoClear=!1),this.renderer.render(this.splatMesh,this.camera),this.renderer.autoClear=!1,this.sceneHelper.getFocusMarkerOpacity()>0&&this.renderer.render(this.sceneHelper.focusMarker,this.camera),this.showControlPlane&&this.renderer.render(this.sceneHelper.controlPlane,this.camera),this.renderer.autoClear=t}}());_(this,"updateFPS",function(){let e=It(),t=0;return function(){if(this.consecutiveRenderFrames>Xh){const s=It();s-e>=1?(this.currentFPS=t,t=0,e=s):t++}else this.currentFPS=null}}());_(this,"updateForRendererSizeChanges",function(){const e=new q,t=new q;let s;return function(){this.usingExternalCamera||(this.renderer.getSize(t),(s===void 0||s!==this.camera.isOrthographicCamera||t.x!==e.x||t.y!==e.y)&&(this.camera.isOrthographicCamera?(this.camera.left=-t.x/2,this.camera.right=t.x/2,this.camera.top=t.y/2,this.camera.bottom=-t.y/2):this.camera.aspect=t.x/t.y,this.camera.updateProjectionMatrix(),e.copy(t),s=this.camera.isOrthographicCamera))}}());_(this,"timingSensitiveUpdates",function(){let e;return function(){const t=It();e||(e=t);const s=t-e;this.updateCameraTransition(t),this.updateFocusMarker(s),e=t}}());_(this,"updateCameraTransition",function(){let e=new I,t=new I,s=new I;return function(n){if(this.transitioningCameraTarget){t.copy(this.previousCameraTarget).sub(this.camera.position).normalize(),s.copy(this.nextCameraTarget).sub(this.camera.position).normalize();const r=Math.acos(t.dot(s)),a=(r/(Math.PI/3)*.65+.3)/r*(n-this.transitioningCameraTargetStartTime);e.copy(this.previousCameraTarget).lerp(this.nextCameraTarget,a),this.camera.lookAt(e),this.controls.target.copy(e),a>=1&&(this.transitioningCameraTarget=!1)}}}());_(this,"updateFocusMarker",function(){const e=new q;let t=!1;return function(s){if(this.getRenderDimensions(e),this.transitioningCameraTarget){this.sceneHelper.setFocusMarkerVisibility(!0);const n=Math.max(this.sceneHelper.getFocusMarkerOpacity(),0);let r=Math.min(n+Yh*s,1);this.sceneHelper.setFocusMarkerOpacity(r),this.sceneHelper.updateFocusMarker(this.nextCameraTarget,this.camera,e),t=!0,this.forceRenderNextFrame()}else{let n;if(t?n=1:n=Math.min(this.sceneHelper.getFocusMarkerOpacity(),1),n>0){this.sceneHelper.updateFocusMarker(this.nextCameraTarget,this.camera,e);let r=Math.max(n-Zh*s,0);this.sceneHelper.setFocusMarkerOpacity(r),r===0&&this.sceneHelper.setFocusMarkerVisibility(!1)}n>0&&this.forceRenderNextFrame(),t=!1}}}());_(this,"updateMeshCursor",function(){const e=[],t=new q;return function(){this.showMeshCursor?(this.forceRenderNextFrame(),this.getRenderDimensions(t),e.length=0,this.raycaster.setFromCameraAndScreenPosition(this.camera,this.mousePosition,t),this.raycaster.intersectSplatMesh(this.splatMesh,e),e.length>0?(this.sceneHelper.setMeshCursorVisibility(!0),this.sceneHelper.positionAndOrientMeshCursor(e[0].origin,this.camera)):this.sceneHelper.setMeshCursorVisibility(!1)):(this.sceneHelper.getMeschCursorVisibility()&&this.forceRenderNextFrame(),this.sceneHelper.setMeshCursorVisibility(!1))}}());_(this,"updateInfoPanel",function(){const e=new q;return function(){if(!this.showInfo)return;const t=this.splatMesh.getSplatCount();this.getRenderDimensions(e);const s=this.controls?this.controls.target:null,n=this.showMeshCursor?this.sceneHelper.meshCursor.position:null,r=t>0?this.splatRenderCount/t*100:0;this.infoPanel.update(e,this.camera.position,s,this.camera.up,this.camera.isOrthographicCamera,n,this.currentFPS||"N/A",t,this.splatRenderCount,r,this.lastSortTime,this.focalAdjustment,this.splatMesh.getSplatScale(),this.splatMesh.getPointCloudModeEnabled())}}());_(this,"runSplatSort",function(){const e=new ee,t=[],s=new I(0,0,-1),n=new I(0,0,-1),r=new I,i=new I,a=[],l=[{angleThreshold:.55,sortFractions:[.125,.33333,.75]},{angleThreshold:.65,sortFractions:[.33333,.66667]},{angleThreshold:.8,sortFractions:[.5]}];return function(c=!1,d=!1){if(!this.initialized)return Promise.resolve(!1);if(this.sortRunning)return Promise.resolve(!0);if(this.splatMesh.getSplatCount()<=0)return this.splatRenderCount=0,Promise.resolve(!1);let h=0,u=0,p=!1,f=!1;if(n.set(0,0,-1).applyQuaternion(this.camera.quaternion),h=n.dot(s),u=i.copy(this.camera.position).sub(r).length(),!c&&!this.splatMesh.dynamicMode&&a.length===0&&(h<=.99&&(p=!0),u>=1&&(f=!0),!p&&!f))return Promise.resolve(!1);this.sortRunning=!0;let{splatRenderCount:m,shouldSortAll:g}=this.gatherSceneNodesForSort();g=g||d,this.splatRenderCount=m,e.copy(this.camera.matrixWorld).invert();const C=this.perspectiveCamera||this.camera;e.premultiply(C.projectionMatrix),this.splatMesh.dynamicMode||e.multiply(this.splatMesh.matrixWorld);let A=Promise.resolve(!0);return this.gpuAcceleratedSort&&(a.length<=1||a.length%2===0)&&(A=this.splatMesh.computeDistancesOnGPU(e,this.sortWorkerPrecomputedDistances)),A.then(()=>{if(a.length===0)if(this.splatMesh.dynamicMode||g)a.push(this.splatRenderCount);else{for(let S of l)if(h<S.angleThreshold){for(let T of S.sortFractions)a.push(Math.floor(this.splatRenderCount*T));break}a.push(this.splatRenderCount)}let x=Math.min(a.shift(),this.splatRenderCount);this.splatSortCount=x,t[0]=this.camera.position.x,t[1]=this.camera.position.y,t[2]=this.camera.position.z;const v={modelViewProj:e.elements,cameraPosition:t,splatRenderCount:this.splatRenderCount,splatSortCount:x,usePrecomputedDistances:this.gpuAcceleratedSort};return this.splatMesh.dynamicMode&&this.splatMesh.fillTransformsArray(this.sortWorkerTransforms),this.sharedMemoryForWorkers||(v.indexesToSort=this.sortWorkerIndexesToSort,v.transforms=this.sortWorkerTransforms,this.gpuAcceleratedSort&&(v.precomputedDistances=this.sortWorkerPrecomputedDistances)),this.sortPromise=new Promise(S=>{this.sortPromiseResolver=S}),this.preSortMessages.length>0&&(this.preSortMessages.forEach(S=>{this.sortWorker.postMessage(S)}),this.preSortMessages=[]),this.sortWorker.postMessage({sort:v}),a.length===0&&(r.copy(this.camera.position),s.copy(n)),!0}),A}}());_(this,"gatherSceneNodesForSort",function(){const e=[];let t=null;const s=new I,n=new I,r=new I,i=new ee,a=new ee,l=new ee,c=new I,d=new I(0,0,-1),h=new I,u=p=>h.copy(p.max).sub(p.min).length();return function(p=!1){this.getRenderDimensions(c);const f=c.y/2/Math.tan(this.camera.fov/2*Bi.DEG2RAD),m=Math.atan(c.x/2/f),g=Math.atan(c.y/2/f),C=Math.cos(m),A=Math.cos(g),x=this.splatMesh.getSplatTree();if(x){a.copy(this.camera.matrixWorld).invert(),this.splatMesh.dynamicMode||a.multiply(this.splatMesh.matrixWorld);let v=0,S=0;for(let y=0;y<x.subTrees.length;y++){const w=x.subTrees[y];i.copy(a),this.splatMesh.dynamicMode&&(this.splatMesh.getSceneTransform(y,l),i.multiply(l));const B=w.nodesWithIndexes.length;for(let E=0;E<B;E++){const R=w.nodesWithIndexes[E];if(!R.data||!R.data.indexes||R.data.indexes.length===0)continue;r.copy(R.center).applyMatrix4(i);const L=r.length();r.normalize(),s.copy(r).setX(0).normalize(),n.copy(r).setY(0).normalize();const M=d.dot(n),F=d.dot(s),H=u(R),k=F<A-.6,Q=M<C-.6;!p&&(Q||k)&&L>H||(S+=R.data.indexes.length,e[v]=R,R.data.distanceToNode=L,v++)}}e.length=v,e.sort((y,w)=>y.data.distanceToNode<w.data.distanceToNode?-1:1);let T=S*$.BytesPerInt;for(let y=0;y<v;y++){const w=e[y],B=w.data.indexes.length,E=B*$.BytesPerInt;new Uint32Array(this.sortWorkerIndexesToSort.buffer,T-E,B).set(w.data.indexes),T-=E}return{splatRenderCount:S,shouldSortAll:!1}}else{const v=this.splatMesh.getSplatCount();if(!t||t.length!==v){t=new Uint32Array(v);for(let S=0;S<v;S++)t[S]=S}return this.sortWorkerIndexesToSort.set(t),{splatRenderCount:v,shouldSortAll:!0}}}}());if(e.cameraUp||(e.cameraUp=[0,1,0]),this.cameraUp=new I().fromArray(e.cameraUp),e.initialCameraPosition||(e.initialCameraPosition=[0,10,15]),this.initialCameraPosition=new I().fromArray(e.initialCameraPosition),e.initialCameraLookAt||(e.initialCameraLookAt=[0,0,0]),this.initialCameraLookAt=new I().fromArray(e.initialCameraLookAt),this.dropInMode=e.dropInMode||!1,(e.selfDrivenMode===void 0||e.selfDrivenMode===null)&&(e.selfDrivenMode=!0),this.selfDrivenMode=e.selfDrivenMode&&!this.dropInMode,this.selfDrivenUpdateFunc=this.selfDrivenUpdate.bind(this),e.useBuiltInControls===void 0&&(e.useBuiltInControls=!0),this.useBuiltInControls=e.useBuiltInControls,this.rootElement=e.rootElement,this.ignoreDevicePixelRatio=e.ignoreDevicePixelRatio||!1,this.devicePixelRatio=this.ignoreDevicePixelRatio?1:window.devicePixelRatio||1,this.halfPrecisionCovariancesOnGPU=e.halfPrecisionCovariancesOnGPU||!1,this.threeScene=e.threeScene,this.renderer=e.renderer,this.camera=e.camera,this.gpuAcceleratedSort=e.gpuAcceleratedSort||!1,(e.integerBasedSort===void 0||e.integerBasedSort===null)&&(e.integerBasedSort=!0),this.integerBasedSort=e.integerBasedSort,(e.sharedMemoryForWorkers===void 0||e.sharedMemoryForWorkers===null)&&(e.sharedMemoryForWorkers=!0),this.sharedMemoryForWorkers=e.sharedMemoryForWorkers,this.dynamicScene=!!e.dynamicScene,this.antialiased=e.antialiased||!1,this.kernel2DSize=e.kernel2DSize===void 0?.3:e.kernel2DSize,this.webXRMode=e.webXRMode||Pt.None,this.webXRMode!==Pt.None&&(this.gpuAcceleratedSort=!1),this.webXRActive=!1,this.webXRSessionInit=e.webXRSessionInit||{},this.renderMode=e.renderMode||En.Always,this.sceneRevealMode=e.sceneRevealMode||ts.Default,this.focalAdjustment=e.focalAdjustment||1,this.maxScreenSpaceSplatSize=e.maxScreenSpaceSplatSize||1024,this.logLevel=e.logLevel||_t.None,this.sphericalHarmonicsDegree=e.sphericalHarmonicsDegree||0,this.enableOptionalEffects=e.enableOptionalEffects||!1,(e.enableSIMDInSort===void 0||e.enableSIMDInSort===null)&&(e.enableSIMDInSort=!0),this.enableSIMDInSort=e.enableSIMDInSort,(e.inMemoryCompressionLevel===void 0||e.inMemoryCompressionLevel===null)&&(e.inMemoryCompressionLevel=0),this.inMemoryCompressionLevel=e.inMemoryCompressionLevel,(e.optimizeSplatData===void 0||e.optimizeSplatData===null)&&(e.optimizeSplatData=!0),this.optimizeSplatData=e.optimizeSplatData,(e.freeIntermediateSplatData===void 0||e.freeIntermediateSplatData===null)&&(e.freeIntermediateSplatData=!1),this.freeIntermediateSplatData=e.freeIntermediateSplatData,hr()){const s=po();s.major<17&&(this.enableSIMDInSort=!1),s.major<16&&(this.sharedMemoryForWorkers=!1)}(e.splatRenderMode===void 0||e.splatRenderMode===null)&&(e.splatRenderMode=nt.ThreeD),this.splatRenderMode=e.splatRenderMode,this.sceneFadeInRateMultiplier=e.sceneFadeInRateMultiplier||1,this.splatSortDistanceMapPrecision=e.splatSortDistanceMapPrecision||$.DefaultSplatSortDistanceMapPrecision;const t=this.integerBasedSort?20:24;this.splatSortDistanceMapPrecision=pe(this.splatSortDistanceMapPrecision,10,t),this.onSplatMeshChangedCallback=null,this.createSplatMesh(),this.controls=null,this.perspectiveControls=null,this.orthographicControls=null,this.orthographicCamera=null,this.perspectiveCamera=null,this.showMeshCursor=!1,this.showControlPlane=!1,this.showInfo=!1,this.sceneHelper=null,this.sortWorker=null,this.sortRunning=!1,this.splatRenderCount=0,this.splatSortCount=0,this.lastSplatSortCount=0,this.sortWorkerIndexesToSort=null,this.sortWorkerSortedIndexes=null,this.sortWorkerPrecomputedDistances=null,this.sortWorkerTransforms=null,this.preSortMessages=[],this.runAfterNextSort=[],this.selfDrivenModeRunning=!1,this.splatRenderReady=!1,this.raycaster=new wh,this.infoPanel=null,this.startInOrthographicMode=!1,this.currentFPS=0,this.lastSortTime=0,this.consecutiveRenderFrames=0,this.previousCameraTarget=new I,this.nextCameraTarget=new I,this.mousePosition=new q,this.mouseDownPosition=new q,this.mouseDownTime=null,this.resizeObserver=null,this.mouseMoveListener=null,this.mouseDownListener=null,this.mouseUpListener=null,this.keyDownListener=null,this.sortPromise=null,this.sortPromiseResolver=null,this.splatSceneDownloadPromises={},this.splatSceneDownloadAndBuildPromise=null,this.splatSceneRemovalPromise=null,this.loadingSpinner=new Rs(null,this.rootElement||document.body),this.loadingSpinner.hide(),this.loadingProgressBar=new Ch(this.rootElement||document.body),this.loadingProgressBar.hide(),this.infoPanel=new Sh(this.rootElement||document.body),this.infoPanel.hide(),this.usingExternalCamera=!!(this.dropInMode||this.camera),this.usingExternalRenderer=!!(this.dropInMode||this.renderer),this.initialized=!1,this.disposing=!1,this.disposed=!1,this.disposePromise=null,this.dropInMode||this.init()}createSplatMesh(){this.splatMesh=new Fe(this.splatRenderMode,this.dynamicScene,this.enableOptionalEffects,this.halfPrecisionCovariancesOnGPU,this.devicePixelRatio,this.gpuAcceleratedSort,this.integerBasedSort,this.antialiased,this.maxScreenSpaceSplatSize,this.logLevel,this.sphericalHarmonicsDegree,this.sceneFadeInRateMultiplier,this.kernel2DSize),this.splatMesh.frustumCulled=!1,this.onSplatMeshChangedCallback&&this.onSplatMeshChangedCallback()}init(){this.initialized||(this.rootElement||(this.usingExternalRenderer?this.rootElement=this.renderer.domElement||document.body:(this.rootElement=document.createElement("div"),this.rootElement.style.width="100%",this.rootElement.style.height="100%",this.rootElement.style.position="absolute",document.body.appendChild(this.rootElement))),this.setupCamera(),this.setupRenderer(),this.setupWebXR(this.webXRSessionInit),this.setupControls(),this.setupEventHandlers(),this.threeScene=this.threeScene||new Pi,this.sceneHelper=new Jt(this.threeScene),this.sceneHelper.setupMeshCursor(),this.sceneHelper.setupFocusMarker(),this.sceneHelper.setupControlPlane(),this.loadingProgressBar.setContainer(this.rootElement),this.loadingSpinner.setContainer(this.rootElement),this.infoPanel.setContainer(this.rootElement),this.initialized=!0)}setupCamera(){if(!this.usingExternalCamera){const e=new q;this.getRenderDimensions(e),this.perspectiveCamera=new Ti(qh,e.x/e.y,.1,1e3),this.orthographicCamera=new Mi(e.x/-2,e.x/2,e.y/2,e.y/-2,.1,1e3),this.camera=this.startInOrthographicMode?this.orthographicCamera:this.perspectiveCamera,this.camera.position.copy(this.initialCameraPosition),this.camera.up.copy(this.cameraUp).normalize(),this.camera.lookAt(this.initialCameraLookAt)}}setupRenderer(){if(!this.usingExternalRenderer){const e=new q;this.getRenderDimensions(e),this.renderer=new da({antialias:!1,precision:"highp"}),this.renderer.setPixelRatio(this.devicePixelRatio),this.renderer.autoClear=!0,this.renderer.setClearColor(new ft(0),0),this.renderer.setSize(e.x,e.y),this.resizeObserver=new ResizeObserver(()=>{this.getRenderDimensions(e),this.renderer.setSize(e.x,e.y),this.forceRenderNextFrame()}),this.resizeObserver.observe(this.rootElement),this.rootElement.appendChild(this.renderer.domElement)}}setupWebXR(e){this.webXRMode&&(this.webXRMode===Pt.VR?this.rootElement.appendChild(Ht.createButton(this.renderer,e)):this.webXRMode===Pt.AR&&this.rootElement.appendChild(Wh.createButton(this.renderer,e)),this.renderer.xr.addEventListener("sessionstart",t=>{this.webXRActive=!0}),this.renderer.xr.addEventListener("sessionend",t=>{this.webXRActive=!1}),this.renderer.xr.enabled=!0,this.camera.position.copy(this.initialCameraPosition),this.camera.up.copy(this.cameraUp).normalize(),this.camera.lookAt(this.initialCameraLookAt))}setupControls(){if(this.useBuiltInControls&&this.webXRMode===Pt.None){this.usingExternalCamera?this.camera.isOrthographicCamera?this.orthographicControls=new Ds(this.camera,this.renderer.domElement):this.perspectiveControls=new Ds(this.camera,this.renderer.domElement):(this.perspectiveControls=new Ds(this.perspectiveCamera,this.renderer.domElement),this.orthographicControls=new Ds(this.orthographicCamera,this.renderer.domElement));for(let e of[this.orthographicControls,this.perspectiveControls])e&&(e.listenToKeyEvents(window),e.rotateSpeed=.5,e.maxPolarAngle=Math.PI*.75,e.minPolarAngle=.1,e.enableDamping=!0,e.dampingFactor=.05,e.target.copy(this.initialCameraLookAt),e.update());this.controls=this.camera.isOrthographicCamera?this.orthographicControls:this.perspectiveControls,this.controls.update()}}setupEventHandlers(){this.useBuiltInControls&&this.webXRMode===Pt.None&&(this.mouseMoveListener=this.onMouseMove.bind(this),this.renderer.domElement.addEventListener("pointermove",this.mouseMoveListener,!1),this.mouseDownListener=this.onMouseDown.bind(this),this.renderer.domElement.addEventListener("pointerdown",this.mouseDownListener,!1),this.mouseUpListener=this.onMouseUp.bind(this),this.renderer.domElement.addEventListener("pointerup",this.mouseUpListener,!1),this.keyDownListener=this.onKeyDown.bind(this),window.addEventListener("keydown",this.keyDownListener,!1))}removeEventHandlers(){this.useBuiltInControls&&(this.renderer.domElement.removeEventListener("pointermove",this.mouseMoveListener),this.mouseMoveListener=null,this.renderer.domElement.removeEventListener("pointerdown",this.mouseDownListener),this.mouseDownListener=null,this.renderer.domElement.removeEventListener("pointerup",this.mouseUpListener),this.mouseUpListener=null,window.removeEventListener("keydown",this.keyDownListener),this.keyDownListener=null)}setRenderMode(e){this.renderMode=e}setActiveSphericalHarmonicsDegrees(e){this.splatMesh.material.uniforms.sphericalHarmonicsDegree.value=e,this.splatMesh.material.uniformsNeedUpdate=!0}onSplatMeshChanged(e){this.onSplatMeshChangedCallback=e}onMouseMove(e){this.mousePosition.set(e.offsetX,e.offsetY)}onMouseDown(){this.mouseDownPosition.copy(this.mousePosition),this.mouseDownTime=It()}onMouseClick(e){this.mousePosition.set(e.offsetX,e.offsetY),this.checkForFocalPointChange()}getRenderDimensions(e){this.rootElement?(e.x=this.rootElement.offsetWidth,e.y=this.rootElement.offsetHeight):this.renderer.getSize(e)}setOrthographicMode(e){if(e===this.camera.isOrthographicCamera)return;const t=this.camera,s=e?this.orthographicCamera:this.perspectiveCamera;if(s.position.copy(t.position),s.up.copy(t.up),s.rotation.copy(t.rotation),s.quaternion.copy(t.quaternion),s.matrix.copy(t.matrix),this.camera=s,this.controls){const n=a=>{a.saveState(),a.reset()},r=this.controls,i=e?this.orthographicControls:this.perspectiveControls;n(i),n(r),i.target.copy(r.target),e?Ft.setCameraZoomFromPosition(s,t,r):Ft.setCameraPositionFromZoom(s,t,i),this.controls=i,this.camera.lookAt(this.controls.target)}}adjustForWebXRStereo(e){if(this.camera&&this.webXRActive){const s=this.renderer.xr.getCamera().projectionMatrix.elements[0],n=this.camera.projectionMatrix.elements[0];e.x*=n/s}}isLoadingOrUnloading(){return Object.keys(this.splatSceneDownloadPromises).length>0||this.splatSceneDownloadAndBuildPromise!==null||this.splatSceneRemovalPromise!==null}isDisposingOrDisposed(){return this.disposing||this.disposed}addSplatSceneDownloadPromise(e){this.splatSceneDownloadPromises[e.id]=e}removeSplatSceneDownloadPromise(e){delete this.splatSceneDownloadPromises[e.id]}setSplatSceneDownloadAndBuildPromise(e){this.splatSceneDownloadAndBuildPromise=e}clearSplatSceneDownloadAndBuildPromise(){this.splatSceneDownloadAndBuildPromise=null}addSplatScene(e,t={}){if(this.isLoadingOrUnloading())throw new Error("Cannot add splat scene while another load or unload is already in progress.");if(this.isDisposingOrDisposed())throw new Error("Cannot add splat scene after dispose() is called.");t.progressiveLoad&&this.splatMesh.scenes&&this.splatMesh.scenes.length>0&&(console.log('addSplatScene(): "progressiveLoad" option ignore because there are multiple splat scenes'),t.progressiveLoad=!1);const s=t.format!==void 0&&t.format!==null?t.format:ci(e),n=Ft.isProgressivelyLoadable(s)&&t.progressiveLoad,r=t.showLoadingUI!==void 0&&t.showLoadingUI!==null?t.showLoadingUI:!0;let i=null;r&&(this.loadingSpinner.removeAllTasks(),i=this.loadingSpinner.addTask("Downloading..."));const a=()=>{this.loadingProgressBar.hide(),this.loadingSpinner.removeAllTasks()},l=(m,g,C)=>{if(r)if(C===xe.Downloading)if(m==100)this.loadingSpinner.setMessageForTask(i,"Download complete!");else if(n)this.loadingSpinner.setMessageForTask(i,"Downloading splats...");else{const A=g?`: ${g}`:"...";this.loadingSpinner.setMessageForTask(i,`Downloading${A}`)}else C===xe.Processing&&this.loadingSpinner.setMessageForTask(i,"Processing splats...")};let c=!1,d=0;const h=(m,g)=>{r&&((m&&n||g&&!n)&&(this.loadingSpinner.removeTask(i),!g&&!c&&this.loadingProgressBar.show()),n&&(g?(c=!0,this.loadingProgressBar.hide()):this.loadingProgressBar.setProgress(d)))},u=(m,g,C)=>{d=m,l(m,g,C),t.onProgress&&t.onProgress(m,g,C)},p=(m,g,C)=>{!n&&t.onProgress&&t.onProgress(0,"0%",xe.Processing);const A={rotation:t.rotation||t.orientation,position:t.position,scale:t.scale,splatAlphaRemovalThreshold:t.splatAlphaRemovalThreshold};return this.addSplatBuffers([m],[A],C,g&&r,r,n,n).then(()=>{!n&&t.onProgress&&t.onProgress(100,"100%",xe.Processing),h(g,C)})};return(n?this.downloadAndBuildSingleSplatSceneProgressiveLoad.bind(this):this.downloadAndBuildSingleSplatSceneStandardLoad.bind(this))(e,s,t.splatAlphaRemovalThreshold,p.bind(this),u,a.bind(this),t.headers)}downloadAndBuildSingleSplatSceneStandardLoad(e,t,s,n,r,i,a){const l=this.downloadSplatSceneToSplatBuffer(e,s,r,!1,void 0,t,a),c=Sn(l.abortHandler);return l.then(d=>(this.removeSplatSceneDownloadPromise(l),n(d,!0,!0).then(()=>{c.resolve(),this.clearSplatSceneDownloadAndBuildPromise()}))).catch(d=>{i&&i(),this.clearSplatSceneDownloadAndBuildPromise(),this.removeSplatSceneDownloadPromise(l),c.reject(this.updateError(d,`Viewer::addSplatScene -> Could not load file ${e}`))}),this.addSplatSceneDownloadPromise(l),this.setSplatSceneDownloadAndBuildPromise(c.promise),c.promise}downloadAndBuildSingleSplatSceneProgressiveLoad(e,t,s,n,r,i,a){let l=0,c=!1;const d=[],h=()=>{if(d.length>0&&!c&&!this.isDisposingOrDisposed()){c=!0;const g=d.shift();n(g.splatBuffer,g.firstBuild,g.finalBuild).then(()=>{c=!1,g.firstBuild?f.resolve():g.finalBuild&&(m.resolve(),this.clearSplatSceneDownloadAndBuildPromise()),d.length>0&&je(()=>h())})}},u=(g,C)=>{this.isDisposingOrDisposed()||(C||d.length===0||g.getSplatCount()>d[0].splatBuffer.getSplatCount())&&(d.push({splatBuffer:g,firstBuild:l===0,finalBuild:C}),l++,h())},p=this.downloadSplatSceneToSplatBuffer(e,s,r,!0,u,t,a),f=Sn(p.abortHandler),m=Sn();return this.addSplatSceneDownloadPromise(p),this.setSplatSceneDownloadAndBuildPromise(m.promise),p.then(()=>{this.removeSplatSceneDownloadPromise(p)}).catch(g=>{this.clearSplatSceneDownloadAndBuildPromise(),this.removeSplatSceneDownloadPromise(p);const C=this.updateError(g,"Viewer::addSplatScene -> Could not load one or more scenes");f.reject(C),i&&i(C)}),f.promise}addSplatScenes(e,t=!0,s=void 0){if(this.isLoadingOrUnloading())throw new Error("Cannot add splat scene while another load or unload is already in progress.");if(this.isDisposingOrDisposed())throw new Error("Cannot add splat scene after dispose() is called.");const n=e.length,r=[];let i;t&&(this.loadingSpinner.removeAllTasks(),i=this.loadingSpinner.addTask("Downloading..."));const a=(h,u,p,f)=>{r[h]=u;let m=0;for(let g=0;g<n;g++)m+=r[g]||0;m=m/n,p=`${m.toFixed(2)}%`,t&&f===xe.Downloading&&this.loadingSpinner.setMessageForTask(i,m==100?"Download complete!":`Downloading: ${p}`),s&&s(m,p,f)},l=[],c=[];for(let h=0;h<e.length;h++){const u=e[h],p=u.format!==void 0&&u.format!==null?u.format:ci(u.path),f=this.downloadSplatSceneToSplatBuffer(u.path,u.splatAlphaRemovalThreshold,a.bind(this,h),!1,void 0,p,u.headers);l.push(f),c.push(f.promise)}const d=new Mt((h,u)=>{Promise.all(c).then(p=>{t&&this.loadingSpinner.removeTask(i),s&&s(0,"0%",xe.Processing),this.addSplatBuffers(p,e,!0,t,t,!1,!1).then(()=>{s&&s(100,"100%",xe.Processing),this.clearSplatSceneDownloadAndBuildPromise(),h()})}).catch(p=>{t&&this.loadingSpinner.removeTask(i),this.clearSplatSceneDownloadAndBuildPromise(),u(this.updateError(p,"Viewer::addSplatScenes -> Could not load one or more splat scenes."))}).finally(()=>{this.removeSplatSceneDownloadPromise(d)})},h=>{for(let u of l)u.abort(h)});return this.addSplatSceneDownloadPromise(d),this.setSplatSceneDownloadAndBuildPromise(d),d}downloadSplatSceneToSplatBuffer(e,t=1,s=void 0,n=!1,r=void 0,i,a){try{if(i===_e.Splat||i===_e.KSplat||i===_e.Ply){const l=n?!1:this.optimizeSplatData;if(i===_e.Splat)return br.loadFromURL(e,s,n,r,t,this.inMemoryCompressionLevel,l,a);if(i===_e.KSplat)return Xt.loadFromURL(e,s,n,r,a);if(i===_e.Ply)return dn.loadFromURL(e,s,n,r,t,this.inMemoryCompressionLevel,l,this.sphericalHarmonicsDegree,a)}else if(i===_e.Spz)return xr.loadFromURL(e,s,t,this.inMemoryCompressionLevel,this.optimizeSplatData,this.sphericalHarmonicsDegree,a)}catch(l){throw this.updateError(l,null)}throw new Error(`Viewer::downloadSplatSceneToSplatBuffer -> File format not supported: ${e}`)}static isProgressivelyLoadable(e){return e===_e.Splat||e===_e.KSplat||e===_e.Ply}setupSortWorker(e){if(!this.isDisposingOrDisposed())return new Promise(t=>{const s=this.integerBasedSort?Int32Array:Float32Array,n=e.getSplatCount(),r=e.getMaxSplatCount();this.sortWorker=Gh(r,this.sharedMemoryForWorkers,this.enableSIMDInSort,this.integerBasedSort,this.splatMesh.dynamicMode,this.splatSortDistanceMapPrecision),this.sortWorker.onmessage=i=>{if(i.data.sortDone){if(this.sortRunning=!1,this.sharedMemoryForWorkers)this.splatMesh.updateRenderIndexes(this.sortWorkerSortedIndexes,i.data.splatRenderCount);else{const a=new Uint32Array(i.data.sortedIndexes.buffer,0,i.data.splatRenderCount);this.splatMesh.updateRenderIndexes(a,i.data.splatRenderCount)}this.lastSplatSortCount=this.splatSortCount,this.lastSortTime=i.data.sortTime,this.sortPromiseResolver(),this.sortPromiseResolver=null,this.forceRenderNextFrame(),this.runAfterNextSort.length>0&&(this.runAfterNextSort.forEach(a=>{a()}),this.runAfterNextSort.length=0)}else if(i.data.sortCanceled)this.sortRunning=!1;else if(i.data.sortSetupPhase1Complete){this.logLevel>=_t.Info&&console.log("Sorting web worker WASM setup complete."),this.sharedMemoryForWorkers?(this.sortWorkerSortedIndexes=new Uint32Array(i.data.sortedIndexesBuffer,i.data.sortedIndexesOffset,r),this.sortWorkerIndexesToSort=new Uint32Array(i.data.indexesToSortBuffer,i.data.indexesToSortOffset,r),this.sortWorkerPrecomputedDistances=new s(i.data.precomputedDistancesBuffer,i.data.precomputedDistancesOffset,r),this.sortWorkerTransforms=new Float32Array(i.data.transformsBuffer,i.data.transformsOffset,$.MaxScenes*16)):(this.sortWorkerIndexesToSort=new Uint32Array(r),this.sortWorkerPrecomputedDistances=new s(r),this.sortWorkerTransforms=new Float32Array($.MaxScenes*16));for(let a=0;a<n;a++)this.sortWorkerIndexesToSort[a]=a;if(this.sortWorker.maxSplatCount=r,this.logLevel>=_t.Info){console.log("Sorting web worker ready.");const a=this.splatMesh.getSplatDataTextures(),l=a.covariances.size,c=a.centerColors.size;console.log("Covariances texture size: "+l.x+" x "+l.y),console.log("Centers/colors texture size: "+c.x+" x "+c.y)}t()}}})}updateError(e,t){return e instanceof ho?e:e instanceof Us?new Error("File type or server does not support progressive loading."):t?new Error(t):e}disposeSortWorker(){this.sortWorker&&this.sortWorker.terminate(),this.sortWorker=null,this.sortPromise=null,this.sortPromiseResolver&&(this.sortPromiseResolver(),this.sortPromiseResolver=null),this.preSortMessages=[],this.sortRunning=!1}removeSplatScene(e,t=!0){return this.removeSplatScenes([e],t)}removeSplatScenes(e,t=!0){if(this.isLoadingOrUnloading())throw new Error("Cannot remove splat scene while another load or unload is already in progress.");if(this.isDisposingOrDisposed())throw new Error("Cannot remove splat scene after dispose() is called.");let s;return this.splatSceneRemovalPromise=new Promise((n,r)=>{let i;t&&(this.loadingSpinner.removeAllTasks(),this.loadingSpinner.show(),i=this.loadingSpinner.addTask("Removing splat scene..."));const a=()=>{t&&(this.loadingSpinner.hide(),this.loadingSpinner.removeTask(i))},l=d=>{a(),this.splatSceneRemovalPromise=null,d?r(d):n()},c=()=>this.isDisposingOrDisposed()?(l(),!0):!1;s=this.sortPromise||Promise.resolve(),s.then(()=>{if(c())return;const d=[],h=[],u=[];for(let p=0;p<this.splatMesh.scenes.length;p++){let f=!1;for(let m of e)if(m===p){f=!0;break}if(!f){const m=this.splatMesh.scenes[p];d.push(m.splatBuffer),h.push(this.splatMesh.sceneOptions[p]),u.push({position:m.position.clone(),quaternion:m.quaternion.clone(),scale:m.scale.clone()})}}this.disposeSortWorker(),this.splatMesh.dispose(),this.sceneRevealMode=ts.Instant,this.createSplatMesh(),this.addSplatBuffers(d,h,!0,!1,!0).then(()=>{c()||(a(),this.splatMesh.scenes.forEach((p,f)=>{p.position.copy(u[f].position),p.quaternion.copy(u[f].quaternion),p.scale.copy(u[f].scale)}),this.splatMesh.updateTransforms(),this.splatRenderReady=!1,this.runSplatSort(!0).then(()=>{if(c()){this.splatRenderReady=!0;return}s=this.sortPromise||Promise.resolve(),s.then(()=>{this.splatRenderReady=!0,l()})}))}).catch(p=>{l(p)})})}),this.splatSceneRemovalPromise}start(){if(this.selfDrivenMode)this.webXRMode?this.renderer.setAnimationLoop(this.selfDrivenUpdateFunc):this.requestFrameId=requestAnimationFrame(this.selfDrivenUpdateFunc),this.selfDrivenModeRunning=!0;else throw new Error("Cannot start viewer unless it is in self driven mode.")}stop(){this.selfDrivenMode&&this.selfDrivenModeRunning&&(this.webXRMode?this.renderer.setAnimationLoop(null):cancelAnimationFrame(this.requestFrameId),this.selfDrivenModeRunning=!1)}async dispose(){if(this.isDisposingOrDisposed())return this.disposePromise;let e=[],t=[];for(let s in this.splatSceneDownloadPromises)if(this.splatSceneDownloadPromises.hasOwnProperty(s)){const n=this.splatSceneDownloadPromises[s];t.push(n),e.push(n.promise)}return this.sortPromise&&e.push(this.sortPromise),this.disposing=!0,this.disposePromise=Promise.all(e).finally(()=>{this.stop(),this.orthographicControls&&(this.orthographicControls.dispose(),this.orthographicControls=null),this.perspectiveControls&&(this.perspectiveControls.dispose(),this.perspectiveControls=null),this.controls=null,this.splatMesh&&(this.splatMesh.dispose(),this.splatMesh=null),this.sceneHelper&&(this.sceneHelper.dispose(),this.sceneHelper=null),this.resizeObserver&&(this.resizeObserver.unobserve(this.rootElement),this.resizeObserver=null),this.disposeSortWorker(),this.removeEventHandlers(),this.loadingSpinner.removeAllTasks(),this.loadingSpinner.setContainer(null),this.loadingProgressBar.hide(),this.loadingProgressBar.setContainer(null),this.infoPanel.setContainer(null),this.camera=null,this.threeScene=null,this.splatRenderReady=!1,this.initialized=!1,this.renderer&&(this.usingExternalRenderer||(this.rootElement.removeChild(this.renderer.domElement),this.renderer.dispose()),this.renderer=null),this.usingExternalRenderer||document.body.removeChild(this.rootElement),this.sortWorkerSortedIndexes=null,this.sortWorkerIndexesToSort=null,this.sortWorkerPrecomputedDistances=null,this.sortWorkerTransforms=null,this.disposed=!0,this.disposing=!1,this.disposePromise=null}),t.forEach(s=>{s.abort("Scene disposed")}),this.disposePromise}selfDrivenUpdate(){this.selfDrivenMode&&!this.webXRMode&&(this.requestFrameId=requestAnimationFrame(this.selfDrivenUpdateFunc)),this.update(),this.shouldRender()?(this.render(),this.consecutiveRenderFrames++):this.consecutiveRenderFrames=0,this.renderNextFrame=!1}forceRenderNextFrame(){this.renderNextFrame=!0}update(e,t){this.dropInMode&&this.updateForDropInMode(e,t),!(!this.initialized||!this.splatRenderReady||this.isDisposingOrDisposed())&&(this.controls&&(this.controls.update(),this.camera.isOrthographicCamera&&!this.usingExternalCamera&&Ft.setCameraPositionFromZoom(this.camera,this.camera,this.controls)),this.runSplatSort(),this.updateForRendererSizeChanges(),this.updateSplatMesh(),this.updateMeshCursor(),this.updateFPS(),this.timingSensitiveUpdates(),this.updateInfoPanel(),this.updateControlPlane())}updateForDropInMode(e,t){this.renderer=e,this.splatMesh&&this.splatMesh.setRenderer(this.renderer),this.camera=t,this.controls&&(this.controls.object=t),this.init()}updateControlPlane(){this.showControlPlane?(this.sceneHelper.setControlPlaneVisibility(!0),this.sceneHelper.positionAndOrientControlPlane(this.controls.target,this.camera.up)):this.sceneHelper.setControlPlaneVisibility(!1)}getSplatMesh(){return this.splatMesh}getSplatScene(e){return this.splatMesh.getScene(e)}getSceneCount(){return this.splatMesh.getSceneCount()}isMobile(){return navigator.userAgent.includes("Mobi")}};let Kt=Ft;_(Kt,"setCameraPositionFromZoom",function(){const e=new I;return function(t,s,n){const r=1/(s.zoom*.001);e.copy(n.target).sub(t.position).normalize().multiplyScalar(r).negate(),t.position.copy(n.target).add(e)}}()),_(Kt,"setCameraZoomFromPosition",function(){const e=new I;return function(t,s,n){const r=e.copy(n.target).sub(s.position).length();t.zoom=1/(r*.001)}}());class js extends Ia{constructor(e={}){super(),e.selfDrivenMode=!1,e.useBuiltInControls=!1,e.rootElement=null,e.dropInMode=!0,e.camera=void 0,e.renderer=void 0,this.viewer=new Kt(e),this.splatMesh=null,this.updateSplatMesh(),this.callbackMesh=js.createCallbackMesh(),this.add(this.callbackMesh),this.callbackMesh.onBeforeRender=js.onBeforeRender.bind(this,this.viewer),this.viewer.onSplatMeshChanged(()=>{this.updateSplatMesh()})}updateSplatMesh(){this.splatMesh!==this.viewer.splatMesh&&(this.splatMesh&&this.remove(this.splatMesh),this.splatMesh=this.viewer.splatMesh,this.add(this.viewer.splatMesh))}addSplatScene(e,t={}){return t.showLoadingUI!==!1&&(t.showLoadingUI=!0),this.viewer.addSplatScene(e,t)}addSplatScenes(e,t){return t!==!1&&(t=!0),this.viewer.addSplatScenes(e,t)}getSplatScene(e){return this.viewer.getSplatScene(e)}removeSplatScene(e,t=!0){return this.viewer.removeSplatScene(e,t)}removeSplatScenes(e,t=!0){return this.viewer.removeSplatScenes(e,t)}getSceneCount(){return this.viewer.getSceneCount()}setActiveSphericalHarmonicsDegrees(e){this.viewer.setActiveSphericalHarmonicsDegrees(e)}async dispose(){return await this.viewer.dispose()}static onBeforeRender(e,t,s,n){e.update(t,n)}static createCallbackMesh(){const e=new Bn(1,8,8),t=new Lt;t.colorWrite=!1,t.depthWrite=!1;const s=new Le(e,t);return s.frustumCulled=!1,s}}var Jh=Object.defineProperty,ep=Object.getOwnPropertyDescriptor,Cs=(o,e,t,s)=>{for(var n=s>1?void 0:s?ep(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&Jh(e,t,n),n};class qe extends j{constructor(){super(...arguments),this._viewer=null,this.path=null,this.dynamicObject=!1,this.progressiveLoading=!0,this.showLoadingUI=!1,this.autoCenter=!1,this._lastLoaded=null,this._isLoading=!1}static async downloadOptimizedSplat(e,t){if(e instanceof zt&&(e=e.url),e.endsWith(".ksplat"))return console.error("File is already a .ksplat file"),null;let s=e.split("/").pop(),n=s==null?void 0:s.lastIndexOf(".");n&&(s=s==null?void 0:s.substring(0,n)),console.debug(`Request ksplat download: ${s} from ${e}`);const r=1,i=1,a=1,l=!0;return dn.loadFromURL(e,t==null?void 0:t.onProgress,!1,!1,a,r,l,i).then(c=>(console.debug("Downloaded optimized splat"),Xt.downloadFile(c,`${s||"converted_file"}.ksplat`),c)).catch(c=>(console.error(c),null))}onEnable(){this._viewer=new js({enableSIMDInSort:!0,integerBasedSort:!0,gpuAcceleratedSort:!1,sharedMemoryForWorkers:window.crossOriginIsolated,dynamicScene:this.dynamicObject,halfPrecisionCovariancesOnGPU:!0,sphericalHarmonicsDegree:0,freeIntermediateSplatData:!0,inMemoryCompressionLevel:2,splatRenderMode:0,splatSortDistanceMapPrecision:16}),Ct()&&console.debug("SplatRenderer",this.path,this),this._viewer.layers.set(2),this.gameObject.add(this._viewer);let e=this.path;e&&this.load(e).then(t=>{Ct()&&console.debug("Scene loaded",t,this._viewer)})}onDisable(){this._viewer&&Zo(this._viewer),this._viewer=null}getBoundingBox(){var t,s;return((s=(t=this._viewer)==null?void 0:t.splatMesh)==null?void 0:s.computeBoundingBox(!0,0))||null}get splatMesh(){var e;return((e=this._viewer)==null?void 0:e.splatMesh)||null}async load(e){const t=this.autoCenter;return this.internalLoad(e).then(s=>{var n;if(t&&s){const r=this.getBoundingBox();if(r){const i=r.getCenter(Me());(n=this.splatMesh)==null||n.position.sub(i)}}return s})}async internalLoad(e){var t;if(typeof e=="object"&&(e=e.url),!this._viewer)return!1;if(this._lastLoaded===e)return console.debug("Scene already loaded"),!1;if(this._isLoading)return ae("Please wait for the current scene to load before loading another scene."),!1;this._isLoading=!0,this._lastLoaded=e;try{const s=this._viewer.viewer.getSceneCount();for(let i=s-1;i>=0;i--)await this._viewer.viewer.removeSplatScene(0);console.debug("Loading splat scene",e);const n=this.progressiveLoading;return n&&((t=this._viewer)!=null&&t.viewer.dynamicScene)&&console.warn("Progressive loading is not supported with dynamic scene"),new Promise(async i=>{var l;const a=(l=this._viewer)==null?void 0:l.viewer.addSplatScene(e,{showLoadingUI:this.showLoadingUI,showInfo:!1,showControlPlane:!1,progressiveLoad:n,splatAlphaRemovalThreshold:.9,rotation:[1,0,0,0],onProgress:(c,d,h)=>{console.debug(h,d,e),h===1||(h===2?(console.debug("Finished loading!",c),this._isLoading=!1,i(!0)):h>1&&(this._isLoading=!1,i(!1)))}});if(!a)return console.error("Failed to load splat scene",e),this._isLoading=!1,i(!1);await a.promise,i(!0)}).then(()=>(this._isLoading=!1,!0))}catch(s){console.error(s)}finally{this._isLoading=!1}return!1}}Cs([P(zt)],qe.prototype,"path",2);Cs([P()],qe.prototype,"dynamicObject",2);Cs([P()],qe.prototype,"progressiveLoading",2);Cs([P()],qe.prototype,"showLoadingUI",2);Cs([P()],qe.prototype,"autoCenter",2);var tp=Object.defineProperty,sp=Object.getOwnPropertyDescriptor,yo=(o,e,t,s)=>{for(var n=s>1?void 0:s?sp(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&tp(e,t,n),n};class wr extends j{constructor(){super(...arguments),this.urls=[],this.downloadButton=!0}awake(){const e=Z.findObjectOfType(qe),t=$e("splat");e&&t&&typeof t=="string"&&(e.path=t)}start(){const e=Z.findObjectOfType(qe);if(this.urls.length){const t=document.createElement("select");t.style.maxWidth="24ch";for(const s of this.urls){const n=document.createElement("option");n.value=s,n.textContent=`Select: ${new URL(s).pathname.split("/").pop()}`,t.appendChild(n),e&&e.path===s&&(n.selected=!0)}t.addEventListener("change",()=>{const s=t.value;Vs("splat",s);const n=Z.findObjectOfType(qe);n&&n.load(s)}),this.context.menu.appendChild(t)}if(this.downloadButton){const t=document.createElement("button");t.textContent="Download KSplat",t.addEventListener("click",()=>{const s=Z.findObjectOfType(qe);s?s.path&&(t.disabled=!0,qe.downloadOptimizedSplat(s.path).finally(()=>{t.disabled=!1})):console.error("No SplatRenderer found")}),this.context.menu.appendChild(t)}}onEnable(){super.onEnable()}}yo([P(Array)],wr.prototype,"urls",2);yo([P()],wr.prototype,"downloadButton",2);z.add("SplatRenderer",qe);z.add("SplatRendererMenu",wr);class np extends j{constructor(){super(...arguments),this.targetRotation=0,this.maxRotation=.1}update(){const e=this.context.input.getPointerPositionRC(0);e&&(this.targetRotation=e.x*this.maxRotation,this.gameObject.rotation.y=ve.lerp(this.gameObject.rotation.y,this.targetRotation,this.context.time.deltaTime))}}var rp=Object.defineProperty,ip=Object.getOwnPropertyDescriptor,hn=(o,e,t,s)=>{for(var n=s>1?void 0:s?ip(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&rp(e,t,n),n};class Ss extends j{constructor(){super(...arguments),this.startOffset=0,this.lerpSpeed=2.5,this.startLerpSpeed=.5}start(){const e=this.context.mainCameraComponent;if(!e)return;const t=e.fieldOfView;new ResizeObserver(n=>{let r=t;const i=ve.clamp(this.context.domWidth/this.context.domHeight/1.77777777,.25,3.5);r/=ve.lerp(i,1,.2),e.fieldOfView=r}).observe(this.context.domElement)}onEnable(){this.updateTimelineCoroutine=this.updateTimeline(),this.startCoroutine(this.updateTimelineCoroutine),this.context.scene.backgroundBlurriness=1}onDisable(){this.stopCoroutine(this.updateTimelineCoroutine)}*updateTimeline(){if(yield bi(1),!!this.timeline){for(this.timeline.play();this.timeline.time<this.startOffset;)yield;for(;this.enabled;){if(this.timeline){this.timeline.isPlaying&&this.timeline.pause();const e=this.timeline.duration-this.startOffset,t=window.scrollY/(document.body.scrollHeight-window.innerHeight);this.timeline.time=ve.lerp(this.timeline.time,t*e+this.startOffset,this.context.time.deltaTime*this.lerpSpeed),this.timeline.evaluate()}yield}}}}hn([X(qs)],Ss.prototype,"timeline",2);hn([X()],Ss.prototype,"startOffset",2);hn([X()],Ss.prototype,"lerpSpeed",2);hn([X()],Ss.prototype,"startLerpSpeed",2);var op=Object.defineProperty,ap=Object.getOwnPropertyDescriptor,lp=(o,e,t,s)=>{for(var n=s>1?void 0:s?ap(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&op(e,t,n),n};class xo extends j{constructor(){super(...arguments),this._slider=null}onEnable(){this.timeline&&(this._slider||(this._slider=document.createElement("input"),this._slider.type="range",this._slider.min="0",this._slider.max=this.timeline.duration.toString(),this._slider.step="0.0001",this._slider.value=(this.timeline.duration*.2).toString(),this._slider.style.cssText=`
            position: absolute;
            bottom: 8%;
            margin: 0 auto;
            width: 50%;
            left: 25%;
            `,this._slider.oninput=()=>{this.timeline.time=parseFloat(this._slider.value),this.timeline.evaluate()},this.timeline.pause(),this.timeline.playOnAwake=!1,this.timeline.time=parseFloat(this._slider.value),this.timeline.evaluate()),this.context.domElement.appendChild(this._slider))}onDisable(){var e;(e=this._slider)==null||e.remove()}}lp([P(qs)],xo.prototype,"timeline",2);var cp=Object.defineProperty,dp=Object.getOwnPropertyDescriptor,pn=(o,e,t,s)=>{for(var n=s>1?void 0:s?dp(e,t):e,r=o.length-1,i;r>=0;r--)(i=o[r])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&cp(e,t,n),n};class ys extends j{constructor(){super(...arguments),this.scrollSpeed=.5,this.mobileScrollFactor=2,this.lerpSpeed=2.5,this.targetTime=0}start(){var t;(t=this.timeline)==null||t.pause(),window.addEventListener("wheel",s=>this.updateTime(s.deltaY));let e=-1;window.addEventListener("touchstart",s=>{e=s.touches[0].clientY}),window.addEventListener("touchmove",s=>{let n=s.touches[0].clientY-e;n*=this.mobileScrollFactor,n/=window.devicePixelRatio,this.updateTime(-n),e=s.touches[0].clientY})}updateTime(e){this.timeline&&(this.targetTime+=e*.01*this.scrollSpeed,this.targetTime=ve.clamp(this.targetTime,0,this.timeline.duration))}onBeforeRender(){this.timeline&&(this.timeline.pause(),this.timeline.time=ve.lerp(this.timeline.time,this.targetTime,this.lerpSpeed*this.context.time.deltaTime),this.timeline.evaluate())}}pn([X(qs)],ys.prototype,"timeline",2);pn([X()],ys.prototype,"scrollSpeed",2);pn([X()],ys.prototype,"mobileScrollFactor",2);pn([X()],ys.prototype,"lerpSpeed",2);z.add("MouseRotation",np);z.add("ScrollTimeline",Ss);z.add("ScrollTimelineSlider",xo);z.add("ScrollTimeline_2",ys);
